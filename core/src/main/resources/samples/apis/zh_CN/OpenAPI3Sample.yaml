openapi: 3.0.1
info:
  title: OpenAPI3 示例
  description: |-
    这是一个基于 OpenAPI 规范的 AngusTester 接口示例。
    您可以了解更多关于 AngusTester 的信息在网站：https://www.xcan.cloud/help。
  termsOfService: http://www.xcan.cloud/terms/
  contact:
    name: XCan Cloud
    email: technical_support@xcancloud.com
  license:
    name: XCBL 1.0
    url: http://www.xcan.company/licenses/xcbl-1.0.txt
  version: "1.0"
externalDocs:
  description: 了解有关 OpenAPI 规范的更多信息
  url: http://swagger.io
tags:
  - name: user
    description: 用户接口
  - name: testing
    description: 测试接口
servers:
  - url: "http://{env}-sample.angusmock.cloud:30010"
    variables:
      env:
        default: serv01
        enum:
          - serv01
          - serv02
paths:
  /user/signup:
    post:
      tags:
        - user
      summary: 用户注册接口
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: "admin"
                password:
                  type: string
                  example: "admin"
      responses:
        '200':
          description: 处理成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "S"
                  msg:
                    type: string
                    example: "Success"
        '400':
          description: 用户名或密码参数缺失
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "E0"
                  msg:
                    type: string
                    example: "Username and password are required"
  /user/signin:
    post:
      tags:
        - user
      summary: 用户登录接口
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: "admin"
                password:
                  type: string
                  example: "admin"
      responses:
        '200':
          description: 处理成功
          content:
            text/plain:
              schema:
                type: string
                example: "Success"
  /user/{username}:
    get:
      summary: 查询用户信息接口
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
            example: "admin"
      responses:
        '200':
          description: 处理成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "S"
                  msg:
                    type: string
                    example: "Success"
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
                        example: "181622ea2a1f4934ad6bec0308390da9"
                      expires_in:
                        type: integer
                        format: int32
                        example: 3599
                      token_type:
                        type: string
                        example: "bearer"
        '400':
          description: 无效的用户名或密码
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "E0"
                  msg:
                    type: string
                    example: "Login account or password error"
    put:
      tags:
        - user
      summary: 修改用户信息接口
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
            example: "admin"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                age:
                  type: string
                  example: "S"
                hobbies:
                  type: string
                  example: "swimming, playing basketball"
                avatar:
                  type: string
                  example: "http://serv01-sample.angusmock.cloud:30010/user/admin/avatar.png"
      responses:
        '200':
          description: 处理成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "S"
                  msg:
                    type: string
                    example: "Success"
  /user/{username}/avatar.png:
    get:
      tags:
        - user
      summary: 下载用户头像接口
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
            example: "admin"
      responses:
        '200':
          description: Successful operation
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
  /benchmark:
    get:
      tags:
        - testing
      summary: 一个基准性能测试接口
      responses:
        '200':
          description: 处理成功
          content:
            text/plain:
              schema:
                type: string
                example: "Success"
  /business:
    get:
      tags:
        - testing
      summary: 模拟业务处理延迟接口
      parameters:
        - name: delay
          in: query
          schema:
            type: integer
            format: int32
            example: 1
      responses:
        '200':
          description: 处理成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "S"
                  msg:
                    type: string
                    example: "Respond with a delay of 1 millisecond."
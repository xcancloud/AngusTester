specification: angus/1.0.0
info:
  name: Simple jdbc performance testing
  description: This is an example of jdbc performance testing.
type: TEST_CUSTOMIZATION
plugin: Jdbc
configuration:
  duration: 1min
  thread:
    threads: 200
  variables:
    - name: username
      description: An example of execution configuration variables
      value: '@Uuid()'
      enabled: true
task:
  arguments:
    ignoreAssertions: true
    jdbcSetting:
      type: MYSQL
      driverClassName: com.mysql.cj.jdbc.Driver
      jdbcUrl: jdbc:mysql://mysql01-sample.angusmock.cloud:3306/xcan_mockdata_sample
      username: sample
      password: 123456
      isolation: TRANSACTION_REPEATABLE_READ
      pool:
        name: hikari
        maximumPoolSize: 32
        minimumIdle: 10
        maxWaitTimeoutMillis: 60000
  pipelines:
    - target: TRANS_START
      name: BusinessTransaction
      description: Create user starts transaction
      enabled: true
    - target: JDBC
      name: InsertUser
      description: Save user by insert statement
      enabled: true
      beforeName: BusinessTransaction
      transactionName: BusinessTransaction
      type: UPDATE
      sql: "INSERT INTO `user` (username, password) VALUES ('{username}', '@String(32)')"
      timeoutInSecond: 60
    - target: WAITING_TIME
      name: ThinkTime
      description: Waiting 1 - 10 ms
      enabled: true
      beforeName: InsertUser
      transactionName: BusinessTransaction
      minWaitTimeInMs: 1
      maxWaitTimeInMs: 10
    - target: JDBC
      name: UpdateUser
      description: "Modify user by prepared update statement, it is equivalent to static\
      \ statement \"UPDATE `user` SET password = 'password123' WHERE username = 'JohnDoe'\""
      enabled: true
      beforeName: ThinkTime
      transactionName: BusinessTransaction
      type: PREPARED_UPDATE
      sql: UPDATE `user` SET password = ? WHERE username = ?
      timeoutInSecond: 60
      arguments:
        - type: varchar
          value: password123
          inout: IN
        - type: varchar
          value: "{username}"
          inout: IN
      assertions:
        - name: Assert that affected rows is 1.
          enabled: true
          type: BODY
          assertionCondition: EQUAL
          expected: 1
    - target: TRANS_END
      name: EndTransaction
      enabled: true
      beforeName: UpdateUser
      transactionName: BusinessTransaction
    - target: JDBC
      name: QueryUser
      description: Query user by select statement
      enabled: true
      beforeName: EndTransaction
      type: SELECT
      sql: "SELECT * FROM `user` WHERE username = '{username}'"
      maxResultRows: 1
      timeoutInSecond: 60
      assertions:
        - name: Assert that the query result includes `JohnDoe`.
          enabled: true
          type: BODY
          assertionCondition: CONTAIN
          expected: "{username}"
        - name: Assert that the query SQL response time does not exceed `100` milliseconds.
          enabled: true
          type: DURATION
          assertionCondition: LESS_THAN
          expected: 100
    - target: JDBC
      name: DeleteUser
      description: Delete user by delete statement
      enabled: true
      beforeName: QueryUser
      type: UPDATE
      sql: "DELETE FROM `user` WHERE username = '{username}'"
      timeoutInSecond: 60

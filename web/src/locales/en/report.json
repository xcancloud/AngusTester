{
  "reportHome": {
    "messages": {
      "deleteSuccess": "Delete successful",
      "getTokenFailed": "Failed to get token",
      "shareLinkCopied": "Share link copied to clipboard",
      "generatingReport": "Generating report"
    },
    "modal": {
      "deleteReport": "Delete Report",
      "confirmDelete": "Are you sure you want to delete report 「{name}」?",
      "reportPermission": "Report Permission"
    },
    "actions": {
      "generateNow": "Generate Now"
    },
    "table": {
      "template": "Template",
      "resourceName": "Resource Name",
      "resourceType": "Resource Type",
      "resourceId": "Resource ID",
      "nextGenerateTime": "Next Generate Time"
    },
    "permission": {
      "onTips": "After enabling permission control, manual authorization is required for corresponding operation permissions.",
      "offTips": "No permission restrictions, all users in the account can view and operate, permission control is not enabled by default."
    },
    "globalAuth": {
      "title": "Report Permission",
      "description": "Grant operation permissions for specified 'functions' to users, departments, and groups. 'View' permission is required when granting permissions. Users can only authorize functions they have permission to authorize.",
      "tabs": {
        "user": "User",
        "dept": "Department",
        "group": "Group"
      },
      "authSet": {
        "searchPlaceholder": "Search name"
      },
      "groupSet": {
        "searchUser": "Search user",
        "searchDept": "Search department",
        "searchGroup": "Search group"
      }
    },
    "summary": {
      "description": "Through 'reports', teams can comprehensively summarize all aspects of development activities, including progress, efficiency, quality, execution status, result analysis, etc. This helps improve transparency and communication, providing strong support for successful project delivery.",
      "workTitle": "Here you and your team can complete the following work:",
      "features": {
        "generateReport": "Generate reports based on report templates at specified times and notify relevant personnel through events.",
        "viewReport": "View reports I added or reports authorized to me and their content."
      }
    },
    "searchPanel": {
      "quickQuery": "Quick Query",
      "menuItems": {
        "all": "All",
        "myAdded": "My Added",
        "myModified": "My Modified",
        "last1Day": "Last Day",
        "last3Days": "Last 3 Days",
        "last7Days": "Last 7 Days"
      },
      "searchOptions": {
        "namePlaceholder": "Search name, description",
        "resourceTypePlaceholder": "Select resource type",
        "resourcePlaceholder": "Select resource",
        "creatorPlaceholder": "Creator",
        "createTimeFrom": "Create time from",
        "createTimeTo": "Create time to"
      },
      "resourceSelect": {
        "project": "Select project",
        "service": "Select service",
        "api": "Select API",
        "task": "Select task",
        "sprint": "Select sprint",
        "plan": "Select plan",
        "case": "Select case",
        "execution": "Select execution",
        "scenario": "Select scenario"
      },
      "sortMenus": {
        "byCreateTime": "By create time",
        "byCreator": "By creator"
      },
      "actions": {
        "addReport": "Add Report",
        "reportPermission": "Report Permission"
      }
    },
    "chart": {
      "categories": {
        "allReports": "All Reports",
        "project": "Project",
        "functional": "Functional",
        "api": "API",
        "scenario": "Scenario",
        "task": "Task",
        "execution": "Execution"
      }
    },
    "reportDetail": {
      "title": "View Report",
      "tabs": {
        "basic": "Basic Info",
        "content": "Content",
        "record": "Report Record",
        "activity": "Activity"
      },
      "generateTime": {
        "nextGenerateTime": "Next Generate Time",
        "dayOfMonth": "Day"
      },
      "content": {
        "organizationPersonnel": "Organization Personnel",
        "time": "Time",
        "project": "Project",
        "case": "Case",
        "content": "Content",
        "contentHint": "The following is the report output content directory information.",
        "memberTypes": {
          "user": "User",
          "dept": "Department",
          "group": "Group"
        }
      },
      "generateRecord": {
        "reportName": "Report Name",
        "template": "Template",
        "generateTime": "Generate Time",
        "deleteRecord": "Delete Report Record",
        "confirmDelete": "Confirm delete report record「{name}」?",
        "deleteSuccess": "Delete successful"
      }
    }
  },
  "reportAdd": {
    "form": {
      "namePlaceholder": "Report name, maximum 100 characters",
      "versionPlaceholder": "Report version, default 1.0.0, maximum 20 characters",
      "descriptionPlaceholder": "Report description, use description to explain the content and purpose of this report, or add links to other resources, maximum 200 characters"
    },
    "tabs": {
      "basic": "Basic Info",
      "content": "Content"
    },
    "notifications": {
      "updateSuccess": "Update report successfully",
      "addSuccess": "Add report successfully"
    },
    "menus": {
      "project": {
        "label": "Project Report",
        "progress": {
          "label": "Project Progress Report",
          "description": "Report project task, functional test, API test, scenario test four parts of completion progress."
        }
      },
      "task": {
        "label": "Task Report",
        "sprint": {
          "label": "Sprint Report",
          "description": "Report sprint information, development task completion progress, iteration and assignee summary statistics information."
        },
        "task": {
          "label": "Task Report",
          "description": "Report the processing results and detailed information of a single task."
        }
      },
      "functional": {
        "label": "Functional Test Report",
        "plan": {
          "label": "Test Plan Report",
          "description": "Report test plan information, case test progress, test plan and test person summary statistics information."
        },
        "case": {
          "label": "Test Case Report",
          "description": "Report the test results and detailed information of a single test case."
        }
      },
      "apis": {
        "label": "API Test Report",
        "services": {
          "label": "Service Test Result Report",
          "description": "Report service information, summary statistics and API test results information under the service."
        },
        "apis": {
          "label": "API Test Result Report",
          "description": "Report API information, functional test, performance test, stability test results."
        }
      },
      "scenario": {
        "label": "Scenario Test Report",
        "result": {
          "label": "Scenario Test Result Report",
          "description": "Report scenario information, functional test, performance test, stability test results."
        }
      },
      "execution": {
        "label": "Execution Report",
        "functional": {
          "label": "Functional Test Report",
          "description": "Report the execution functional test sampling index detailed results."
        },
        "performance": {
          "label": "Performance Test Report",
          "description": "Report the execution performance test sampling index detailed results."
        },
        "stability": {
          "label": "Stability Test Report",
          "description": "Report the execution stability test sampling index detailed results."
        },
        "customization": {
          "label": "Customization Test Report",
          "description": "Report the execution customization test sampling index detailed results."
        }
      }
    },
    "execPerfContent": {
      "filter": "Filter",
      "execution": "Execution",
      "executionPlaceholder": "Select execution",
      "content": "Content",
      "contentHints": "The following is the report output content directory information.",
      "contentTree": {
        "exec": "Execution information",
        "basic": "Execution basic information",
        "total": "Summary results",
        "sampling": "Sampling number",
        "qps": "Transaction number",
        "minmax": "Minimum/Maximum/Average",
        "qps/s": "Transactions per second",
        "errRate0": "Error rate",
        "percent": "P50/P75/P90/P99/P999",
        "download/s0": "Download/second",
        "upload/s0": "Upload/second",
        "indicatorChart": "Sampling index time series chart",
        "tps": "Throughput",
        "thread0": "Concurrency",
        "response": "Response time",
        "error0": "Error",
        "statusCode": "Status code (only HTTP protocol)",
        "node": "Node resource",
        "nodeTips": "When there is an application node, the application node resource data is displayed, and when there is no application node, the execution node resource data is displayed. When there are multiple nodes, only the data of the first node is displayed.",
        "superposition": "Superposition analysis",
        "QPS/TPS": "Throughput (QPS/TPS)",
        "QPS/s": "Transactions per second",
        "vu": "Concurrency (VU)",
        "thread": "Thread number",
        "rt": "Response time (RT, milliseconds)",
        "average": "Average",
        "error": "Error (ERROR)",
        "errRate": "Error rate",
        "other": "Other information",
        "dispatch": "Execution scheduling log",
        "dispatchTips": "When there are multiple nodes, only the log of the first execution node is displayed.",
        "samplingLog": "Execution sampling log",
        "samplingTips": "When there are multiple nodes, only the log of the first execution node is displayed, and a maximum of 10000 lines of log information is supported."
      }
    },
    "execFuncContent": {
      "filter": "Filter",
      "execution": "Execution",
      "executionPlaceholder": "Select execution",
      "content": "Content",
      "contentHints": "The following is the report output content directory information.",
      "contentTree": {
        "exec": "Execution information",
        "basic": "Execution basic information",
        "sprint": "Iteration result",
        "log": "Log information",
        "dispatch": "Execution scheduling log",
        "dispatchTips": "When there are multiple nodes, only the log of the first execution node is displayed.",
        "sampling": "Execution sampling log",
        "samplingTips": "When there are multiple nodes, only the log of the first execution node is displayed, and a maximum of 10000 lines of log information is supported."
      }
    },
    "basic": {
      "options": {
        "user": "Report person",
        "version": "Report version",
        "reportContacts": "Report contacts",
        "description": "Report description",
        "reportCopyright": "Report copyright",
        "otherInformation": "Other information",
        "watermark": "Add watermark to report content"
      },
      "placeholders": {
        "reportContacts": "Contact information, the default is the current user name and email, the maximum length is 200 characters",
        "reportCopyright": "Report copyright, declare copyright ownership, usage restrictions, etc., the maximum length is 200 characters",
        "otherInformation": "Other information, used to supplement the report, the maximum length is 200 characters",
        "watermark": "Watermark text, the default is the current tenant name, the maximum length is 100 characters"
      }
    },
    "taskContent": {
      "filter": "Filter",
      "sprintPlaceholder": "Select sprint",
      "taskPlaceholder": "Select task",
      "content": "Content",
      "contentHints": "The following is the report output content directory information.",
      "contentTree": {
        "basic": "Basic information",
        "user": "User information",
        "date": "Date information",
        "description": "Description",
        "subTask": "Sub-task",
        "task": "Task",
        "cases": "Case",
        "test": "Test information",
        "testTips": "Test type task display.",
        "testSource": "Test resource",
        "exec": "Execution information",
        "result": "Test result",
        "remark": "Remark",
        "activity": "Activity",
        "comment": "Comment"
      }
    },
    "sprintContent": {
      "filter": "Filter",
      "sprintPlaceholder": "Select sprint",
      "organization": "Organization",
      "userPlaceholder": "Select user",
      "deptPlaceholder": "Select department",
      "groupPlaceholder": "Select group",
      "organizationHints": "Used to output project reports for specified organizations or personnel.",
      "time": "Time",
      "timeHints": "Used to output project reports for specified time ranges.",
      "content": "Content",
      "contentHints": "The following is the report output content directory information.",
      "contentTree": {
        "sprintDetail": "Sprint information",
        "basic": "Basic information",
        "taskDetail": "Acceptance criteria",
        "meetings": "Meeting record",
        "others": "Other information",
        "task": "Development task",
        "taskTotal": "Task summary results",
        "taskburndown": "Burn-down chart",
        "groupedTotal": "Grouped statistics",
        "assigneeId": "Assignee summary results",
        "assigneeId_taskTotal": "Task summary results",
        "assigneeId_burndown": "Burn-down chart",
        "assigneeId_groupedTotal": "Grouped statistics"
      }
    },
    "servicesContent": {
      "filter": "Filter",
      "servicePlaceholder": "Select service",
      "content": "Content",
      "contentHints": "The following is the report output content directory information.",
      "contentTree": {
        "serviceDetail": "Service information",
        "apisGroupedTotal": "Interface grouped statistics",
        "serviceTotal": "Test result summary",
        "testProcess": "Test progress",
        "testApi": "Test interface statistics",
        "testStatus": "Test status statistics"
      }
    },
    "scenarioContent": {
      "filter": "Filter",
      "scenario": "Scenario",
      "scenarioPlaceholder": "Select scenario",
      "content": "Content",
      "contentHints": "The following is the report output content directory information.",
      "contentTree": {
        "scenario": "Scenario basic information",
        "scenarioTotal": "Scenario test summary results",
        "scenarioTestDetail": "Scenario test result detailed information",
        "funcTest": "Functional test result",
        "perfTest": "Performance test result",
        "stabilityTest": "Stability test result",
        "info": "Test basic information",
        "apis": "Test interface statistics",
        "apisDetail": "Test interface result detailed information",
        "detail": "Detailed test result",
        "indicator": "Test indicator"
      }
    },
    "projectProcessContent": {
      "filter": "Filter",
      "organization": "Organization personnel",
      "userPlaceholder": "Select user",
      "deptPlaceholder": "Select department",
      "groupPlaceholder": "Select group",
      "organizationHints": "Used to output project reports for specified organizations or personnel.",
      "time": "Time",
      "timeHints": "Used to output project reports for specified time ranges.",
      "content": "Content",
      "contentHints": "The following is the report output content directory information.",
      "contentTree": {
        "projectInfo": "Project information",
        "task": "Development task",
        "taskTotal": "Task summary results",
        "taskburndown": "Task burn-down chart",
        "taskgroup": "Task grouped statistics",
        "func": "Functional test",
        "funcTotal": "Test case summary results",
        "funcReviewTotal": "Test case review summary results",
        "caseburndown": "Test case burn-down chart",
        "casegroup": "Test case grouped statistics",
        "apis": "API test",
        "apisTotal": "API test summary results",
        "apisgroup": "API grouped statistics",
        "scenario": "Scenario test",
        "scenarioTotal": "Scenario test summary results",
        "scenariogroup": "Scenario grouped statistics"
      }
    },
    "planContent": {
      "filter": "Filter",
      "testPlan": "Test plan",
      "testPlanPlaceholder": "Select plan",
      "organization": "Organization personnel",
      "userPlaceholder": "Select user",
      "deptPlaceholder": "Select department",
      "groupPlaceholder": "Select group",
      "organizationHints": "Used to output project reports for specified organizations or personnel.",
      "time": "Time",
      "timeHints": "Used to output project reports for specified time ranges.",
      "content": "Content",
      "contentHints": "The following is the report output content directory information.",
      "contentTree": {
        "planDetail": "Plan information",
        "basic": "Basic information",
        "tester": "Test personnel and responsibilities",
        "objective": "Test objective",
        "scope": "Test scope",
        "acceptanceCriteria": "Acceptance criteria",
        "other": "Other information",
        "caseTotal": "Test case summary results",
        "casesTotal": "Test summary results",
        "casesReviewTotal": "Review summary results",
        "hurndowm": "Burn-down chart",
        "grouped": "Grouped statistics",
        "resultkDetail": "Test person summary results",
        "testTotal": "Test summary results",
        "reviewTotal": "Review summary results",
        "groupedTotal": "Grouped statistics"
      }
    },
    "caseContent": {
      "filter": "Filter",
      "testPlan": "Test Plan",
      "testPlanPlaceholder": "Select plan",
      "testCase": "Test Case",
      "testCasePlaceholder": "Select case",
      "content": "Content",
      "contentHints": "The following is the report output content directory information.",
      "contentTree": {
        "basic": "Basic Information",
        "user": "User Information",
        "date": "Date Information",
        "condition": "Precondition",
        "steps": "Test Steps",
        "description": "Description",
        "preview": "Review Information",
        "test": "Test Information",
        "task": "Task",
        "cases": "Case",
        "activity": "Activity",
        "comment": "Comment"
      }
    },
    "apisContent": {
      "filter": "Filter",
      "servicePlaceholder": "Select service",
      "apiPlaceholder": "Select API",
      "content": "Content",
      "contentHints": "The following is the report output content directory information.",
      "contentTree": {
        "apisBasic": "API basic information",
        "apisTest": "API test summary results",
        "apisDetail": "API test result detailed information",
        "funcTest": "Functional test result",
        "perfTest": "Performance test result",
        "stabilityTest": "Stability test result",
        "info": "Test basic information",
        "cases": "Test case statistics",
        "casesDetail": "Test case result detailed information",
        "detail": "Detailed test result",
        "indicator": "Test indicator"
      }
    }
  },
  "reportPreview": {
    "generating": "Generating PDF file...",
    "mainTitle": {
      "reportDate": "Report Date",
      "reportVersion": "Report Version",
      "reportTemplate": "Report Template"
    },
    "description": {
      "summary": "Summary",
      "description": "Description",
      "contact": "Contact",
      "copyright": "Copyright",
      "other": "Other"
    },
    "actions": {
      "exportPDF": "Export PDF",
      "printPDF": "Print PDF"
    },
    "serial": {
      "1": "1.",
      "2": "2.",
      "3": "3.",
      "4": "4.",
      "5": "5.",
      "6": "6.",
      "7": "7.",
      "8": "8.",
      "9": "9.",
      "10": "10.",
      "11": "11.",
      "12": "12.",
      "13": "13.",
      "14": "14.",
      "15": "15.",
      "16": "16.",
      "17": "17.",
      "18": "18.",
      "19": "19.",
      "20": "20.",
      "21": "21.",
      "22": "22.",
      "23": "23.",
      "24": "24.",
      "25": "25.",
      "26": "26.",
      "27": "27."
    },
    "apis": {
      "content": "Content",
      "catalog": {
        "title": "Catalog",
        "sections": {
          "apiInfo": "API Information",
          "apiTestSummary": "API Test Summary Results",
          "apiTestDetail": "API Test Result Details",
          "functionalTest": "Functional Test Results",
          "performanceTest": "Performance Test Results",
          "stabilityTest": "Stability Test Results"
        }
      },
      "info": {
        "title": "API Information",
        "fields": {
          "apiUrl": "API URL",
          "requestMethod": "Request Method",
          "operationId": "Operation ID"
        }
      },
      "summary": {
        "title": "Summary",
        "fields": {
          "apiStatus": "API Status",
          "description": "Description",
          "contact": "Contact",
          "copyright": "Copyright",
          "other": "Other"
        }
      },
      "testResult": {
        "title": "API Test Summary Results",
        "fields": {
          "isPassed": "Is Passed",
          "enableFunctionalTest": "Enable Functional Test",
          "functionalTestPassed": "Functional Test Passed",
          "functionalTestFailureReason": "Functional Test Failure Reason",
          "enablePerformanceTest": "Enable Performance Test",
          "performanceTestPassed": "Performance Test Passed",
          "performanceTestFailureReason": "Performance Test Failure Reason",
          "enableStabilityTest": "Enable Stability Test",
          "stabilityTestPassed": "Stability Test Passed",
          "stabilityTestFailureReason": "Stability Test Failure Reason"
        }
      },
      "testResultDetail": {
        "title": "Scenario Test Result Details",
        "functionalTest": {
          "title": "Functional Test Results",
          "testCases": "Test Cases",
          "testCaseResults": "Test Case Result Details"
        },
        "performanceTest": {
          "title": "Performance Test",
          "indicatorsAndResults": "Test Indicators and Results",
          "performanceIndicators": "Performance Indicators",
          "results": "Results",
          "indicators": {
            "concurrency": "Concurrency",
            "testDuration": "Test Duration",
            "pressureConcurrency": "Pressure Concurrency",
            "pressureTestDuration": "Pressure Test Duration",
            "responseTime": "Response Time",
            "tps": "TPS",
            "errorRate": "Error Rate"
          }
        },
        "stabilityTest": {
          "title": "Stability Test",
          "indicatorsAndResults": "Test Indicators and Results",
          "stabilityIndicators": "Stability Indicators",
          "results": "Results",
          "systemLoad": "Application System Average Load",
          "average": "Average",
          "maximum": "Maximum"
        },
        "fields": {
          "testResult": "Test Result",
          "testFailureReason": "Test Failure Reason",
          "testCount": "Test Count",
          "failureCount": "Failure Count",
          "testScriptId": "Test Script ID",
          "testScriptName": "Test Script Name",
          "executionId": "Execution ID",
          "executionName": "Execution Name",
          "lastExecutor": "Last Executor",
          "lastExecutionTime": "Last Execution Time",
          "totalCases": "Total Cases",
          "passedCount": "Passed Count",
          "failedCount": "Failed Count",
          "disabledCount": "Disabled Count",
          "isEnabled": "Is Enabled",
          "isTestPassed": "Is Test Passed",
          "testFailureCount": "Test Failure Count",
          "cpuUsage": "CPU Usage",
          "memoryUsage": "Memory Usage",
          "diskUsage": "Disk Usage",
          "networkUsage": "Network Usage"
        }
      }
    },
    "execFunction": {
      "content": "Content",
      "catalog": {
        "title": "Catalog",
        "sections": {
          "execInfo": "Execution Information",
          "execBasicInfo": "Execution Basic Information",
          "iterationResult": "Iteration Result",
          "logInfo": "Log Information",
          "schedulingLog": "Execution Scheduling Log",
          "samplingLog": "Execution Sampling Log"
        }
      },
      "summary": {
        "title": "Summary",
        "fields": {
          "testPassed": "Test Passed",
          "description": "Description",
          "contact": "Contact",
          "copyright": "Copyright",
          "other": "Other"
        }
      },
      "detail": {
        "title": "Execution Information",
        "basicInfo": {
          "title": "Execution Basic Information",
          "fields": {
            "testScriptId": "Test Script ID",
            "testScriptName": "Test Script Name",
            "nodeCount": "Node Count",
            "reportInterval": "Report Interval",
            "ignoreAssertions": "Ignore Assertions",
            "updateTestResult": "Update Test Result"
          },
          "options": {
            "update": "Update",
            "notUpdate": "Not Update"
          }
        },
        "execResult": {
          "title": "Execution Result",
          "fields": {
            "testResult": "Test Result",
            "failureReason": "Failure Reason",
            "testCases": "Test Cases"
          }
        }
      },
      "log": {
        "title": "Log Information",
        "schedulingLog": {
          "title": "Execution Scheduling Information",
          "fields": {
            "schedulingResult": "Scheduling Result",
            "processExitCode": "Process Exit Code"
          }
        },
        "samplingLog": {
          "title": "Execution Sampling Information",
          "fields": {
            "file": "File"
          },
          "messages": {
            "noProxyInfo": "No proxy access information, connection failed address: "
          }
        }
      },
      "sampling": {
        "collapse": {
          "iteration": "Iteration {count}",
          "http": {
            "statusCode": "Status Code",
            "duration": "Duration"
          },
          "throughput": {
            "requestsPerSecond": "Requests Per Second",
            "waitTimeout": "Wait Timeout"
          },
          "waitingTime": {
            "fixedWait": "Fixed Wait",
            "randomWait": "Random Wait",
            "to": "to"
          },
          "transEnd": {
            "end": "End"
          },
          "rendezvous": {
            "userCount": "User Count",
            "waitTimeout": "Wait Timeout"
          },
          "statusTag": {
            "notExecuted": "Not Executed"
          },
          "assertionResult": {
            "title": "Assertion Results",
            "none": "None"
          }
        }
      }
    },
    "execPerf": {
      "content": "Content",
      "catalog": {
        "title": "Catalog",
        "sections": {
          "execInfo": "Execution Information",
          "execBasicInfo": "Execution Basic Information",
          "summaryResult": "Summary Result",
          "samplingIndicators": "Sampling Indicators",
          "throughput": "Throughput",
          "concurrency": "Concurrency",
          "responseTime": "Response Time",
          "error": "Error",
          "statusCode": "Status Code",
          "nodeResources": "Node Resources",
          "overlayAnalysis": "Overlay Analysis",
          "logInfo": "Log Information",
          "schedulingLog": "Execution Scheduling Log",
          "samplingLog": "Execution Sampling Log"
        }
      },
      "summary": {
        "title": "Summary",
        "fields": {
          "testPassed": "Test Passed",
          "contact": "Contact",
          "copyright": "Copyright",
          "other": "Other"
        }
      },
      "detail": {
        "title": "Execution Information",
        "basicInfo": {
          "title": "Execution Basic Information",
          "fields": {
            "testScriptId": "Test Script ID",
            "nodeCount": "Node Count",
            "samplingInterval": "Sampling Interval",
            "ignoreAssertions": "Ignore Assertions",
            "updateTestResult": "Update Test Result"
          },
          "options": {
            "ignore": "Ignore",
            "notIgnore": "Not Ignore",
            "update": "Update",
            "notUpdate": "Not Update"
          }
        },
        "execResult": {
          "title": "Execution Result",
          "fields": {
            "failureReason": "Failure Reason"
          }
        },
        "apiPerf": {
          "testIndicator": "Test Indicator",
          "targetValue": "Target Value",
          "resultValue": "Result Value",
          "concurrency": "Concurrency",
          "testDuration": "Test Duration",
          "rampUpThreads": "Ramp Up Threads",
          "rampUpInterval": "Ramp Up Interval",
          "responseTime": "Response Time (RT)",
          "tps": "Transactions Per Second (TPS)",
          "errorRate": "Error Rate",
          "systemLoad": "Application System Average Load",
          "cpuUsage": "CPU Usage",
          "memoryUsage": "Memory Usage",
          "diskUsage": "Disk Usage",
          "networkUsage": "Network Usage",
          "maximum": "Maximum"
        },
        "apiStability": {
          "testIndicator": "Test Indicator",
          "targetValue": "Target Value",
          "resultValue": "Result Value",
          "concurrency": "Concurrency",
          "testDuration": "Test Duration",
          "responseTime": "Response Time (art)",
          "tps": "Transactions Per Second (TPS)",
          "errorRate": "Error Rate",
          "systemLoad": "Application System Average Load",
          "cpuUsage": "CPU Usage",
          "memoryUsage": "Memory Usage",
          "diskUsage": "Disk Usage",
          "networkUsage": "Network Usage",
          "maximum": "Maximum"
        }
      },
      "samplingSummary": {
        "title": "Summary Result",
        "fields": {
          "samplingCount": "Sampling Count",
          "transactionCount": "Transaction Count",
          "tps": "TPS",
          "errorRate": "Error Rate",
          "responseTimeStats": "Average/Min/Max/P50/P75/P90/P99/P999(ms)",
          "downloadPerSecond": "Download/Second",
          "uploadPerSecond": "Upload/Second"
        }
      },
      "sampling": {
        "title": "Sampling Indicators",
        "fields": {
          "exitCode": "Exit Code",
          "samplingStatus": "Sampling Status",
          "failureReason": "Failure Reason"
        },
        "testDetail": {
          "throughputTitle": "Throughput",
          "concurrencyTitle": "Concurrency",
          "responseTimeTitle": "Response Time",
          "errorTitle": "Error",
          "statusCode": "Status Code",
          "nodeResourceTitle": "Node Resource",
          "overlayAnalysisTitle": "Overlay Analysis",
          "none": "None",
          "throughput": {
            "queriesPerSecond": "Queries Per Second",
            "transactionsPerSecond": "Transactions Per Second",
            "queriesPerSecondWithStats": "Queries Per Second (Current | Min | Max | Average)",
            "transactionsPerSecondWithStats": "Transactions Per Second (Current | Min | Max | Average)"
          },
          "error": {
            "sampleCount": "Sample Count",
            "requestCount": "Request Count",
            "transactionCount": "Transaction Count",
            "errorCount": "Error Count",
            "errorRate": "Error Rate"
          },
          "concurrency": {
            "threadCount": "Thread Count",
            "activeThreadCount": "Active Thread Count",
            "maxThreadCount": "Max Thread Count"
          },
          "overlayAnalysis": {
            "throughputTotalTps": "Throughput - Total - Transactions Per Second",
            "concurrencyTotalActiveThreads": "Concurrency - Total - Active Threads",
            "responseTimeTotalP90": "Response Time - Total - P90",
            "errorTotalErrorRate": "Error - Total - Error Rate"
          },
          "nodeResource": {
            "cpu": "CPU",
            "memory": "Memory",
            "disk": "Disk",
            "network": "Network",
            "cpuIdle": "CPU Idle Percentage(%)",
            "cpuSystem": "System Space Occupied CPU Percentage(%)",
            "cpuUser": "User Space Occupied CPU Percentage(%)",
            "cpuIo": "CPU Percentage Waiting for IO Operations(%)",
            "cpuOther": "Other CPU Percentage(%)",
            "cpuTotal": "Total CPU Percentage(%)",
            "diskTotal": "Disk Total Size(GB)",
            "diskFree": "Local File System Remaining Size(GB)",
            "diskUsed": "Local File System Used Size(GB)",
            "diskAvail": "Local File System Available Size(GB)",
            "diskUsePercent": "Local File System Usage Percentage(%)",
            "diskReadsRate": "Disk Read Count Per Second(IO/s)",
            "diskWritesRate": "Disk Write Count Per Second(IO/s)",
            "diskReadBytesRate": "Disk Read MB Per Second(MB/s)",
            "diskWriteBytesRate": "Disk Write MB Per Second(MB/s)",
            "rxBytes": "Received Total Bytes(GB)",
            "rxBytesRate": "Per Second(MB/s)",
            "rxErrors": "Received Error Packets(packets)",
            "txBytes": "Sent Total Bytes(GB)",
            "txBytesRate": "Sent MB Per Second(MB/s)",
            "free": "Physical Memory Remaining Size(GB)",
            "used": "Physical Memory Used Size(GB)",
            "freePercent": "Actual Free Physical Memory Percentage(%)",
            "usedPercent": "Actual Used Physical Memory Percentage(%)",
            "actualFree": "Actual Free Memory(GB)",
            "actualUsed": "Actual Used Memory(GB)",
            "actualFreePercent": "Actual Free Memory Percentage(%)",
            "actualUsedPercent": "Actual Used Memory Percentage(%)",
            "swapFree": "Swap Remaining Size(GB)",
            "swapUsed": "Swap Used Size(GB)"
          }
        },
        "chartConfig": {
          "duration": "Duration",
          "errors": "Error Count",
          "iterations": "Iterations",
          "n": "Sample Count",
          "operations": "Request Count",
          "transactions": "Transaction Count",
          "readBytes": "Read Data Size",
          "writeBytes": "Write Data Size",
          "ops": "Queries Per Second",
          "tps": "Transactions Per Second",
          "brps": "Download/Second",
          "bwps": "Upload/Second",
          "tranMean": "Average",
          "tranMin": "Minimum",
          "tranMax": "Maximum",
          "tranP50": "P50",
          "tranP75": "P75",
          "tranP90": "P90",
          "tranP95": "P95",
          "tranP99": "P99",
          "tranP999": "P999",
          "errorRate": "Error Rate",
          "threadPoolSize": "Thread Count",
          "threadPoolActiveSize": "Active Thread Count",
          "threadMaxPoolSize": "Max Thread Count",
          "current": "Current",
          "brpsAll": "Download/Second (Current | Min | Max | Average)",
          "bwpsAll": "Upload/Second (Current | Min | Max | Average)",
          "average": "Average",
          "high": "High",
          "low": "Low",
          "latest": "Latest"
        }
      },
      "log": {
        "title": "Log Information",
        "schedulingLog": {
          "title": "Execution Scheduling Information",
          "fields": {
            "schedulingResult": "Scheduling Result",
            "processExitCode": "Process Exit Code"
          }
        },
        "samplingLog": {
          "title": "Execution Sampling Information",
          "fields": {
            "file": "File"
          },
          "messages": {
            "noProxyInfo": "No proxy access information, connection failed address: "
          }
        }
      }
    },
    "functionCase": {
      "content": "Content",
      "catalog": {
        "title": "Catalog",
        "sections": {
          "personnelInfo": "Personnel Information",
          "dateInfo": "Date Information",
          "precondition": "Precondition",
          "testSteps": "Test Steps",
          "description": "Description",
          "reviewInfo": "Review Information",
          "testInfo": "Test Information",
          "assocTask": "Associated Tasks",
          "assocCase": "Associated Cases",
          "activity": "Activity",
          "comment": "Comments"
        }
      },
      "summary": {
        "title": "Summary",
        "fields": {
          "testResult": "Test Result",
          "description": "Description",
          "contact": "Contact",
          "copyright": "Copyright",
          "other": "Other"
        }
      },
      "info": {
        "basic": {
          "title": "Basic Information",
          "fields": {
            "testResult": "Test Result",
            "reviewStatus": "Review Status",
            "workloadEvalMethod": "Workload Evaluation",
            "evalWorkload": "Estimated Workload",
            "actualWorkload": "Actual Workload",
            "processCount": "Process Count",
            "processFailCount": "Process Failure Count",
            "oneTimePass": "One-time Pass",
            "unplannedCase": "Unplanned Case"
          },
          "options": {
            "storyPoint": "Story Points",
            "workTime": "Work Hours",
            "actualStoryPoint": "Actual Story Points",
            "actualWorkTime": "Actual Work Hours"
          }
        },
        "personnel": {
          "title": "Personnel Information"
        },
        "date": {
          "title": "Date Information",
          "fields": {
            "testCompleteTime": "Test Complete Time",
            "deadline": "Deadline",
            "reviewTime": "Review Time",
            "createTime": "Create Time",
            "lastModifyTime": "Last Modify Time"
          }
        },
        "precondition": {
          "title": "Precondition"
        },
        "testSteps": {
          "title": "Test Steps",
          "fields": {
            "testStep": "Test Step",
            "expectedResult": "Expected Result"
          }
        },
        "description": {
          "title": "Description"
        },
        "testInfo": {
          "title": "Test Information",
          "fields": {
            "testCount": "Test Count",
            "testFailCount": "Test Failure Count",
            "oneTimeTestPass": "One-time Test Pass",
            "testRemark": "Test Remark"
          }
        }
      },
      "review": {
        "title": "Review Information",
        "fields": {
          "enableReview": "Enable Review",
          "reviewCount": "Review Count",
          "reviewFailCount": "Review Failure Count",
          "oneTimeReviewPass": "One-time Review Pass",
          "reviewOpinion": "Review Opinion"
        }
      },
      "assocTask": {
        "title": "Associated Tasks"
      },
      "assocCase": {
        "title": "Associated Cases"
      },
      "activity": {
        "title": "Activity",
        "fields": {
          "activityTime": "Activity Time",
          "activityPerson": "Activity Person",
          "activityDescription": "Activity Description"
        }
      },
      "comment": {
        "title": "Comments",
        "fields": {
          "commentTime": "Comment Time",
          "commenter": "Commenter",
          "commentContent": "Comment Content",
          "reply": "Reply"
        }
      }
    },
    "functionPlan": {
      "content": "Content",
      "catalog": {
        "title": "Catalog",
        "sections": {
          "planInfo": "Test Plan Information",
          "testerAndDuty": "Tester and Duty",
          "testTarget": "Test Target",
          "testScope": "Test Scope",
          "acceptanceCriteria": "Acceptance Criteria",
          "otherInfo": "Other Information",
          "caseSummary": "Case Summary Results",
          "testSummary": "Test Summary Results",
          "reviewSummary": "Review Summary Results",
          "groupStats": "Group Statistics",
          "testerSummary": "Tester Summary Results"
        }
      },
      "summary": {
        "title": "Summary",
        "fields": {
          "description": "Description",
          "contact": "Contact",
          "copyright": "Copyright",
          "other": "Other"
        }
      },
      "detail": {
        "title": "Plan Detailed Information",
        "to": "To",
        "basicInfo": {
          "title": "Basic Information",
          "fields": {
            "casePrefix": "Case Prefix",
            "reviewCase": "Review Cases"
          }
        },
        "testerAndDuty": {
          "title": "Tester and Duty",
          "fields": {
            "duty": "Duty"
          }
        },
        "testTarget": {
          "title": "Test Target"
        },
        "testScope": {
          "title": "Test Scope"
        },
        "acceptanceCriteria": {
          "title": "Acceptance Criteria"
        },
        "otherInfo": {
          "title": "Other Information"
        }
      },
      "caseSummary": {
        "title": "Case Summary Results",
        "testSummary": {
          "title": "Test Summary Results",
          "fields": {
            "totalCases": "Total Cases",
            "validCases": "Valid Cases",
            "pendingTest": "Pending Test",
            "overdueRate": "Overdue Rate",
            "oneTimeTestPass": "One-time Test Pass",
            "oneTimeTestPassRate": "One-time Test Pass Rate",
            "oneTimeReviewPassRate": "One-time Review Pass Rate",
            "estimatedWorkload": "Estimated Workload",
            "actualWorkload": "Actual Workload",
            "completedWorkload": "Completed Workload",
            "savedWorkload": "Saved Workload",
            "workloadSaveRate": "Workload Save Rate"
          }
        },
        "reviewSummary": {
          "title": "Review Summary Results",
          "fields": {
            "totalReviewCases": "Total Review Cases",
            "pendingReview": "Pending Review",
            "reviewPassed": "Review Passed",
            "reviewFailed": "Review Failed",
            "reviewed": "Reviewed",
            "notReviewed": "Not Reviewed",
            "totalReviewCount": "Total Review Count",
            "oneTimeReviewPass": "One-time Review Pass",
            "oneTimeReviewPassRate": "One-time Review Pass Rate"
          }
        },
        "groupStats": {
          "title": "Group Statistics",
          "byStatus": "By Status",
          "byPriority": "By Priority",
          "status": {
            "testFailed": "Test Failed",
            "testPassed": "Test Passed",
            "pendingTest": "Pending Test"
          },
          "priorities": {
            "highest": "Highest",
            "high": "High",
            "medium": "Medium",
            "low": "Low",
            "lowest": "Lowest"
          }
        }
      },
      "caseDetail": {
        "title": "Tester Summary Results",
        "testSummary": {
          "title": "Test Summary Results",
          "fields": {
            "totalCases": "Total Cases",
            "validCases": "Valid Cases",
            "pendingTest": "Pending Test",
            "overdueRate": "Overdue Rate",
            "oneTimeTestPass": "One-time Test Pass",
            "oneTimeTestPassRate": "One-time Test Pass Rate",
            "oneTimeReviewPassRate": "One-time Review Pass Rate",
            "estimatedWorkload": "Estimated Workload",
            "actualWorkload": "Actual Workload",
            "completedWorkload": "Completed Workload",
            "savedWorkload": "Saved Workload",
            "workloadSaveRate": "Workload Save Rate"
          }
        },
        "reviewSummary": {
          "title": "Review Summary Results",
          "fields": {
            "totalReviewCases": "Total Review Cases",
            "pendingReview": "Pending Review",
            "reviewPassed": "Review Passed",
            "reviewFailed": "Review Failed",
            "reviewed": "Reviewed",
            "notReviewed": "Not Reviewed",
            "totalReviewCount": "Total Review Count",
            "oneTimeReviewPass": "One-time Review Pass",
            "oneTimeReviewPassRate": "One-time Review Pass Rate"
          }
        },
        "groupStats": {
          "title": "Group Statistics"
        },
        "caseList": {
          "fields": {
            "testResultRemark": "Test Result Remark",
            "testCompleteTime": "Test Complete Time",
            "reviewCase": "Review Case",
            "reviewStatus": "Review Status",
            "reviewOpinion": "Review Opinion",
            "reviewTime": "Review Time",
            "workloadEvalMethod": "Workload Evaluation",
            "estimatedWorkload": "Estimated Workload",
            "actualWorkload": "Actual Workload",
            "totalTestCount": "Total Test Count",
            "testFailCount": "Test Failure Count"
          }
        }
      }
    },
    "projectProgress": {
      "content": "Content",
      "catalog": {
        "title": "Catalog",
        "sections": {
          "projectInfo": "Project Information",
          "devTask": "Development Tasks",
          "taskSummary": "Task Summary Results",
          "taskBurndownChart": "Task Burndown Chart",
          "taskGroupStats": "Task Group Statistics",
          "funcTest": "Functional Testing",
          "caseTestSummary": "Case Test Summary Results",
          "caseReviewSummary": "Case Review Summary Results",
          "caseBurndownChart": "Case Burndown Chart",
          "caseGroupStats": "Case Group Statistics",
          "apiTest": "API Testing",
          "apiTestSummary": "API Test Summary Results",
          "apiGroupStats": "API Group Statistics",
          "scenarioTest": "Scenario Testing",
          "scenarioTestSummary": "Scenario Test Summary Results",
          "scenarioGroupStats": "Scenario Group Statistics"
        }
      },
      "summary": {
        "title": "Summary",
        "fields": {
          "description": "Description",
          "contact": "Contact",
          "copyright": "Copyright",
          "other": "Other"
        }
      },
      "info": {
        "title": "Project Information"
      },
      "taskSummary": {
        "title": "Development Tasks",
        "summary": {
          "title": "Task Summary Results",
          "fields": {
            "totalTasks": "Total Tasks",
            "validTasks": "Valid Tasks",
            "totalBugs": "Total Bugs",
            "validBugs": "Valid Bugs",
            "pendingCount": "Pending Count",
            "processingCount": "Processing Count",
            "pendingConfirmCount": "Pending Confirm Count",
            "completedCount": "Completed Count",
            "cancelledCount": "Cancelled Count",
            "overdueCount": "Overdue Count",
            "overdueRate": "Overdue Rate",
            "oneTimePassCount": "One-time Pass Count",
            "oneTimePassRate": "One-time Pass Rate",
            "estimatedWorkload": "Estimated Workload",
            "actualWorkload": "Actual Workload",
            "completedWorkload": "Completed Workload",
            "savedWorkload": "Saved Workload",
            "workloadSaveRate": "Workload Save Rate"
          }
        },
        "groupStats": {
          "title": "Task Group Statistics",
          "byStatus": "By Status",
          "byPriority": "By Priority",
          "byTaskType": "By Task Type",
          "priorities": {
            "highest": "Highest",
            "high": "High",
            "medium": "Medium",
            "low": "Low",
            "lowest": "Lowest"
          },
          "taskTypes": {
            "bug": "Bug",
            "task": "Task",
            "story": "Story",
            "requirement": "Requirement",
            "apiTest": "API Test",
            "scenarioTest": "Scenario Test"
          }
        }
      },
      "funcCaseSummary": {
        "title": "Functional Cases",
        "testSummary": {
          "title": "Case Test Summary Results",
          "fields": {
            "totalCases": "Total Cases",
            "validCases": "Valid Cases",
            "pendingTest": "Pending Test",
            "overdueRate": "Overdue Rate",
            "oneTimeTestPass": "One-time Test Pass",
            "oneTimeTestPassRate": "One-time Test Pass Rate",
            "oneTimeReviewPassRate": "One-time Review Pass Rate",
            "estimatedWorkload": "Estimated Workload",
            "actualWorkload": "Actual Workload",
            "completedWorkload": "Completed Workload",
            "savedWorkload": "Saved Workload",
            "workloadSaveRate": "Workload Save Rate"
          }
        },
        "reviewSummary": {
          "title": "Case Review Summary Results",
          "fields": {
            "totalReviewCases": "Total Review Cases",
            "pendingReview": "Pending Review",
            "reviewPassed": "Review Passed",
            "reviewFailed": "Review Failed",
            "reviewed": "Reviewed",
            "notReviewed": "Not Reviewed",
            "totalReviewCount": "Total Review Count",
            "oneTimeReviewPass": "One-time Review Pass",
            "oneTimeReviewPassRate": "One-time Review Pass Rate"
          }
        },
        "groupStats": {
          "title": "Case Group Statistics",
          "byStatus": "By Status",
          "byPriority": "By Priority",
          "status": {
            "testFailed": "Test Failed",
            "testPassed": "Test Passed",
            "pendingTest": "Pending Test"
          },
          "priorities": {
            "highest": "Highest",
            "high": "High",
            "medium": "Medium",
            "low": "Low",
            "lowest": "Lowest"
          }
        }
      },
      "apiSummary": {
        "title": "API Testing",
        "testSummary": {
          "title": "API Test Summary Results",
          "fields": {
            "totalApis": "Total APIs",
            "enabledApiTest": "Enabled API Test",
            "disabledApiTest": "Disabled API Test",
            "apiFuncTest": "API Functional Test",
            "apiPerfTest": "API Performance Test",
            "apiStabilityTest": "API Stability Test",
            "testedApis": "Tested APIs",
            "passedApis": "Passed APIs",
            "failedApis": "Failed APIs"
          }
        },
        "groupStats": {
          "title": "API Group Statistics",
          "byStatus": "By Status",
          "byRequestMethod": "By Request Method",
          "status": {
            "published": "Published",
            "devCompleted": "Completed",
            "devInProgress": "In Development",
            "designing": "Designing",
            "unknown": "Unknown"
          }
        }
      },
      "scenarioTestSummary": {
        "title": "Scenario Testing",
        "testSummary": {
          "title": "Scenario Test Summary Results",
          "fields": {
            "totalScenarios": "Total Scenarios",
            "enabledScenarioTest": "Enabled Scenario Test",
            "disabledScenarioTest": "Disabled Scenario Test",
            "scenarioFuncTest": "Scenario Functional Test",
            "scenarioPerfTest": "Scenario Performance Test",
            "scenarioStabilityTest": "Scenario Stability Test",
            "testedScenarios": "Tested Scenarios",
            "passedScenarios": "Passed Scenarios",
            "failedScenarios": "Failed Scenarios"
          }
        },
        "groupStats": {
          "title": "Scenario Group Statistics",
          "byProtocol": "By Protocol",
          "byTestType": "By Test Type",
          "quantity": "Quantity",
          "testTypes": {
            "perfTest": "Performance Test",
            "stabilityTest": "Stability Test",
            "funcTest": "Functional Test",
            "customTest": "Custom Test"
          }
        }
      }
    },
    "scenario": {
      "content": "Content",
      "catalog": {
        "title": "Catalog",
        "sections": {
          "scenarioInfo": "Scenario Information",
          "scenarioTestSummary": "Scenario Test Summary Results",
          "scenarioTestResultDetail": "Scenario Test Result Detailed Information",
          "funcTestResult": "Functional Test Results",
          "perfTestResult": "Performance Test Results",
          "stabilityTestResult": "Stability Test Results"
        }
      },
      "summary": {
        "title": "Summary",
        "fields": {
          "testPassed": "Test Passed",
          "description": "Description",
          "contact": "Contact",
          "copyright": "Copyright",
          "other": "Other"
        }
      },
      "info": {
        "title": "Scenario Information"
      },
      "testResult": {
        "title": "Scenario Test Summary Results",
        "fields": {
          "passed": "Passed",
          "enableFuncTest": "Enable Functional Test",
          "funcTestPassed": "Functional Test Passed",
          "funcTestFailReason": "Functional Test Failure Reason",
          "enablePerfTest": "Enable Performance Test",
          "perfTestPassed": "Performance Test Passed",
          "perfTestFailReason": "Performance Test Failure Reason",
          "enableStabilityTest": "Enable Stability Test",
          "stabilityTestPassed": "Stability Test Passed",
          "stabilityTestFailReason": "Stability Test Failure Reason"
        }
      },
      "testResultDetail": {
        "title": "Scenario Test Result Detailed Information",
        "funcTestResult": {
          "title": "Functional Test Results",
          "basicInfo": {
            "title": "Test Basic Information",
            "fields": {
              "testResult": "Test Result",
              "testFailReason": "Test Failure Reason",
              "testCount": "Test Count",
              "failCount": "Failure Count",
              "testScriptId": "Test Script ID",
              "testScriptName": "Test Script Name",
              "lastExecutor": "Last Executor",
              "lastExecTime": "Last Execution Time"
            }
          },
          "apiStats": {
            "title": "Test API Statistics",
            "fields": {
              "totalCases": "Total Cases",
              "passedCount": "Passed Count",
              "failedCount": "Failed Count",
              "disabledCount": "Disabled Count"
            }
          },
          "caseResultDetail": {
            "title": "Test Case Result Details",
            "fields": {
              "testPassed": "Test Passed",
              "testFailReason": "Test Failure Reason",
              "testCount": "Test Count",
              "testFailCount": "Test Failure Count"
            }
          }
        },
        "perfTestResult": {
          "title": "Performance Test",
          "basicInfo": {
            "title": "Test Basic Information",
            "fields": {
              "testResult": "Test Result",
              "testFailReason": "Test Failure Reason",
              "testCount": "Test Count",
              "failCount": "Failure Count",
              "testScriptId": "Test Script ID",
              "testScriptName": "Test Script Name",
              "lastExecutor": "Last Executor",
              "lastExecTime": "Last Execution Time"
            }
          },
          "metrics": {
            "title": "Test Metrics and Results",
            "performanceMetrics": "Performance Metrics",
            "result": "Result",
            "fields": {
              "concurrency": "Concurrency",
              "testDuration": "Test Duration",
              "rampUpConcurrency": "Ramp-up Concurrency",
              "rampUpDuration": "Ramp-up Duration",
              "responseTime": "Response Time",
              "tps": "Transactions Per Second",
              "errorRate": "Error Rate"
            }
          }
        },
        "stabilityTestResult": {
          "title": "Stability Test",
          "basicInfo": {
            "title": "Test Basic Information",
            "fields": {
              "testResult": "Test Result",
              "testFailReason": "Test Failure Reason",
              "testCount": "Test Count",
              "failCount": "Failure Count",
              "testScriptId": "Test Script ID",
              "testScriptName": "Test Script Name",
              "lastExecutor": "Last Executor",
              "lastExecTime": "Last Execution Time"
            }
          },
          "metrics": {
            "title": "Test Metrics and Results",
            "stabilityMetrics": "Stability Metrics",
            "result": "Result",
            "fields": {
              "concurrency": "Concurrency",
              "testDuration": "Test Duration",
              "rampUpConcurrency": "Ramp-up Concurrency",
              "rampUpDuration": "Ramp-up Duration",
              "responseTime": "Response Time",
              "tps": "Transactions Per Second (TPS)",
              "errorRate": "Error Rate"
            }
          },
          "nodeResources": {
            "title": "Node Resources",
            "fields": {
              "cpuUsage": "CPU Usage",
              "memoryUsage": "Memory Usage",
              "diskUsage": "Disk Usage",
              "networkUsage": "Network Usage"
            }
          },
          "systemLoad": {
            "title": "Application System Average Load",
            "average": "Average",
            "maximum": "Maximum"
          }
        },
        "performanceTest": {
          "title": "Performance Test",
          "indicatorsAndResults": "Test Indicators and Results",
          "performanceIndicators": "Performance Indicators",
          "results": "Results",
          "indicators": {
            "concurrency": "Concurrency",
            "testDuration": "Test Duration",
            "pressureConcurrency": "Pressure Concurrency",
            "pressureTestDuration": "Pressure Test Duration",
            "responseTime": "Response Time",
            "tps": "TPS",
            "errorRate": "Error Rate"
          }
        },
        "fields": {
          "testResult": "Test Result",
          "testFailureReason": "Test Failure Reason",
          "testCount": "Test Count",
          "failureCount": "Failure Count",
          "testScriptId": "Test Script ID",
          "testScriptName": "Test Script Name",
          "executionId": "Execution ID",
          "executionName": "Execution Name",
          "lastExecutor": "Last Executor",
          "lastExecutionTime": "Last Execution Time",
          "totalCases": "Total Cases",
          "passedCount": "Passed Count",
          "failedCount": "Failed Count",
          "disabledCount": "Disabled Count",
          "isEnabled": "Is Enabled",
          "isTestPassed": "Is Test Passed",
          "testFailureCount": "Test Failure Count",
          "cpuUsage": "CPU Usage",
          "memoryUsage": "Memory Usage",
          "diskUsage": "Disk Usage",
          "networkUsage": "Network Usage"
        }
      }
    },
    "services": {
      "content": "Content",
      "catalog": {
        "title": "Catalog",
        "sections": {
          "serviceInfo": "Service Information",
          "apiGroupStats": "API Group Statistics",
          "testResultSummary": "Test Result Summary",
          "testProgress": "Test Progress",
          "testApiStats": "Test API Statistics",
          "testStatusStats": "Test Status Statistics"
        }
      },
      "summary": {
        "title": "Summary",
        "fields": {
          "serviceStatus": "Service Status",
          "description": "Description",
          "contact": "Contact",
          "copyright": "Copyright",
          "other": "Other"
        }
      },
      "info": {
        "title": "Service Information",
        "fields": {
          "apiCount": "API Count",
          "apiCaseCount": "API Case Count"
        }
      },
      "apisGroup": {
        "title": "API Group Statistics",
        "byStatus": {
          "title": "By Status",
          "status": {
            "unknown": "Unknown",
            "designing": "Designing",
            "devCompleted": "Completed",
            "devInProgress": "In Development",
            "published": "Published"
          }
        },
        "byRequestMethod": {
          "title": "By Request Method"
        }
      },
      "result": {
        "title": "Test Result Summary",
        "testProgress": {
          "title": "Test Progress",
          "totalApis": "Total APIs"
        },
        "testApiStats": {
          "title": "Test API Statistics",
          "columns": {
            "totalTestCount": "Total Test Count",
            "funcTest": "Functional Test",
            "perfTest": "Performance Test",
            "stabilityTest": "Stability Test"
          }
        },
        "testStatusStats": {
          "title": "Test Status Statistics"
        }
      },
      "apiResultDetail": {
        "title": "API Test Result Details",
        "fields": {
          "apiUrl": "API URL",
          "requestMethod": "Request Method",
          "operationId": "Operation ID",
          "owner": "Owner",
          "description": "Description",
          "enableFuncTest": "Enable Functional Test",
          "funcTestPassed": "Functional Test Passed",
          "funcTestFailReason": "Functional Test Failure Reason",
          "enablePerfTest": "Enable Performance Test",
          "perfTestPassed": "Performance Test Passed",
          "perfTestFailReason": "Performance Test Failure Reason",
          "enableStabilityTest": "Enable Stability Test",
          "stabilityTestPassed": "Stability Test Passed",
          "stabilityTestFailReason": "Stability Test Failure Reason"
        },
        "options": {
          "notTested": "Not Tested"
        }
      }
    },
    "sprint": {
      "content": "Content",
      "catalog": {
        "title": "Catalog",
        "sections": {
          "sprintDetail": "Sprint Detailed Information",
          "acceptanceCriteria": "Acceptance Criteria",
          "testScope": "Test Scope",
          "otherInfo": "Other Information",
          "devTask": "Development Tasks",
          "taskSummary": "Task Summary Results",
          "groupStats": "Group Statistics",
          "assigneeSummary": "Assignee Summary Results"
        }
      },
      "summary": {
        "title": "Summary",
        "fields": {
          "description": "Description",
          "contact": "Contact",
          "copyright": "Copyright",
          "other": "Other"
        }
      },
      "sprintDetail": {
        "title": "Sprint Information",
        "basicInfo": {
          "title": "Basic Information",
          "fields": {
            "taskPrefix": "Task Prefix",
            "sprintTime": "Sprint Time",
            "workloadEstimationMethod": "Workload Estimation Method"
          }
        },
        "acceptanceCriteria": {
          "title": "Acceptance Criteria"
        },
        "meetingRecord": {
          "title": "Meeting Records",
          "meetingTopic": "Meeting Topic",
          "fields": {
            "meetingType": "Meeting Type",
            "meetingDate": "Meeting Date",
            "meetingTime": "Meeting Time",
            "to": "to",
            "meetingLocation": "Meeting Location",
            "meetingHost": "Meeting Host",
            "attendees": "Attendees",
            "meetingContent": "Meeting Content"
          }
        },
        "otherInfo": {
          "title": "Other Information"
        }
      },
      "taskDetail": {
        "title": "Task Detail",
        "fields": {
          "completionTime": "Completion Time",
          "confirmTask": "Confirm Task",
          "totalProcessCount": "Total Process Count",
          "failedProcessCount": "Failed Process Count"
        }
      },
      "taskSummary": {
        "title": "Development Tasks",
        "summary": {
          "title": "Task Summary Results",
          "fields": {
            "totalTasks": "Total Tasks",
            "validTasks": "Valid Tasks",
            "totalBugs": "Total Bugs",
            "validBugs": "Valid Bugs",
            "pendingCount": "Pending Count",
            "processingCount": "Processing Count",
            "pendingConfirmCount": "Pending Confirm Count",
            "completedCount": "Completed Count",
            "cancelledCount": "Cancelled Count",
            "overdueCount": "Overdue Count",
            "overdueRate": "Overdue Rate",
            "oneTimePassCount": "One-time Pass Count",
            "oneTimePassRate": "One-time Pass Rate",
            "estimatedWorkload": "Estimated Workload",
            "actualWorkload": "Actual Workload",
            "completedWorkload": "Completed Workload",
            "savedWorkload": "Saved Workload",
            "workloadSaveRate": "Workload Save Rate"
          }
        },
        "groupStats": {
          "title": "Group Statistics",
          "byStatus": "By Status",
          "byPriority": "By Priority",
          "byTaskType": "By Task Type",
          "priorities": {
            "highest": "Highest",
            "high": "High",
            "medium": "Medium",
            "low": "Low",
            "lowest": "Lowest"
          },
          "taskTypes": {
            "bug": "Bug",
            "task": "Task",
            "story": "Story",
            "requirement": "Requirement",
            "apiTest": "API Test",
            "scenarioTest": "Scenario Test"
          }
        }
      },
      "assigneeSummary": {
        "title": "Assignee Summary Results",
        "summary": {
          "title": "Task Summary Results",
          "fields": {
            "totalTasks": "Total Tasks",
            "validTasks": "Valid Tasks",
            "totalBugs": "Total Bugs",
            "validBugs": "Valid Bugs",
            "pendingCount": "Pending Count",
            "processingCount": "Processing Count",
            "pendingConfirmCount": "Pending Confirm Count",
            "completedCount": "Completed Count",
            "cancelledCount": "Cancelled Count",
            "overdueCount": "Overdue Count",
            "overdueRate": "Overdue Rate",
            "oneTimePassCount": "One-time Pass Count",
            "oneTimePassRate": "One-time Pass Rate",
            "estimatedWorkload": "Estimated Workload",
            "actualWorkload": "Actual Workload",
            "completedWorkload": "Completed Workload",
            "savedWorkload": "Saved Workload",
            "workloadSaveRate": "Workload Save Rate"
          }
        },
        "groupStats": {
          "title": "Group Statistics"
        }
      }
    },
    "task": {
      "content": "Content",
      "catalog": {
        "title": "Catalog",
        "sections": {
          "personnelInfo": "Personnel Information",
          "dateInfo": "Date Information",
          "description": "Description",
          "subTask": "Sub Tasks",
          "assocTask": "Associated Tasks",
          "assocCase": "Associated Cases",
          "testingInfo": "Testing Information",
          "testResource": "Test Resources",
          "execInfo": "Execution Information",
          "testResult": "Test Results",
          "remark": "Remarks",
          "activity": "Activities",
          "comment": "Comments"
        }
      },
      "summary": {
        "title": "Summary",
        "fields": {
          "contact": "Contact",
          "copyright": "Copyright",
          "other": "Other"
        }
      },
      "info": {
        "basicInfo": {
          "title": "Basic Information",
          "fields": {
            "missedDefect": "Missed Defect",
            "workloadEstimationMethod": "Workload Estimation Method",
            "estimatedStoryPoint": "Estimated Story Points",
            "estimatedWorkTime": "Estimated Work Time",
            "actualStoryPoint": "Actual Story Points",
            "actualWorkTime": "Actual Work Time",
            "processCount": "Process Count",
            "failedProcessCount": "Failed Process Count",
            "oneTimePass": "One-time Pass",
            "unplannedTask": "Unplanned Task"
          }
        },
        "personnelInfo": {
          "title": "Personnel Information"
        },
        "dateInfo": {
          "title": "Date Information",
          "fields": {
            "processTime": "Process Time",
            "confirmTime": "Confirm Time",
            "completionTime": "Completion Time",
            "cancelTime": "Cancel Time",
            "createTime": "Create Time",
            "lastModifyTime": "Last Modify Time"
          }
        },
        "description": {
          "title": "Description"
        },
        "remark": {
          "title": "Remarks"
        },
        "testingInfo": {
          "title": "Testing Information",
          "testResource": {
            "title": "Test Resources",
            "fields": {
              "apiId": "API ID",
              "apiName": "API Name",
              "scenarioId": "Scenario ID",
              "scenarioName": "Scenario Name"
            }
          },
          "execInfo": {
            "title": "Execution Information",
            "fields": {
              "lastExecTime": "Last Execution Time"
            }
          },
          "testResult": {
            "title": "Test Results",
            "basicInfo": {
              "title": "Basic Information",
              "fields": {
                "testResult": "Test Result",
                "oneTimePass": "One-time Pass",
                "testCount": "Test Count",
                "failCount": "Failure Count",
                "failReason": "Failure Reason"
              }
            }
          }
        }
      },
      "subTask": {
        "title": "Sub Tasks"
      },
      "assocTask": {
        "title": "Associated Tasks"
      },
      "assocCase": {
        "title": "Associated Cases"
      },
      "activity": {
        "title": "Activities",
        "fields": {
          "activityTime": "Activity Time",
          "activityUser": "Activity User",
          "activityDesc": "Activity Description"
        }
      },
      "comment": {
        "title": "Comments",
        "fields": {
          "commentTime": "Comment Time",
          "commentUser": "Comment User",
          "commentContent": "Comment Content",
          "reply": "Reply"
        }
      },
      "testing": {
        "function": {
          "title": "Functional Testing",
          "caseStats": {
            "title": "Case Statistics",
            "fields": {
              "totalCases": "Total Cases",
              "passedCases": "Passed Cases",
              "failedCases": "Failed Cases",
              "disabledCases": "Disabled Cases"
            }
          },
          "testedCases": {
            "title": "Tested Cases",
            "fields": {
              "caseId": "Case ID",
              "caseName": "Case Name"
            }
          }
        },
        "perf": {
          "title": "Performance Testing",
          "resultInfo": {
            "title": "Result Information",
            "testParams": "Test Parameters",
            "testMetrics": "Test Metrics",
            "fields": {
              "concurrency": "Concurrency",
              "testDuration": "Test Duration",
              "rampUpConcurrency": "Ramp-up Concurrency",
              "rampUpDuration": "Ramp-up Duration",
              "responseTime": "Response Time (RT)",
              "tps": "Transactions Per Second (TPS)",
              "errorRate": "Error Rate"
            }
          },
          "systemLoad": {
            "title": "Application System Average Load",
            "cpuUsage": "CPU Usage",
            "memoryUsage": "Memory Usage",
            "diskUsage": "Disk Usage",
            "networkUsage": "Network Usage",
            "maximum": "Maximum"
          }
        },
        "stability": {
          "title": "Stability Testing",
          "resultInfo": {
            "title": "Result Information",
            "testParams": "Test Parameters",
            "testMetrics": "Test Metrics",
            "fields": {
              "concurrency": "Concurrency",
              "testDuration": "Test Duration",
              "responseTime": "Response Time (art)",
              "tps": "Transactions Per Second (TPS)",
              "errorRate": "Error Rate"
            }
          },
          "systemLoad": {
            "title": "Application System Average Load",
            "cpuUsage": "CPU Usage",
            "memoryUsage": "Memory Usage",
            "diskUsage": "Disk Usage",
            "networkUsage": "Network Usage",
            "maximum": "Maximum"
          }
        }
      }
    }
  }
}

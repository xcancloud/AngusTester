{
  "app": {
    "title": "App",
    "config": {
      "tabs": {
        "member": "Members",
        "quota": "Quota",
        "license": "License"
      },
      "members": {
        "tips": {
          "title": "Instructions",
          "description": "Select「{type}」and corresponding policies. The system will assign appropriate permissions to the selected「{type}」."
        },
        "actions": {
          "addUser": "Add User",
          "addDept": "Add Department",
          "addGroup": "Add Group",
          "authorizePolicy": "Authorize Policy",
          "cancelAuth": "Cancel"
        },
        "list": {
          "hints": "Assign specific functional menu permissions to project members to clearly define each member's scope of responsibility within the project. Only system administrators and application administrators can add application members and perform permission policy authorization operations.",
          "table": {
            "columns": {
              "policyId": "Policy ID",
              "policyName": "Policy Name",
              "policyCode": "Policy Code",
              "policyDescription": "Policy Description",
              "authSource": "Authorize Source",
              "authTime": "Authorize Time"
            },
            "sources": {
              "appDefault": "Default",
              "openAuth": "Activate"
            }
          }
        },
        "modal": {
          "addMember": "Add Member",
          "grantPolicy": "Authorize Policy"
        },
        "errors": {
          "userRequired": "Please select users",
          "policyRequired": "Please select policies"
        }
      },
      "quota": {
        "hints": "If you need to extend resource quotas, you can submit a ticket to contact the ticket engineer to help you!",
        "table": {
          "columns": {
            "resourceName": "Resource Name",
            "quotaKey": "Quota Key",
            "currentQuota": "Current Quota",
            "defaultQuota": "Default Quota",
            "maxQuota": "Maximum Quota"
          }
        }
      },
      "license": {
        "title": "License Information",
        "description": "View and manage your application license information, including edition type, product code, issuer and other details.",
        "columns": {
          "editionType": "Edition Type",
          "goodsCode": "Product Code",
          "goodsVersion": "Product Version",
          "provider": "Provider",
          "issuer": "Issuer",
          "holder": "Holder",
          "licenseNo": "License Number",
          "issuedDate": "License Issue Date",
          "signature": "License Certificate MD5 Signature"
        },
        "remainingDays": "Remaining {days} days"
      }
    }
  },
  "indicator": {
    "title": "Indicator",
    "testHint": "Test indicators are quantitative values for evaluating software functionality, performance, and stability, and are also the basis for determining whether software functionality, performance, stability, and development quality meet standards. You can set platform default functionality, performance, and stability indicators through \"Setting Indicators\". If you want the indicators for interfaces/scenarios to be more lenient than the platform default indicators, you can also modify them on the corresponding indicator page for interfaces/scenarios.",
    "efficiencyHint": "Efficiency indicators are used for setting and determining work efficiency level standards for projects, plans, iterations, organizational personnel, etc.",
    "efficiency": {
      "title": "Platform Default Efficiency Indicators",
      "table": {
        "columns": {
          "level": "Level",
          "workload": "Workload",
          "completedRate": "Completion Rate (≤)",
          "overdueRate": "Overdue Rate (≤)",
          "oneTimePassedRate": "One-time Pass Rate (≥)",
          "savingWorkloadRate": "Workload Saving Rate (≥)"
        },
        "data": {
          "levels": {
            "veryPoor": "Very Poor",
            "poor": "Poor",
            "medium": "Medium",
            "good": "Good",
            "excellent": "Excellent"
          }
        }
      }
    },
    "function": {
      "title": "Platform Default Function Indicators",
      "testCases": {
        "smoke": {
          "title": "Smoke Test Cases",
          "description": "Used for developers or testers to quickly verify whether the basic functionality of the interface is available."
        },
        "security": {
          "title": "Security Test Cases",
          "description": "Used to prevent unauthorized or illegal access, such as sending requests with valid authentication tokens, ensuring that the response does not return 401 invalid authorization or 403 insufficient permissions."
        }
      }
    },
    "performance": {
      "title": "Platform Default Performance Indicators",
      "labels": {
        "concurrentUsers": "Concurrent Users",
        "testDuration": "Test Duration",
        "tps": "Transactions Per Second (TPS)",
        "errorRate": "Error Rate (ErrorRate)",
        "rampUpThreads": "Ramp-up Threads",
        "rampUpDuration": "Ramp-up Duration"
      },
      "messages": {
        "allFieldsRequired": "All fields are required",
        "concurrentUsersMustBeGreaterThanZero": "Concurrent users must be greater than zero",
        "testDurationMustBeGreaterThanZero": "Test duration must be greater than zero",
        "responseTimeMustBeGreaterThanZero": "Response time must be greater than zero",
        "tpsMustBeGreaterThanZero": "TPS must be greater than zero",
        "errorRateMustBeBetween0And100": "Error rate must be between 0% and 100%"
      }
    },
    "stability": {
      "title": "Platform Default Stability Indicators",
      "labels": {
        "concurrentUsers": "Concurrent Users",
        "testDuration": "Test Duration",
        "errorRate": "Error Rate (ErrorRate)",
        "tps": "Transactions Per Second (TPS)",
        "systemLoad": "Application System Average Load",
        "cpuUsage": "CPU Usage",
        "memoryUsage": "Memory Usage",
        "diskUsage": "Disk Usage",
        "networkUsage": "Network Usage"
      },
      "messages": {
        "allFieldsRequired": "All fields are required",
        "concurrentUsersMustBeGreaterThanZero": "Concurrent users must be greater than zero",
        "testDurationMustBeGreaterThanZero": "Test duration must be greater than zero",
        "errorRateMustBeBetween0And100": "Error rate must be between 0% and 100%",
        "cpuUsageMustBeLessThan100": "CPU usage must be less than 100%",
        "memoryUsageMustBeLessThan100": "Memory usage must be less than 100%",
        "diskUsageMustBeLessThan100": "Disk usage must be less than 100%",
        "networkUsageMustBeLessThan10000MB": "Network usage must be less than 10000MB"
      }
    }
  },
  "event": {
    "title": "Event",
    "hints": "AngusTester event configuration provides real-time information updates and status feedback to help teams quickly respond and address potential issues.",
    "errMsg": "Error Message",
    "config": {
      "pushConfig": "Push Configuration",
      "push_config_tip": "Configuring notification methods ensures that relevant personnel receive information promptly when events occur, improving response speed.",
      "pushRecords": "Push Records",
      "configReceiveChannel": "Configure Receive Channel",
      "configReceiver": "Configure Receiver",
      "selectReceiveMethod": "Select Receive Method",
      "selectReceiver": "Select Receiver",
      "receiver": "Receiver",
      "selectOtherUsers": "Select Other Users",
      "event_record": "Event Records"
    },
    "columns": {
      "notificationStatus": "Notification Status",
      "receiveChannel": "Receive Channel",
      "sender": "Sender",
      "executionId": "Execution ID",
      "pushTime": "Push Time",
      "pushResult": "Push Result",
      "eventName": "Event Name",
      "noticeType": "Notice Type",
      "eventId": "Event ID",
      "content": "Content",
      "receiver": "Receiver",
      "pushStatus": "Push Status"
    },
    "placeholder": {
      "queryExecutionId": "Query execution ID",
      "selectNotificationStatus": "Select notification status",
      "selectHttpAddress": "Select HTTP(S) address",
      "selectEmail": "Select email",
      "selectDingTalkBot": "Select DingTalk bot",
      "selectWeChatBot": "Select WeChat bot"
    },
    "searchLogPlaceholder": {
      "code": "Query event description or code",
      "pushStatus": "Select push status"
    },
    "receiveConfig": {
      "title": "Configure Receive Channel",
      "receiveChannel": "Receive Channel",
      "selectWebhookAddress": "Select Webhook Address",
      "selectEmail": "Select Email",
      "selectDingTalkBot": "Select DingTalk Bot",
      "selectWeChatBot": "Select WeChat Bot",
      "configSuccess": "Configuration Successful"
    },
    "receiver": {
      "title": "Configure Receiver",
      "receiveMethod": "Receive Method",
      "selectReceiver": "Select Receiver",
      "notificationMethod": "Notification Method",
      "configSuccess": "Configuration Successful"
    }
  },
  "node": {
    "title": "Node",
    "introduce": {
      "description": "Supported operating systems include Linux (recommended), macOS, and Windows. Before executing tasks, add nodes and install agents - if auto-installation fails due to network/account issues, follow manual installation prompts and verify agent connectivity (start if inactive). While nodes support multiple roles, configure stress test nodes with a single \"Execution\" role for accurate performance measurement. Choose public-network nodes to simulate real-user conditions (with latency) or same-intranet nodes to test application limits without network interference. Note: Node management is restricted to system and application administrators by default.",
      "steps": {
        "managementNode": {
          "title": "Management Node",
          "content": "Used for deploying and running Web UI applications."
        },
        "controllerNode": {
          "title": "Controller Node",
          "content": "Used for scheduling, managing, monitoring execution and agent services."
        },
        "executionNode": {
          "title": "Execution Node",
          "content": "Used for executing functional tests, performance tests, data generation, etc."
        },
        "mockNode": {
          "title": "Mock Node",
          "content": "Runs Mock services and Mock interfaces."
        },
        "applicationNode": {
          "title": "Application Node",
          "content": "Hosts the testing application and monitors target node load during stress tests for performance diagnostics."
        }
      }
    },
    "message": {
      "estimatedTime": "Estimated to take several minutes",
      "installAgentPermission": "Installing agent requires system administrator or application administrator permissions",
      "manualInstallSteps": "Please follow the steps below to manually install the agent:",
      "method1": "Method 1: Copy the following command to the target server for execution",
      "method2": "Method 2: Download installation script",
      "downloadScript": "Download script:",
      "copyScriptToServer": "Copy script to target server:",
      "runInstallCommand": "Execute installation command:",
      "resourceMonitoring": "Resource Monitoring",
      "agentService": "Agent Service",
      "executingTasks": "Executing Tasks",
      "executorProcess": "Executor Process",
      "mockServiceInstance": "Mock Service Instance",
      "processMonitoring": "Process Monitoring",
      "noExecutionRecords": "No execution records found for this node",
      "noProcessData": "No process data available for this node",
      "noMockServices": "No mock services found for this node",
      "totalCount": "Total {total} items"
    },
    "actions": {
      "addNode": "Add Node",
      "buyNode": "Buy Node"
    },
    "searchOptions": {
      "node": {
        "label": "Node",
        "placeholder": "Search node name, id"
      },
      "ip": {
        "label": "IP",
        "placeholder": "Search node IP"
      },
      "role": {
        "label": "Role",
        "placeholder": "Select role"
      },
      "creator": {
        "label": "Creator",
        "placeholder": "Select creator"
      },
      "source": {
        "label": "Source",
        "placeholder": "Select source"
      }
    },
    "list": {
      "labels": {
        "role": "Role",
        "portRangeTip": "Please enter port number range between 1 ~ 65535",
        "selectRole": "Please select role",
        "connectionFailedAndRetry": "Connection failed, please check and re-fill node information before testing connection again",
        "estimatedTime": "Estimated to take one minute",
        "installSuccess": "Installation successful",
        "updateNodeSuccess": "Update node successful",
        "addNodeSuccess": "Add node successful",
        "modifyNodeNameSuccess": "Modify node name successful",
        "inputLimit200": "Input limit 200 characters",
        "installAgentTip": "Detect that the node has not installed the agent, please install the agent first and then use it",
        "freeNode": "Free Node",
        "nodeTip": "Tips: Node must be Linux (recommended), Mac, Windows system; Before executing tasks, you need to add nodes to the node list and install agents. If automatic \"agent installation\" fails due to network or server root account issues, you need to install agents according to the \"manual installation\" method to ensure the agent is in a connected state before executing tasks (if not started, you need to start the agent first); A node can take on multiple roles at the same time. To ensure more accurate test results, please use a single \"execution node\" role for stress test nodes; During stress testing, if you want to restore the user's real access environment and experience as much as possible, please use public network nodes. If you want to exclude interference from network and other external factors to test the application service's limits, you need to add your own intranet machines to the nodes.",
        "nodeTip2": "Tips: Node must be Linux (recommended), Mac, Windows system; Before executing tasks, you need to add nodes to the node list and install agents. If automatic \"agent installation\" fails due to network or server root account issues, you need to install agents according to the \"manual installation\" method to ensure the agent is in a connected state before executing tasks (if not started, you need to start the agent first); A node can take on multiple roles at the same time. To ensure more accurate test results, please use a single \"execution node\" role for stress test nodes; During stress testing, if you want to restore the user's real access environment and experience as much as possible, please use public network nodes. If you want to exclude interference from network and other external factors to test the application service's limits, you need to add your own intranet machines to the nodes.",
        "managerNode": "Management Node: ",
        "controllerNode": "Controller Node: ",
        "execNode": "Execution Node: ",
        "mockNode": "Mock Node: ",
        "appNode": "Application Node: ",
        "managerNodeDesc": "Deploy and run Web UI applications",
        "controllerNodeDesc": "Used for scheduling, managing, monitoring execution and agent services.",
        "execNodeDesc": "Used for executing functional tests, performance tests, data generation, etc.",
        "mockNodeDesc": "Runs Mock services and Mock interfaces.",
        "appNodeDesc": "Hosts the testing application and monitors target node load during stress tests for performance diagnostics.",
        "copySuccess": "Copied to clipboard"
      },
      "actions": {
        "testConnection": "Test Connection",
        "onlineInstall": "Online Install",
        "manualInstall": "Manual Install",
        "restartAgent": "Restart Agent"
      },
      "tips": {
        "editOwnNode": "Only own node can be deleted",
        "editPermission": "Edit node requires system administrator or application administrator permissions",
        "disableDelete": "Node must be disabled before deletion",
        "deletePermission": "Delete node requires system administrator or application administrator permissions",
        "deleteOwnNode": "Only own node can be deleted",
        "alreadyInstalled": "Already installed",
        "installPermission": "Online install agent requires system administrator or application administrator permissions",
        "manualInstallPermission": "Manual install agent requires system administrator or application administrator permissions",
        "roleDescription": "You can check the corresponding role of the node according to your actual needs",
        "managementNode": "Management Node: Deploy and run Web UI applications",
        "controllerNode": "Controller Node: Used for scheduling, managing, monitoring execution and agent services.",
        "executionNode": "Execution Node: Used for executing functional tests, performance tests, data generation, etc.",
        "mockNode": "Mock Node: Runs Mock services and Mock interfaces.",
        "applicationNode": "Application Node: Hosts the testing application and monitors target node load during stress tests for performance diagnostics."
      },
      "confirm": {
        "deleteNode": "Are you sure to delete node 「{name}」?"
      },
      "installSteps": {
        "linuxTitle": "Linux or Mac System Automatic Installation Steps",
        "configTitle": "Installation Configuration Information",
        "description": "Script must be executed as root user, installation directory is the directory where the script is located.",
        "method1": "Installation Method 1:",
        "method2": "Installation Method 2:",
        "downloadScript": "1). Download automatic installation script:",
        "copyScript": "2). Copy {scriptName} to custom installation directory, run script to install:"
      },
      "interface": {
        "formItems": {
          "nodeName": "Node Name",
          "intranetIP": "Intranet IP",
          "publicIP": "Public IP",
          "sshPort": "SSH Port",
          "role": "Role",
          "inputLimit200": "Input limit 200 characters",
          "inputNodeIP": "Enter node IP address",
          "inputNodeDomain": "Enter node domain",
          "inputUsername": "Enter username",
          "inputPassword": "Enter password",
          "inputSSHPort": "Enter SSH port"
        },
        "roleOptions": {
          "managementNode": "Management Node",
          "pressureTestNode": "Pressure Test Node",
          "mockNode": "Mock Node",
          "applicationNode": "Application Node"
        },
        "nodeStatus": {
          "agentInstallStatus": "Install Agent",
          "connectionStatus": "Connect Agent"
        },
        "viewItem": {
          "intranetIP": "Intranet IP: ",
          "publicIP": "Public IP: ",
          "role": "Role: ",
          "specification": "Specification: ",
          "system": "System: "
        },
        "nodeUseProgresses": {
          "cpu": "CPU",
          "memory": "Memory",
          "fileSystem": "File System",
          "swapArea": "Swap",
          "network": "Network",
          "totalUpload": "Total",
          "totalDownload": "Total"
        },
        "sortOptions": {
          "byAddTime": "By Add Time",
          "byName": "By Name"
        },
        "installConfigColumns": {
          "tenantId": "Tenant ID",
          "deviceId": "Device ID",
          "serverCtrlUrlPrefix": "Controller Address",
          "ctrlAccessToken": "Device Access Token"
        }
      }
    },
    "detail": {
      "labels": {
        "resourceMonitoring": "Resource Monitoring",
        "agentService": "Agent Service",
        "executingTasks": "Executing Tasks",
        "executorProcess": "Executor Process",
        "mockServiceInstance": "Mock Service Instance",
        "estimatedTime": "Estimated to take one minute",
        "disableDelete": "Node must be disabled before deletion",
        "deleteNodeTip": "Delete node requires system administrator or application administrator permissions",
        "onlyOwnNode": "Only own node can be deleted",
        "copySuccess": "Copied to clipboard",
        "installAgentTip": "Install agent requires system administrator or application administrator permissions"
      },
      "actions": {
        "onlineInstallAgent": "Online Install Agent",
        "manualInstallAgent": "Manual Install Agent"
      },
      "agent": {
        "title": "Agent Information",
        "tabs": {
          "agentInfo": "Agent Information",
          "viewLog": "View Log"
        },
        "columns": {
          "version": "Version",
          "home": "Installation Path",
          "uptime": "Uptime",
          "diskSpace": "Disk Space",
          "health": "Health Status"
        },
        "health": {
          "normal": "Normal",
          "abnormal": "Abnormal"
        },
        "log": {
          "options": {
            "500": "Last 500 lines",
            "1000": "Last 1000 lines",
            "10000": "Last 10000 lines"
          },
          "errorText": "No access to proxy information, connection failed address: http://{ip}:{port}",
          "noDownloadContent": "No downloadable content"
        }
      },
      "executor": {
        "columns": {
          "processId": "Process ID",
          "runTime": "Run Time",
          "user": "User",
          "virtualMemory": "Available Virtual Memory",
          "threadCount": "Thread Count",
          "openFiles": "Open Files",
          "writeDisk": "Write Disk",
          "readDisk": "Read Disk"
        },
        "confirmKillProcess": "Confirm to force exit process 「{processId}」?",
        "processExitSuccess": "Process exit successfully",
        "processCount": "Process Count",
        "threadCount": "Thread Count",
        "openFiles": "Open Files",
        "writeDisk": "Write Disk",
        "readDisk": "Read Disk",
        "killProcess": "Force Exit (kill)"
      },
      "mockService": {
        "columns": {
          "serviceId": "Service ID",
          "accessUrl": "Access URL",
          "accessPort": "Access Port"
        }
      },
      "chartOptions": {
        "timeOptions": {
          "threeMinutes": "Last 3 minutes",
          "fiveMinutes": "Last 5 minutes",
          "tenMinutes": "Last 10 minutes",
          "oneHour": "Last 1 hour",
          "threeHours": "Last 3 hours"
        },
        "columns": {
          "highest": "Highest",
          "lowest": "Lowest",
          "latest": "Latest"
        },
        "cpu": {
          "idle": "CPU Idle Percentage",
          "sys": "System Space Occupied CPU Percentage",
          "user": "User Space Occupied CPU Percentage",
          "wait": "Waiting IO Operation CPU Percentage",
          "other": "Other Occupied CPU Percentage",
          "total": "Total Occupied CPU Percentage"
        },
        "memory": {
          "usage": "Usage",
          "usageRate": "Usage Rate",
          "free": "Physical Memory Remaining (GB)",
          "used": "Physical Memory Used (GB)",
          "freePercent": "Actual Free Physical Memory Percentage (%)",
          "usedPercent": "Actual Used Physical Memory Percentage (%)",
          "actualFree": "Actual Free Memory (GB)",
          "actualUsed": "Actual Used Memory (GB)",
          "swapFree": "Swap Free (GB)",
          "swapUsed": "Swap Used (GB)"
        },
        "disk": {
          "iops": "IOPS",
          "mbPerSecond": "MB per Second",
          "total": "Total Disk Size (GB)",
          "free": "Free Disk Space (GB)",
          "used": "Used Disk Space (GB)",
          "avail": "Available Disk Space (GB)",
          "usePercent": "Disk Usage Percentage (%)",
          "readsRate": "Reads per Second (IO/s)",
          "writesRate": "Writes per Second (IO/s)"
        },
        "network": {
          "mbPerSecond": "MB per Second",
          "bytes": "Bytes",
          "errorPackets": "Error Packets",
          "rxBytes": "Received Total Bytes (GB)",
          "rxBytesRate": "Received MB per Second (MB/s)",
          "rxErrors": "Received Error Packets (packets)",
          "txBytes": "Sent Total Bytes (GB)",
          "txBytesRate": "Sent MB per Second (MB/s)"
        }
      }
    }
  },
  "proxy": {
    "title": "Proxy",
    "name": "Request Proxy",
    "proxyConfig": "Proxy Configuration",
    "hints": "By setting up request proxy, you can bypass cross-origin restrictions and successfully send requests to target servers. Using proxy can easily capture and view sent and received requests and responses. This is very useful for debugging API calls, checking request headers, request bodies and response data. You can choose a suitable proxy service according to your network environment.",
    "types": {
      "noProxy": "No Proxy",
      "noProxyDescription": "Request interfaces directly through browser, cross-origin restrictions need to be removed to access non-same-origin server interfaces.",
      "clientProxy": "Client Proxy",
      "clientProxyDescription": "Need to install \"proxy program\" on the computer where the browser is located, after configuration, client proxy will be used to send requests.",
      "serverProxy": "Server Proxy",
      "serverProxyDescription": "Need to install \"proxy program\" on a server host in a shared network, using server proxy does not require users to install proxy programs on their respective computers.",
      "cloudProxy": "Cloud Proxy",
      "cloudProxyDescription": "Request interfaces through AngusTester cloud server nodes. Note: Cannot access customer intranet service addresses."
    },
    "message": {
      "serverProxyNotConfigured": "Server proxy not configured or enabled, please check 'Configuration -> Proxy'",
      "proxyConnectionFailed": "Proxy connection failed, please check if the proxy service is running."
    },
    "download": {
      "title": "Download Proxy Program",
      "options": {
        "windowsDesktopProxy": "Windows Desktop Proxy",
        "macDesktopProxy": "Mac Desktop Proxy",
        "linuxProxy": "Linux Proxy",
        "manualInstallPackage": "Manual Install Package"
      }
    },
    "serverConfig": {
      "title": "Server Request Proxy Configuration",
      "labels": {
        "enable": "Enable Proxy",
        "proxyAddress": "Proxy Address"
      },
      "placeholders": {
        "inputProxyAddress": "Please enter proxy address"
      },
      "validation": {
        "addressTip": "Please enter a valid proxy address",
        "inputHost": "Please enter host",
        "inputPort": "Please enter port number, range 1~65535"
      }
    },
    "messages": {
      "proxyConfigModifiedSuccess": "Proxy configuration modified successfully"
    }
  }
}

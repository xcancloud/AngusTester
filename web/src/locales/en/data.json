{
  "dataHome": {
    "introduce": {
      "title": "AngusTester Parameterization Methods",
      "description": "Define reusable variables, dynamic data, mock functions, and parameter extraction mechanisms to automate testing workflows.",
      "variable": {
        "title": "Variable",
        "content": "Define constant values that can be reused throughout the testing process."
      },
      "dataset": {
        "title": "Dataset",
        "content": "Define a set of related test data that updates dynamically during execution."
      },
      "mockFunction": {
        "title": "Mock Function",
        "content": "Dynamically generate parameter values or random values during execution."
      },
      "samplingExtraction": {
        "title": "Sampling Extraction Variable",
        "content": "Extract values from previous response as parameters for subsequent sampling, re-extracting on each iteration."
      }
    },
    "statistics": {
      "resourceStatistics": "Total Resources",
      "usedCount": "Used",
      "unusedCount": "Unused"
    },
    "myCreationSummary": {
      "title": "My Parameterization",
      "addedVariables": "Added Variables",
      "addedDataSets": "Added Datasets",
      "addedSpaces": "Added Spaces",
      "addedDataSources": "Added Datasource"
    },
    "emptyData": {
      "noVariable": "You haven't added any variables yet, ",
      "addVariable": "Add Variable",
      "noDataset": "You haven't added any datasets yet, ",
      "addDataset": "Add Dataset",
      "noSpace": "You haven't added any spaces",
      "noDataSource": "You haven't added any data sources"
    }
  },
  "dataVariable": {
    "title": "Variable",
    "introduce": {
      "title": "About Variable",
      "description": "Define reusable values. Use {variableName} placeholder to reference variables, making testing more efficient and flexible. Note: Placeholders will be replaced with actual values before execution, and values remain unchanged during execution.",
      "types": {
        "fileExtract": {
          "title": "File Extraction",
          "description": "Extract values from files as variables. For example: reading a secret key."
        },
        "httpExtract": {
          "title": "HTTP Extraction",
          "description": "Extract values from HTTP requests as variables. For example: dynamically obtaining a token."
        },
        "jdbcExtract": {
          "title": "JDBC Extraction",
          "description": "Extract variable values from data source tables according to SQL. For example: current product price."
        }
      }
    },
    "actions": {
      "static": "Add Static Variable",
      "file": "Add File Variable",
      "http": "Add Http Variable",
      "jdbc": "Add Jdbc Variable",
      "uploadVariable": "Upload Variable",
      "downloadVariable": "Download Variable",
      "importModal": {
        "title": "Upload Variable",
        "uploadArea": {
          "selectFile": "Select File",
          "description": "You can drag files directly into this area for upload. File size should not exceed {maxSize}M. Supports .json, .yaml, .yml file types."
        },
        "fileSizeError": "File size cannot exceed {maxSize}M",
        "duplicateStrategy": {
          "title": "Processing strategy when encountering duplicates"
        }
      },
      "exportModal": {
        "title": "Download Variable",
        "format": "Format"
      }
    },
    "list": {
      "addedTitle": "Added Variables",
      "noVariableData": "You haven't added any variables yet, ",
      "addStaticVariable": "Add Static Variable",
      "uploadVariable": "Upload Variable",
      "or": "or",
      "isPassword": "Yes",
      "notPassword": "No"
    },
    "detail": {
      "staticVariable": {
        "passwordHint": "If the variable is a password type, the variable value is invisible to the user on the interface.",
        "hints": "If a variable contains mock functions, it auto-refreshes before each iteration (the value persists for all requests within that iteration)."
      },
      "httpVariable": {
        "hints": "Extract a value from Http before each test execution, commonly used to obtain a user access token, avoiding manual updates each time.",
        "interfaceConfig": "Configuration",
        "httpConfigs": {
          "title": "HTTP Configuration",
          "requestMethod": "Method",
          "requestMethodPlaceholder": "Method",
          "requestUrl": "Request URL",
          "requestUrlPlaceholder": "Path, starting with \" / \"",
          "requestParameters": "Parameters",
          "requestHeaders": "Headers",
          "requestCookie": "Cookies",
          "requestAuthorization": "Authorization",
          "requestBody": "Request Body",
          "requestBodyPlaceholder": "Please enter the request body content",
          "responseHeaders": "Response Headers",
          "responseBody": "Response Body",
          "extractConfig": "Extract Configuration",
          "extractMethod": "Extract Method",
          "extractExpression": "Extract Expression",
          "extractExpressionPlaceholder": "Please enter the extract expression",
          "testRequest": "Test Request",
          "testResponse": "Test Response",
          "selectApi": "Select Api",
          "selectApiPlaceholder": "Please select the api",
          "serverConfig": "Server Configuration",
          "serverPlaceholder": "Server address or URL prefix",
          "serverConfigPlaceholder": "Please select the server configuration",
          "serverVariableNotFound": "The variable cannot be found. Please define the variable or refresh and try again",
          "formatRawContent": "Format",
          "compressRawContent": "Compress",
          "uploadFile": "Upload File",
          "parameterInput": {
            "errors": {
              "duplicate": "Parameter Name Duplicate",
              "invalid": "Parameter Name Invalid"
            }
          },
          "requestBodyParameter": {
            "title": "Request Body Parameter",
            "addParameter": "Add Parameter",
            "deleteParameter": "Delete Parameter",
            "parameterName": "Parameter Name",
            "parameterValue": "Parameter Value",
            "parameterNamePlaceholder": "Please enter the parameter name",
            "parameterValuePlaceholder": "Please enter the parameter value, maximum 4096 characters",
            "parameterTypePlaceholder": "Please select the parameter type",
            "selectFile": "Select File",
            "summaryFileSize": "The total uploaded file size cannot exceed {maxSize}"
          }
        }
      },
      "jdbcVariable": {
        "hints": "Extract a value from the database query result before each test execution.",
        "selectDataSource": "Select Datasource",
        "databaseType": "Database Type",
        "databaseTypePlaceholder": "Database Type",
        "jdbcUrl": "Jdbc URL",
        "jdbcUrlPlaceholder": "Jdbc URL, maximum 2048 characters",
        "usernamePlaceholder": "Username, maximum 200 characters",
        "passwordPlaceholder": "Password, maximum 800 characters",
        "selectStatement": "Select SQL",
        "selectStatementPlaceholder": "Query Table Data Select Statement, maximum 1024 characters",
        "selectDatasource": {
          "title": "Select Datasource",
          "searchPlaceholder": "Search Datasource Name"
        }
      },
      "fileVariable": {
        "hints": "Extract a value from the file before each test execution.",
        "filePath": "File Path",
        "filePathPlaceholder": "File Local Path or File URL, maximum 800 characters",
        "fileType": "File Type",
        "fileEncoding": "File Encoding",
        "separator": "Separator",
        "separatorTooltip": "Csv type file parameter. Used to separate different fields or data columns in the CSV file, the default value is \",\".",
        "escapeChar": "Escape Char",
        "escapeCharTooltip": "Csv type file parameter, used to escape special characters in the field, especially when the quote character itself is included as a text character, the default is \"\\\\\".",
        "quoteChar": "Quote Char",
        "quoteCharTooltip": "Csv type file parameter. Used to represent the start and end of the field in the CSV file, especially when the field contains special characters such as delimiters (such as commas) or line breaks, the default is \"\\\\\"."
      }
    }
  },
  "dataset": {
    "title": "Dataset",
    "introduce": {
      "title": "About Dataset",
      "description": "Used to define a set of related data parameter values, usually actual test data, such as: user data, order data, account data, etc. After defining a dataset, you can use parameter name placeholders {parameterName} to reference dataset parameters.",
      "note": "Note: Datasets are loaded before execution sampling, and parameter values are dynamically changed during the sampling process. AngusTester supports the following three ways to define datasets:",
      "types": {
        "staticDataset": {
          "title": "Static Dataset",
          "description": "Use Mock functions and constant values to define a set of values as a dataset."
        },
        "fileExtract": {
          "title": "File Extraction",
          "description": "Extract a set of parameter values from a file as a dataset."
        },
        "jdbcExtract": {
          "title": "Jdbc Extraction",
          "description": "Extract a set of parameter values from a datasource as a dataset."
        }
      }
    },
    "actions": {
      "addStaticDataset": "Add Static Dataset",
      "addFileDataset": "Add File Dataset",
      "addJdbcDataset": "Add Jdbc Dataset",
      "uploadDataset": "Upload Dataset",
      "downloadDataset": "Download Dataset",
      "importDataset": {
        "title": "Upload Dataset",
        "uploadArea": {
          "selectFile": "Select File",
          "description": "You can drag files directly into this area for upload. File size should not exceed {maxSize}M. Supports .json, .yaml, .yml file types."
        },
        "fileSizeError": "File size cannot exceed {maxSize}M",
        "duplicateStrategy": {
          "title": "Processing strategy when encountering duplicates"
        }
      },
      "exportModal": {
        "title": "Download Dataset",
        "format": "Format"
      }
    },
    "list": {
      "addedTitle": "Added Datasets",
      "noDataText": "You haven't added any datasets yet, immediately",
      "or": "or",
      "tableDropdown": {
        "previewData": "Preview Data"
      },
      "messages": {
        "batchDeleteMaxError": "Maximum {maxNum} datasets can be batch deleted, currently {num} datasets are selected.",
        "batchDeleteConfirm": "Are you sure to delete the selected {num} datasets?",
        "batchDeleteSuccess": "All selected datasets deleted successfully",
        "batchDeleteMaxInfo": "Maximum {maxNum} datasets can be batch deleted, currently {num} datasets are selected."
      }
    },
    "detail": {
      "fileDataset": {
        "form": {
          "hints": "Read dataset from file, each dataset allows a maximum of 200 parameters, each parameter file cannot exceed 500MB, and the total number of rows cannot exceed 1000000.",
          "filePath": "File Path",
          "filePathPlaceholder": "File local path or file URL, maximum 800 characters",
          "fileType": "File Type",
          "fileEncoding": "File Encoding",
          "separator": "Separator",
          "separatorTooltip": "Csv type file parameter. Used to separate different fields or data columns in CSV files, the default value is \",\".",
          "escapeChar": "Escape Char",
          "escapeCharTooltip": "Csv type file parameter, used to escape special characters in fields, especially when the quote character itself is included as a text character, the default is \"\\\".",
          "quoteChar": "Quote Char",
          "quoteCharTooltip": "Csv type file parameter. Used to represent the start and end of fields in CSV files, especially when fields contain special characters such as separators (such as commas) or line breaks, the default is \"\\\"."
        }
      },
      "jdbcDataset": {
        "form": {
          "hints": "Extract a value from the database query result before each test execution as a dataset value.",
          "dataSource": "Datasource",
          "selectDataSource": "Select Datasource",
          "databaseType": "Database Type",
          "databaseTypePlaceholder": "Database Type",
          "jdbcUrl": "Jdbc URL",
          "jdbcUrlPlaceholder": "Jdbc URL, maximum 2048 characters",
          "usernamePlaceholder": "Username, maximum 200 characters",
          "passwordPlaceholder": "Password, maximum 800 characters",
          "selectStatement": "Select SQL",
          "selectStatementPlaceholder": "Select statement to query table data, no need to specify paging parameters, default fetch 5000 rows each time, maximum 1024 characters"
        }
      },
      "useList": {
        "notifications": {
          "batchDeleteLimit": "Maximum support batch deletion of {max} resources, currently {current} resources are selected.",
          "batchDeleteConfirm": "Confirm to delete the selected {num} resources?",
          "batchDeleteAllSuccess": "The selected {num} resources were all deleted successfully",
          "batchDeleteAllFail": "The selected {num} resources were all deleted failed",
          "batchDeletePartialSuccess": "The selected {success} resources were deleted successfully, {fail} resources were deleted failed",
          "batchDeleteLimitInfo": "Maximum support batch deletion of {max} resources, currently {current} resources are selected."
        },
        "hints": "View resource information using datasets."
      },
      "parameterNameInput": {
        "readColumn": "Read Column",
        "tooltip": "The parameter name order must be consistent with the file column data order, each name must be 100 characters or less.",
        "placeholder": "Enter parameter name, maximum 100 characters",
        "errors": {
          "duplicate": "Name duplicate",
          "invalid": "Name Enter parameter name"
        }
      },
      "staticDataset": {
        "hints": "Generate parameter values dynamically using Mock data functions. Each dataset supports up to 200 parameters and can generate up to 100 billion rows of data.",
        "parameterInput": {
          "errors": {
            "duplicate": "Name duplicate",
            "invalid": "Name Enter parameter name"
          }
        }
      }
    },
    "preview": {
      "hints": "Preview limited to 10k records. Mock parameters generate during sampling.",
      "previewRows": "Preview Rows",
      "placeholder": "1 ~ 10000"
    }
  },
  "datasource": {
    "title": "Data Source",
    "addedTitle": "Added Datasource",
    "introduce": {
      "title": "About Datasource",
      "description": "Supports managing and connecting multiple datasource. After configuring datasource information, you can quickly generate test data, project demonstration scenarios, and quickly reference data source configuration information in JDBC tests, parameterized variables, and datasets."
    },
    "actions": {
      "addDataSource": "Add Datasource"
    },
    "searchOptions": {
      "namePlaceholder": "Search Datasource name",
      "databasePlaceholder": "Select database type"
    },
    "testConnection": {
      "testing": "Testing...",
      "retest": "Retest",
      "testConnection": "Test Connection"
    },
    "form": {
      "labels": {
        "driverClassName": "Driver Class Name",
        "jdbcUrl": "Jdbc URL"
      },
      "placeholders": {
        "databaseType": "Database Type",
        "driverClassName": "Driver Class Name",
        "jdbcUrl": "Jdbc URL"
      },
      "rules": {
        "databaseType": "Please select database type",
        "jdbcUrl": "Please enter Jdbc URL"
      }
    }
  },
  "fileSpace": {
    "title": "File",
    "addedTitle": "Added Spaces",
    "type": {
      "directory": "Directory",
      "file": "File",
      "space": "Space"
    },
    "introduce": {
      "title": "About File",
      "description": "Provides online generation and storage functions for test data and business data files, with support for multi-person collaborative management and sharing.",
      "features": {
        "generateData": {
          "title": "Data Generation",
          "content": "Generate data files in multiple formats such as CSV, Excel, SQL, JSON, and XML for testing and business use."
        },
        "storageAndBackup": {
          "title": "Storage and Backup",
          "content": "Upload files to network disk for data backup and secure storage, preventing data loss and sharing issues."
        },
        "securityAndProtection": {
          "title": "Security Protection",
          "content": "Ensure data security and privacy through data-level permissions and encryption protection for uploaded files."
        },
        "spaceManagement": {
          "title": "Space Management",
          "content": "Provide storage space quota management with scalable capacity to meet storage needs of different scales."
        }
      }
    },
    "actions": {
      "generateData": "Generate Data",
      "addSpace": "Add Space",
      "compressFile": "Compress File"
    },
    "columns": {
      "spaceName": "Space Name",
      "folderCount": "Folder Count",
      "fileCount": "File Count",
      "used": "Used",
      "quota": "Quota",
      "actualSize": "Actual Size"
    },
    "drawer": {
      "spaceCapacity": "Space Capacity: ",
      "accountStorageCapacity": "Account Storage Capacity: "
    },
    "fileManagement": {
      "createDirectory": "Enter directory name, limited to 50 characters",
      "fileActions": {
        "details": "Details",
        "shareLink": "Share Link"
      },
      "messages": {
        "renameSuccess": "File renamed successfully",
        "addDirectorySuccess": "Directory added successfully"
      }
    },
    "share": {
      "title": "Share",
      "form": {
        "viewPermission": "View Permission",
        "viewLink": "View Link",
        "validityPeriod": "Validity Period",
        "remark": "Remark"
      },
      "permissionOptions": {
        "public": "Public",
        "private": "Private (Password Required)"
      },
      "validityOptions": {
        "setValidity": "Set Validity Period",
        "permanent": "Permanent"
      },
      "placeholders": {
        "password": "Please enter password",
        "validityPeriod": "Please enter validity period"
      },
      "buttons": {
        "copyLinkAndPassword": "Copy Link and Password",
        "generateLink": "Generate Link",
        "confirm": "Confirm"
      },
      "messages": {
        "generateShareLink": "Share link generated",
        "copySuccess": "Copied successfully",
        "linkAndPassword": "Link: {url} Password: {password}"
      },
      "shareList": {
        "addShare": "Add Share",
        "searchRemark": "Search Remark",
        "link": "Link",
        "password": "Password",
        "validityPeriod": "Validity Period",
        "permanentValid": "Permanent",
        "notifications": {
          "deleteSuccess": "Delete Share Record Success",
          "passwordEmpty": "The input password cannot be empty",
          "modifyPasswordSuccess": "Modify Password Success",
          "copySuccess": "Copy Success"
        }
      }
    },
    "permissionModal": {
      "title": "Space Permission",
      "onTips": "After enabling permission control, manual authorization is required to have corresponding operation permissions.",
      "offTips": "No permission restrictions, all users in the account can view and operate, permission control is not enabled by default."
    },
    "globalAuth": {
      "title": "Space Permission",
      "description": "Grant specified \"function\" operation permissions to users, departments, and groups. When granting permissions, \"VIEW\" permission is required. Users can only authorize functions for which they have authorization permissions.",
      "tabs": {
        "user": "User",
        "dept": "Department",
        "group": "Group"
      },
      "groupSet": {
        "placeholders": {
          "user": "Search user",
          "dept": "Search department",
          "group": "Search group"
        }
      },
      "authSet": {
        "searchPlaceholder": "Search name",
        "allPermissions": "All",
        "loadingTip": "Loading..."
      }
    },
    "spaceForm": {
      "title": "Add Space",
      "form": {
        "spaceName": "Space Name",
        "spaceQuota": "Space Quota",
        "remark": "Remark"
      },
      "placeholders": {
        "spaceName": "Enter space name, limited to 100 characters",
        "spaceQuota": "Enter space quota",
        "remark": "Limited to 200 characters"
      },
      "rules": {
        "spaceName": "Enter space name"
      },
      "quotaDescription": "(Limit the total storage size that the space can use, minimum 100MB)"
    },
    "capacity": {
      "used": "Used",
      "upgradeCapacity": "Upgrade Capacity"
    },
    "sort": {
      "title": "Sort",
      "menuItems": {
        "lastModifiedDate": "By Last Modified Time",
        "type": "By Add Type"
      }
    },
    "upload": {
      "clickToUpload": "Click here to upload files",
      "uploadComplete": "Upload Complete",
      "uploadFailed": "Upload Failed",
      "continueUpload": "Continue Upload"
    },
    "moveModal": {
      "title": "Select Move Path"
    },
    "spaceDetail": {
      "columns": {
        "actualSize": "Actual Size",
        "quota": "Quota",
        "mockFunc": "Mock Function"
      }
    }
  },
  "dataCommon": {
    "common": {
      "nameSupportPlaceholder": "Enter name, which supports numbers, letters, and !$%^&*_-+=./",
      "readConfig": "Read Configuration",
      "extractConfig": "Extract Configuration",
      "extractPosition": "Extract Position",
      "parameterName": "Parameter Name",
      "parameterNamePlaceholder": "Parameter name, maximum 400 characters ",
      "readStartRow": "Start Row",
      "readStartRowPlaceholder": "Read Row Index, default from 0",
      "readStartRowTooltip": "Read Parameter Value Start Row, default index based on 0, i.e. read the first row.",
      "readStartColumn": "Start Column",
      "readStartColumnPlaceholder": "Read Column Index, default from 0",
      "readStartColumnTooltip": "Read Parameter Start Column, default index based on 0, i.e. read the first column.",
      "extraction": "Extraction",
      "extractMethod": "Extract Method",
      "extractMethodPlaceholder": "Select extract method",
      "expression": "Expression",
      "expressionPlaceholder": "Expression, maximum 1024 characters",
      "matchItem": "Match Item",
      "matchItemPlaceholder": "Match Item, range 0-2000 (optional)",
      "defaultValuePlaceholder": "Default Value, maximum 4096 characters"
    },
    "searchPanel": {
      "sortOptions": {
        "byName": "By Name",
        "byCreator": "By Creator",
        "byCreateDate": "By Create Time",
        "byLastModifier": "By Last Modifier",
        "byLastModifyDate": "By Last Modify Time"
      },
      "batchActions": {
        "deleteSelected": "Delete Selected",
        "cancelDelete": "Cancel Delete",
        "batchDelete": "Batch Delete"
      },
      "messages": {
        "batchDeleteConfirm": "Are you sure to delete the selected {num} items?",
        "batchDeleteSuccess": "All selected items deleted successfully",
        "maxBatchDelete": "Maximum {maxNum} variables can be batch deleted, currently {num} items are selected.",
        "maxBatchDeleteError": "Maximum {maxNum} items can be batch deleted, currently {num} items are selected."
      }
    },
    "matchItemPopover": {
      "title": "Match Item Description",
      "description": "Match item is used to extract data from the response, supports multiple matching methods:",
      "regexp": {
        "title": "Regular Expression",
        "regexp": "Regular Expression",
        "item": "Use regular expression to extract data from the response, support group capture."
      },
      "jsonpath": {
        "title": "JSONPath",
        "jsonpath": "JSONPath Expression",
        "item": "Use JSONPath expression to extract data from the JSON response."
      },
      "xpath": {
        "title": "XPath",
        "xpath": "XPath Expression",
        "item": "Use XPath expression to extract data from the XML response."
      }
    },
    "useList": {
      "title": "Used List"
    },
    "previewData": {
      "title": "Preview Data",
      "tip": "Variable values resolve before sampling and persist unchanged throughout execution."
    }
  }
}

{
  "dataset": {
    "name": "Dataset",
    "addStaticDataset": "Add Static Dataset",
    "addFileDataset": "Add File Dataset",
    "addJdbcDataset": "Add Jdbc Dataset",
    "preview": {
      "hints": "A maximum of 10,000 data records can be previewed at a time. Mock function actual parameter values are generated during execution sampling.",
      "previewRows": "Preview Rows",
      "placeholder": "1 ~ 10000",
      "refresh": "Refresh",
      "noData": "No Data"
    },
    "list": {
      "title": "Added Datasets",
      "noDataText": "You haven't added any datasets yet, immediately",
      "or": "or",
      "uploadDataset": "Upload Dataset",
      "noDescription": "No description~",
      "buttonDropdown": {
        "fileExtractDataset": "File Extract Dataset",
        "jdbcExtractDataset": "Jdbc Extract Dataset"
      },
      "columns": {
        "name": "Name",
        "description": "Description",
        "valueSource": "Value Source",
        "lastModifiedBy": "Last Modified By",
        "createdBy": "Created By",
        "lastModifiedDate": "Last Modified Date",
        "createdDate": "Created Date",
        "action": "Action"
      },
      "tableDropdown": {
        "previewData": "Preview Data",
        "export": "Export",
        "clone": "Clone"
      },
      "messages": {
        "deleteConfirm": "Are you sure to delete dataset [{name}]?",
        "deleteSuccess": "Dataset deleted successfully",
        "cloneSuccess": "Dataset cloned successfully",
        "batchDeleteMaxError": "Maximum {maxNum} datasets can be batch deleted, currently {num} datasets are selected.",
        "batchDeleteConfirm": "Are you sure to delete the selected {num} datasets?",
        "batchDeleteSuccess": "All selected datasets deleted successfully",
        "batchDeleteMaxInfo": "Maximum {maxNum} datasets can be batch deleted, currently {num} datasets are selected."
      }
    },
    "listSearchPanel": {
      "quickQuery": "Quick Query",
      "menuItems": {
        "all": "All",
        "myCreated": "My Created",
        "myModified": "My Modified",
        "lastDay": "Last 1 Day",
        "lastThreeDays": "Last 3 Days",
        "lastWeek": "Last 7 Days"
      },
      "searchOptions": {
        "namePlaceholder": "Search name, description",
        "createdByPlaceholder": "Select creator",
        "createdDatePlaceholder": [
          "Created from",
          "Created to"
        ]
      },
      "sortMenuItems": {
        "byName": "By Name",
        "byCreator": "By Creator",
        "byCreateTime": "By Create Time",
        "byLastModifier": "By Last Modifier",
        "byLastModifyTime": "By Last Modify Time"
      },
      "buttons": {
        "deleteSelected": "Delete Selected",
        "cancelDelete": "Cancel Delete",
        "addStaticDataset": "Add Static Dataset",
        "batchDelete": "Batch Delete",
        "refresh": "Refresh"
      },
      "tooltips": {
        "uploadDataset": "Upload Dataset",
        "downloadDataset": "Download Dataset"
      },
      "buttonDropdown": {
        "fileExtractDataset": "File Extract Dataset",
        "jdbcExtractDataset": "Jdbc Extract Dataset"
      }
    },
    "introduce": {
      "title": "About Dataset",
      "description": "Used to define a set of related data parameter values, usually actual test data, such as: user data, order data, account data, etc. After defining a dataset, you can use parameter name placeholders {parameter name} to reference dataset parameters.",
      "note": "Note: Datasets are loaded before execution sampling, and parameter values are dynamically changed during the sampling process. AngusTester supports the following three ways to define datasets:",
      "types": {
        "staticDataset": {
          "title": "Static Dataset",
          "description": "Use Mock functions and constant values to define a set of values as a dataset."
        },
        "fileExtract": {
          "title": "File Extract",
          "description": "Extract a set of parameter values from a file as a dataset."
        },
        "jdbcExtract": {
          "title": "Jdbc Extract",
          "description": "Extract a set of values from a data source table as a dataset according to an SQL statement."
        }
      }
    },
    "importDataset": {
      "title": "Upload Dataset",
      "uploadArea": {
        "selectFile": "Select File",
        "description": "You can drag files directly into this area for upload. File size should not exceed {maxSize}M. Supports .json, .yaml, .yml file types."
      },
      "fileSizeError": "File size cannot exceed {maxSize}M",
      "duplicateStrategy": {
        "title": "Processing strategy when encountering duplicates",
        "cover": "Cover",
        "ignore": "Ignore"
      }
    },
    "exportModal": {
      "title": "Download Dataset",
      "format": "Format"
    },
    "detail": {
      "notifications": {
        "deleteConfirm": "Are you sure to delete dataset [{name}]?",
        "deleteSuccess": "Dataset deleted successfully",
        "cloneSuccess": "Dataset cloned successfully",
        "copyLinkSuccess": "Copy link successfully",
        "copyLinkFail": "Copy link failed"
      },
      "buttonGroup": {
        "save": "Save",
        "delete": "Delete",
        "export": "Export",
        "clone": "Clone",
        "copyLink": "Copy Link",
        "refresh": "Refresh"
      },
      
      "fileDataset": {
        "notifications": {
          "updateSuccess": "Dataset modified successfully",
          "addSuccess": "Dataset added successfully"
        },
        "form": {
          "name": "Name",
          "namePlaceholder": "Dataset name, maximum 100 characters",
          "description": "Description",
          "descriptionPlaceholder": "Dataset description, maximum 200 characters",
          "extraction": "Extraction",
          "hints": "Read dataset from file, each dataset allows a maximum of 200 parameters, each parameter file cannot exceed 500MB, and the total number of rows cannot exceed 1000000.",
          "parameterName": "Parameter Name",
          "readConfig": "Read Config",
          "filePath": "File Path",
          "filePathPlaceholder": "File local path or file URL, maximum 800 characters",
          "fileType": "File Type",
          "fileEncoding": "File Encoding",
          "readStartRow": "Read Start Row",
          "readStartRowPlaceholder": "Read row index, default from 0",
          "readStartRowTooltip": "Read parameter value start row, default index based on 0, that is, read the first row. Note: When the first row is the parameter name title row, usually need to read data from index 1, that is, the second row.",
          "readStartColumn": "Read Start Column",
          "readStartColumnPlaceholder": "Read column index, default from 0",
          "readStartColumnTooltip": "Read parameter start column, default index based on 0, that is, read the first column.",
          "separator": "Separator",
          "separatorTooltip": "Csv type file parameter. Used to separate different fields or data columns in CSV files, the default value is \",\".",
          "escapeChar": "Escape Character",
          "escapeCharTooltip": "Csv type file parameter, used to escape special characters in fields, especially when the quote character itself is included as a text character, the default is \"\\\".",
          "quoteChar": "Quote Character",
          "quoteCharTooltip": "Csv type file parameter. Used to represent the start and end of fields in CSV files, especially when fields contain special characters such as separators (such as commas) or line breaks, the default is \"\\\".",
          "extractionConfig": "Extraction Config",
          "extractionMethod": "Extraction Method",
          "extractionMethodPlaceholder": "Extraction Method",
          "defaultValue": "Default Value",
          "defaultValuePlaceholder": "Default value, maximum 4096 characters",
          "expression": "Expression",
          "expressionPlaceholder": "Expression, maximum 1024 characters",
          "matchItem": "Match Item",
          "matchItemPlaceholder": "Match item, range 0 ~ 2000"
        },
        "tabs": {
          "preview": "Preview",
          "use": "Use"
        }
      },
      "jdbcDataset": {
        "notifications": {
          "updateSuccess": "Dataset modified successfully",
          "addSuccess": "Dataset added successfully"
        },
        "form": {
          "name": "Name",
          "namePlaceholder": "Dataset name, maximum 100 characters",
          "description": "Description",
          "descriptionPlaceholder": "Dataset description, maximum 200 characters",
          "extraction": "Extraction",
          "hints": "Extract a value from the database query result before each test execution as a dataset value.",
          "parameterName": "Parameter Name",
          "readConfig": "Read Config",
          "selectDataSource": "Select Data Source",
          "databaseType": "Database Type",
          "databaseTypePlaceholder": "Database Type",
          "jdbcUrl": "JdbcUrl",
          "jdbcUrlPlaceholder": "Jdbc URL, maximum 2048 characters",
          "username": "Username",
          "usernamePlaceholder": "Username, maximum 200 characters",
          "password": "Password",
          "passwordPlaceholder": "Password, maximum 800 characters",
          "selectStatement": "Select Statement",
          "selectStatementPlaceholder": "Select statement to query table data, no need to specify paging parameters, default fetch 5000 rows each time, maximum 1024 characters",
          "readStartRow": "Read Start Row",
          "readStartRowPlaceholder": "Read row index, default from 0",
          "readStartRowTooltip": "Read parameter value start row, default index based on 0, that is, read the first row.",
          "readStartColumn": "Read Start Column",
          "readStartColumnPlaceholder": "Read column index, default from 0",
          "readStartColumnTooltip": "Read parameter start column, default index based on 0, that is, read the first column.",
          "extractionConfig": "Extraction Config",
          "extractionMethod": "Extraction Method",
          "extractionMethodPlaceholder": "Extraction Method",
          "defaultValue": "Default Value",
          "defaultValuePlaceholder": "Default value, maximum 4096 characters",
          "expression": "Expression",
          "expressionPlaceholder": "Expression, maximum 1024 characters",
          "matchItem": "Match Item",
          "matchItemPlaceholder": "Match item, range 0-2000 (optional)"
        },
        "tabs": {
          "preview": "Preview",
          "use": "Use"
        }
      },
      "useList": {
        "notifications": {
          "deleteConfirm": "Confirm to delete resource [{name}]?",
          "deleteSuccess": "Delete resource successfully",
          "batchDeleteLimit": "Maximum support batch deletion of {max} resources, currently {current} resources are selected.",
          "batchDeleteConfirm": "Confirm to delete the selected {num} resources?",
          "batchDeleteAllSuccess": "The selected {num} resources were all deleted successfully",
          "batchDeleteAllFail": "The selected {num} resources were all deleted failed",
          "batchDeletePartialSuccess": "The selected {success} resources were deleted successfully, {fail} resources were deleted failed",
          "batchDeleteLimitInfo": "Maximum support batch deletion of {max} resources, currently {current} resources are selected."
        },
        "table": {
          "resourceType": "Resource Type",
          "resourceId": "Resource ID",
          "resourceName": "Resource Name",
          "action": "Action"
        },
        "buttons": {
          "batchDelete": "Batch Delete",
          "deleteSelected": "Delete Selected",
          "cancelDelete": "Cancel Delete"
        },
        "hints": "View resource information using datasets."
      },
      "matchItemPopover": {
        "title": "Match Item",
        "description": "When the expression matches multiple values or the result is an array, specify the value as the expected value of the expression, support position from 0 to maximum value 2000, return null when the specified position data does not exist, and merge multiple values into a value when not specified.",
        "regexp": {
          "name": "Regexp Match",
          "columns": {
            "data": "Match Value",
            "expression": "Expression",
            "result": "Match Result",
            "item": "Match Item"
          },
          "item": "Default to merge match values when not specified position: \"1888888888813999999999\", specified position 0 to get value: \"18888888888\", specified position 1 to get value: \"13999999999\"."
        },
        "jsonpath": {
          "name": "JSONPath Match",
          "columns": {
            "data": "Match Value",
            "expression": "Expression",
            "result": "Match Result",
            "item": "Match Item"
          },
          "item": "Default to merge match values when not specified position: [{\"title\":\"Sayings of the Century\",\"price\":100},{\"title\":\"confucianism\",\"price\":200}], specified position 0 to get value: {\"title\":\"Sayings of the Century\",\"price\":100}, specified position 1 to get value: {\"title\":\"confucianism\",\"price\":200}."
        },
        "xpath": {
          "name": "XPath Match",
          "columns": {
            "data": "Match Value",
            "expression": "Expression",
            "result": "Match Result",
            "item": "Match Item"
          },
          "item": "Default to merge match values when not specified position: \"30codingbasketballAngus132codingAngus2\", specified position 0 to get value: \"30codingbasketballAngus1\", specified position 1 to get value: \"32codingAngus2\"."
        }
      },
      "parameterNameInput": {
        "name": "Name",
        "readColumn": "Read Column",
        "tooltip": "The parameter name order must be consistent with the file column data order, each name must be 100 characters or less.",
        "placeholder": "Support numbers, letters and !$%^&*_-+=./, maximum 100 characters",
        "errors": {
          "duplicate": "Name duplicate",
          "invalid": "Name support numbers, letters and !$%^&*_-+=./"
        }
      },
      "staticDataset": {
        "notifications": {
          "editSuccess": "Dataset modified successfully",
          "addSuccess": "Dataset added successfully"
        },
        "name": "Name",
        "description": "Description",
        "parameters": "Parameters",
        "preview": "Preview",
        "use": "Use",
        "namePlaceholder": "Dataset name, maximum 100 characters",
        "descriptionPlaceholder": "Dataset description, maximum 200 characters",
        "hints": "Generate parameter values dynamically based on Mock data functions during sampling, each dataset allows a maximum of 200 parameters, and supports generating up to 1000 billion rows of data.",
        "parameterInput": {
          "name": "Name",
          "value": "Value",
          "namePlaceholder": "Support numbers, letters and !$%^&*_-+=./, maximum 100 characters",
          "valuePlaceholder": "Parameter value, value can be constant or Mock function, maximum 4096 characters, value example: 123456, true, @String(5,10)",
          "errors": {
            "duplicate": "Name duplicate",
            "invalid": "Name support numbers, letters and !$%^&*_-+=./"
          }
        }
      }
    }
  },
  "datasource": {
    "name": "Data Source",
    "title": "About Data Source",
    "description": "Supports managing and connecting multiple data sources. After configuring data source information, you can quickly generate test data, project demonstration scenarios, and quickly reference data source configuration information in JDBC tests, parameterized variables, and datasets.",
    "addedTitle": "Added Data Sources",
    "addDataSource": "Add Data Source",
    "searchOptions": {
      "namePlaceholder": "Search data source name",
      "databasePlaceholder": "Select database type",
      "lastModifiedByPlaceholder": "Select modifier",
      "lastModifiedDatePlaceholder": [
        "Modified from",
        "Modified to"
      ]
    },
    "testConnection": {
      "testing": "Testing...",
      "success": "Success",
      "failed": "Failed",
      "retest": "Retest",
      "testConnection": "Test Connection"
    },
    "lastModifiedBy": "Last modified by",
    "messages": {
      "deleteConfirm": "Are you sure to delete [{name}]?",
      "deleteSuccess": "Deleted successfully",
      "addSuccess": "Added successfully",
      "editSuccess": "Modified successfully"
    },
    "form": {
      "title": {
        "add": "Add Data Source",
        "edit": "Edit Data Source"
      },
      "labels": {
        "type": "Type",
        "name": "Name",
        "driverClassName": "Driver Class Name",
        "jdbcUrl": "JBDC Url",
        "username": "Username",
        "password": "Password"
      },
      "placeholders": {
        "databaseType": "Database Type",
        "name": "Name",
        "driverClassName": "Driver Class Name",
        "jdbcUrl": "JBDC Url",
        "username": "Username",
        "password": "Password"
      },
      "rules": {
        "databaseType": "Please select database type",
        "name": "Please enter name",
        "jdbcUrl": "Please enter JDBC Url"
      }
    }
  },
  "dataHome": {
    "name": "Home",
    "activityTimeline": {
      "myActivity": "My Activity",
      "allActivity": "All Activity"
    },
    "statistics": {
      "myAdded": "My Added",
      "resourceStatistics": "Resource Statistics",
      "totalVariable": "Total Variable",
      "dataset": "Dataset",
      "file": "File",
      "dataSourceSet": "Data Source Set",
      "last7Days": "Last 7 Days",
      "last30Days": "Last 30 Days",
      "usedCount": "Used Count",
      "unusedCount": "Unused Count",
      "space": "Space",
      "directory": "Directory"
    },
    "myCreationSummary": {
      "title": "My Parameterization",
      "addedVariables": "Added Variables",
      "addedDataSets": "Added Datasets",
      "addedSpaces": "Added Spaces",
      "addedDataSources": "Added Data Sources"
    },
    "introduce": {
      "welcome": "Welcome to Angus Data!",
      "description": "Data can help you generate and manage business data and test data, and generate parameterized variables or datasets based on data.",
      "title": "AngusTester provides four parameterization methods to meet different needs:",
      "variable": {
        "title": "Variable",
        "content": "Define a constant value that can be shared and reused throughout the testing process."
      },
      "dataset": {
        "title": "Dataset",
        "content": "Define a set of related data parameters, usually actual test data, that dynamically change values during execution."
      },
      "mockFunction": {
        "title": "Mock Function",
        "content": "By referencing mock functions in tests, dynamically generate corresponding parameter values or random values during execution."
      },
      "samplingExtraction": {
        "title": "Sampling Extraction Variable",
        "content": "Extract a value from the previous sampling request or response as a parameter value for subsequent sampling, and re-extract it each time it iterates."
      }
    },
    "summaryTable": {
      "columns": {
        "id": "ID",
        "name": "Name",
        "createdBy": "Created By",
        "createdDate": "Created Date",
        "lastModifiedBy": "Last Modified By",
        "lastModifiedDate": "Last Modified Date",
        "action": "Action"
      },
      "pagination": {
        "pageInfo": "Page {current}/{totalPage}"
      },
      "messages": {
        "deleteConfirm": "Are you sure to delete 【{name}】?",
        "deleteSuccess": "Delete successful"
      },
      "emptyData": {
        "noVariable": "You haven't added any variables yet, ",
        "addVariable": "Add Variable",
        "noDataset": "You haven't added any datasets yet, ",
        "addDataset": "Add Dataset",
        "noSpace": "You haven't added any spaces",
        "noDataSource": "You haven't added any data sources"
      },
      "buttons": {
        "delete": "Delete"
      }
    }
  },
  "fileSpace": {
    "name": "File",
    "title": "About Files",
    "addedTitle": "Added Spaces",
    "searchPlaceholder": "Search space name",
    "buttons": {
      "generateData": "Generate Data",
      "addSpace": "Add Space",
      "spacePermission": "Space Permission"
    },
    "columns": {
      "spaceName": "Space Name",
      "folderCount": "Folder Count",
      "fileCount": "File Count",
      "used": "Used",
      "quota": "Quota",
      "addTime": "Add Time",
      "addBy": "Added By",
      "action": "Action",
      "name": "Name",
      "actualSize": "Actual Size",
      "lastModifiedDate": "Last Modified Date"
    },
    "actions": {
      "edit": "Edit",
      "permission": "Permission",
      "delete": "Delete"
    },
    "messages": {
      "deleteConfirm": "Confirm delete [{name}]?",
      "deleteSuccess": "Deleted successfully"
    },
    "drawer": {
      "basicInfo": "Basic Info",
      "spaceCapacity": "Space Capacity: ",
      "accountStorageCapacity": "Account Storage Capacity: "
    },
    "permissionModal": {
      "title": "Space Permission",
      "onTips": "After enabling permission control, manual authorization is required to have corresponding operation permissions.",
      "offTips": "No permission restrictions, all users in the account can view and operate, permission control is not enabled by default."
    },
    "fileManagement": {
      "directory": "Directory",
      "upload": "Upload",
      "delete": "Delete",
      "move": "Move",
      "refresh": "Refresh",
      "createDirectory": "Enter directory name, limited to 20 characters",
      "fileActions": {
        "delete": "Delete",
        "rename": "Rename",
        "move": "Move",
        "details": "Details",
        "download": "Download",
        "shareLink": "Share Link"
      },
      "messages": {
        "renameSuccess": "File renamed successfully",
        "addDirectorySuccess": "Directory added successfully",
        "deleteConfirm": "Confirm delete file/folder?",
        "deleteSuccess": "File deleted successfully",
        "copyLinkSuccess": "Link copied successfully"
      }
    },
    "share": {
      "title": "Share",
      "form": {
        "viewPermission": "View Permission",
        "viewLink": "View Link",
        "validityPeriod": "Validity Period",
        "remark": "Remark"
      },
      "permissionOptions": {
        "public": "Public",
        "private": "Private (Password Required)"
      },
      "validityOptions": {
        "setValidity": "Set Validity Period",
        "permanent": "Permanent"
      },
      "placeholders": {
        "password": "Please enter password",
        "validityPeriod": "Please enter validity period"
      },
      "buttons": {
        "copyLinkAndPassword": "Copy Link and Password",
        "generateLink": "Generate Link",
        "confirm": "Confirm"
      },
      "messages": {
        "generateShareLink": "Share link generated",
        "copySuccess": "Copied successfully",
        "link": "Link: {url}",
        "linkAndPassword": "Link: {url} Password: {password}"
      }
    },
    "introduce": {
      "description": "Provides unified online generation and storage functions for test data and business data files, as well as support for multi-person collaborative management and sharing. The following are the main functions and features of AngusTester files:",
      "features": {
        "generateData": {
          "title": "Generate Data",
          "content": "Generate data files in multiple formats such as CSV, Excel, SQL, JSON, XML, etc., convenient for testing or business use."
        },
        "storageAndBackup": {
          "title": "Storage and Backup",
          "content": "You can upload work or other types of files to the file network disk to achieve data backup and secure storage, avoiding loss and sharing inconvenience issues."
        },
        "securityAndProtection": {
          "title": "Security and Data Protection",
          "content": "For uploaded file data, data-level permissions and encryption protection ensure data security and privacy protection."
        },
        "spaceManagement": {
          "title": "Storage Space Management",
          "content": "Provides storage space quota management functions, which can expand storage capacity as needed to meet storage requirements of different scales and needs."
        }
      }
    },
    "globalAuth": {
      "title": "Space Permission",
      "description": "Grant specified \"function\" operation permissions to users, departments, and groups. When granting permissions, \"VIEW\" permission is required. Users can only authorize functions for which they have authorization permissions.",
      "tabs": {
        "user": "User",
        "dept": "Department",
        "group": "Group"
      },
      "groupSet": {
        "placeholders": {
          "user": "Search user",
          "dept": "Search department",
          "group": "Search group"
        }
      },
      "authSet": {
        "searchPlaceholder": "Search name",
        "headers": {
          "name": "Name",
          "permissionControl": "Permission Control",
          "permissions": "Permissions"
        },
        "allPermissions": "All",
        "loadingTip": "Loading..."
      }
    },
    "spaceForm": {
      "title": "Add Space",
      "form": {
        "spaceName": "Space Name",
        "spaceQuota": "Space Quota",
        "remark": "Remark"
      },
      "placeholders": {
        "spaceName": "Enter space name, limited to 100 characters",
        "spaceQuota": "Enter space quota",
        "remark": "Limited to 200 characters"
      },
      "rules": {
        "spaceName": "Enter space name"
      },
      "quotaDescription": "(Limit the total storage size that the space can use, minimum 100MB)"
    },
    "capacity": {
      "loading": "Loading...",
      "used": "Used",
      "upgradeCapacity": "Upgrade Capacity"
    },
    "crumb": {
      "currentPath": "Current Path:",
      "home": "Home",
      "ellipsis": "..."
    },
    "search": {
      "title": "Search"
    },
    "sort": {
      "title": "Sort",
      "menuItems": {
        "lastModifiedDate": "By Last Modified Time",
        "type": "By Add Type"
      }
    },
    "upload": {
      "clickToUpload": "Click here to upload files",
      "uploadComplete": "Upload Complete",
      "uploadFailed": "Upload Failed",
      "continueUpload": "Continue Upload",
      "cancel": "Cancel"
    },
    "moveModal": {
      "title": "Select Move Path"
    },
    "spaceDetail": {
      "columns": {
        "name": "Name",
        "id": "ID",
        "actualSize": "Actual Size",
        "quota": "Quota",
        "format": "Format",
        "createdBy": "Created By",
        "createdDate": "Created Date",
        "lastModifiedDate": "Last Modified Date",
        "remark": "Remark",
        "mockFunc": "Mock Function"
      }
    }
  },
  "dataVariable": {
    "name": "Variable",
    "title": "Variable",
    "addVariable": {
      "static": "Add Static Variable",
      "file": "Add File Variable",
      "http": "Add Http Variable",
      "jdbc": "Add Jdbc Variable"
    },
    "list": {
      "title": "Added Variables",
      "noData": "You haven't added any variables yet, ",
      "addStaticVariable": "Add Static Variable",
      "uploadVariable": "Upload Variable",
      "or": "or",
      "noDescription": "No description~",
      "isPassword": "Yes",
      "notPassword": "No",
      "columns": {
        "name": "Name",
        "value": "Value",
        "description": "Description",
        "password": "Password",
        "dataSource": "Data Source",
        "lastModifiedBy": "Last Modified By",
        "createdBy": "Created By",
        "lastModifiedDate": "Last Modified Date",
        "createdDate": "Created Date",
        "action": "Action"
      },
      "buttons": {
        "edit": "Edit",
        "delete": "Delete"
      },
      "dropdown": {
        "fileExtract": "File Extract Variable",
        "httpExtract": "Http Extract Variable",
        "jdbcExtract": "Jdbc Extract Variable",
        "export": "Export",
        "clone": "Clone"
      },
      "messages": {
        "deleteConfirm": "Are you sure to delete variable 【{name}】?",
        "deleteSuccess": "Variable deleted successfully",
        "cloneSuccess": "Variable cloned successfully",
        "batchDeleteConfirm": "Are you sure to delete the selected {num} variables?",
        "batchDeleteSuccess": "All selected variables deleted successfully",
        "maxBatchDelete": "Maximum {maxNum} variables can be batch deleted, currently {num} variables are selected.",
        "maxBatchDeleteError": "Maximum {maxNum} variables can be batch deleted, currently {num} variables are selected."
      },
      "searchPanel": {
        "quickSearch": "Quick Search",
        "all": "All",
        "createdByMe": "Created by Me",
        "modifiedByMe": "Modified by Me",
        "lastDay": "Last Day",
        "lastThreeDays": "Last 3 Days",
        "lastWeek": "Last Week",
        "searchOptions": {
          "namePlaceholder": "Search name, description",
          "createdByPlaceholder": "Select creator",
          "createdDatePlaceholder": [
            "Create time from",
            "Create time to"
          ]
        },
        "sortOptions": {
          "byName": "By Name",
          "byCreator": "By Creator",
          "byCreateTime": "By Create Time",
          "byLastModifier": "By Last Modifier",
          "byLastModifyTime": "By Last Modify Time"
        },
        "buttons": {
          "deleteSelected": "Delete Selected",
          "cancelDelete": "Cancel Delete",
          "addStaticVariable": "Add Static Variable",
          "batchDelete": "Batch Delete",
          "refresh": "Refresh"
        },
        "tooltips": {
          "uploadVariable": "Upload Variable",
          "downloadVariable": "Download Variable"
        },
        "dropdown": {
          "fileExtract": "File Extract Variable",
          "httpExtract": "Http Extract Variable",
          "jdbcExtract": "Jdbc Extract Variable"
        }
      }
    },
    "introduce": {
      "title": "About Variables",
      "description": "Used to define a value that can be reused. After defining a variable, you can use the variable placeholder {variableName} to reference the variable. Variables make testing and maintenance more efficient and flexible, while improving the repeatability and scalability of tests.",
      "note": "Note: Before executing sampling, variable placeholders will be replaced with corresponding variable values, and the values will not change during execution. AngusTester variables support defining static variables and also support the following three ways to extract a variable:",
      "types": {
        "fileExtract": {
          "title": "File Extract",
          "description": "Extract a value from a file as a variable value. For example: reading a secret key."
        },
        "httpExtract": {
          "title": "Http Extract",
          "description": "Extract a value from an Http request as a variable value. For example: dynamically obtaining a token."
        },
        "jdbcExtract": {
          "title": "Jdbc Extract",
          "description": "Extract specified variable values from data source tables according to SQL, such as: current product price."
        }
      }
    },
    "importModal": {
      "title": "Upload Variable",
      "uploadArea": {
        "selectFile": "Select File",
        "description": "You can drag files directly into this area for upload. File size should not exceed {maxSize}M. Supports .json, .yaml, .yml file types."
      },
      "fileSizeError": "File size cannot exceed {maxSize}M",
      "duplicateStrategy": {
        "title": "Processing strategy when encountering duplicates",
        "cover": "Cover",
        "ignore": "Ignore"
      }
    },
    "exportModal": {
      "title": "Download Variable",
      "format": "Format"
    }
  }
}

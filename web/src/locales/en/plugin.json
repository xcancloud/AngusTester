{
  "commonPlugin": {
    "selectScriptModal": {
      "title": "Select Script",
      "selectScriptTip": "Please select a script",
      "searchPlaceholder": "Search script name",
      "tableHeaders": {
        "plugin": "Plugin"
      }
    },
    "chartConfig": {
      "names": {
        "duration": "Duration",
        "errors": "Errors",
        "iterations": "Iterations",
        "n": "Samples",
        "operations": "Operations",
        "transactions": "Transactions",
        "readBytes": "Read Bytes",
        "writeBytes": "Write Bytes",
        "ops": "Operations Per Second",
        "tps": "Transactions Per Second",
        "brps": "Download/Second",
        "bwps": "Upload/Second",
        "tranMean": "Average",
        "tranMin": "Min",
        "tranMax": "Max",
        "tranP50": "P50",
        "tranP75": "P75",
        "tranP90": "P90",
        "tranP95": "P95",
        "tranP99": "P99",
        "tranP999": "P999",
        "errorRate": "Error Rate",
        "threadPoolSize": "Thread Count",
        "threadPoolActiveSize": "Active Threads",
        "threadMaxPoolSize": "Max Threads"
      },
      "columns": {
        "current": "Current",
        "downloadPerSecond": "Download/Second",
        "uploadPerSecond": "Upload/Second",
        "downloadPerSecondWithStats": "Download/Second (Current/Min/Max/Average)",
        "uploadPerSecondWithStats": "Upload/Second (Current/Min/Max/Average)",
        "opsWithStats": "Operations Per Second (Current/Min/Max/Average)",
        "tpsWithStats": "Transactions Per Second (Current/Min/Max/Average)"
      }
    },
    "menuData": {
      "toolbar": {
        "debugResult": "Debug Result",
        "logs": "Schedule Logs",
        "execLog": "Execution Log",
        "toggle": "Expand/Collapse",
        "screen": "Full Screen",
        "duration": "Duration",
      },
      "drawer": {
        "indicator": "Test Indicators",
        "testInfo": "Test Results",
        "activity": "Activity",
        "comment": "Comments"
      }
    },
    "utils": {
      "timeUnits": {
        "ms": "ms",
        "s": "s",
        "min": "min",
        "h": "h",
        "d": "d"
      },
      "formatTime": {
        "milliseconds": "ms",
        "seconds": "s",
        "minutes": "min",
        "hours": "h"
      },
      "defaultValue": "--"
    }
  },
  "httpPlugin": {
    "actions": {
      "select": "Select Script",
      "createExecution": "Create Execution"
    },
    "messages": {
      "saveSuccess": "Save successful",
      "deleteSuccess": "Delete successful",
      "importSuccess": "Import successful",
      "exportSuccess": "Export successful",
      "operationSuccess": "Operation successful",
      "operationFailed": "Operation failed",
      "pleaseSelect": "Please select",
      "pleaseInput": "Please input",
      "debugNeedSave": "Debug requires saving current data first, please save before debugging",
      "autoSaveAndDebug": "Auto save successful, executing debug...",
      "createExecutionSuccess": "Create execution test successful, please view details and results in 'Execution'",
      "taskConfigError": "Task configuration data error, please check and correct before saving.",
      "executeConfigError": "Execute configuration data error, please check and correct before saving.",
      "followSuccess": "Follow successful",
      "cancelFollowSuccess": "Cancel follow successful",
      "favouriteSuccess": "Favourite successful",
      "cancelFavouriteSuccess": "Cancel favourite successful",
      "paramError": "Parameter error"
    },
    "tabs": {
      "taskConfig": "Task Configuration",
      "executeConfig": "Execute Configuration"
    },
    "permission": {
      "title": "Scenario Permission",
      "onTips": "After enabling 'Permission Control', you need to manually authorize service permissions to have scenario operation permissions, 'Permission Control' is enabled by default. Note: If the authorized object does not have parent directory permissions, view permissions will be automatically granted.",
      "offTips": "After enabling 'No Permission Control', all users will be allowed to publicly view and operate the current scenario, and viewing users also need to have parent directory permissions for the current scenario."
    },
    "debugLog": {
      "schedulingResult": "Scheduling Result",
      "processExitCode": "Process Exit Code",
      "downloadFileName": "scheduling.log"
    },
    "debugResult": {
      "debugResult": "Debug Result",
      "exitCode": "Exit Code",
      "failureReason": "Failure Reason",
      "samplingStatus": "Sampling Status"
    },
    "drawerItem": {
      "namePlaceholder": "Maximum 200 characters",
      "descriptionPlaceholder": "Maximum 800 characters"
    },
    "execLog": {
      "node": "Node",
      "schedulingResult": "Scheduling Result",
      "processExitCode": "Process Exit Code",
      "downloadFileName": "runner.log"
    },
    "executeConfig": {
      "scriptType": "Script Type"
    },
    "exportScriptModal": {
      "title": "Export Script",
      "format": "Format"
    },
    "importScript": {
      "title": "Import Script"
    },
    "scriptConfig": {
      "yamlFormatError": "YAML content format error, please check and correct"
    },
    "performanceTestDetail": {
      "countCards": {
        "currentDuration": "Duration",
        "vu": "Concurrency",
        "qps": "QPS (Current / Max)",
        "tps": "TPS (Current / Max)",
        "err": "Error",
        "currentIterations": "Iterations",
        "rt": "Response Time (Min / Avg / Max)",
        "p50": "Response Percentile (P50 / P90 / P99)"
      },
      "tabs": {
        "aggregation": "Summary Results",
        "throughput": "Throughput",
        "vu": "Concurrency",
        "responseTime": "Response Time",
        "error": "Error",
        "httpCode": "Status Code",
        "node": "Node Resources",
        "analyze": "Superimpose Analysis"
      },
      "units": {
        "perSecond": "/s",
        "ms": "ms"
      }
    },
    "uiConfig": {
      "buttons": {
        "insertApi": "Insert API",
        "selectApi": "Select API",
        "selectUseCase": "Select Use Case",
        "insertTransStart": "Insert Start Transaction",
        "insertTransEnd": "Insert End Transaction",
        "insertWaitingTime": "Insert Waiting Time",
        "insertThroughputLimiter": "Insert Throughput Limiter",
        "insertRendezvous": "Insert Rendezvous"
      },
      "defaultNames": {
        "waitingTime": "Waiting Time",
        "throughputLimiter": "Throughput Limiter",
        "rendezvous": "Rendezvous"
      },
      "selectApiModal": {
        "title": "Select API",
        "searchPlaceholder": "Search API name",
        "tableHeaders": {
          "method": "Method",
          "path": "Path"
        },
        "reference": "Reference",
        "alreadyReferenced": "The selected interfaces contain already referenced interfaces and cannot be referenced repeatedly."
      },
      "selectUseCaseModal": {
        "title": "Select Use Case",
        "searchPlaceholder": "Search use case name",
        "reference": "Reference",
        "alreadyReferenced": "The selected use cases contain already referenced use cases and cannot be referenced repeatedly."
      },
      "throughput": {
        "title": "Throughput",
        "requestsPerSecond": "Requests Per Second",
        "waitTimeout": "Wait Timeout",
        "duplicateName": "Duplicate Name",
        "namePlaceholder": "Name, max 400 characters"
      },
      "transStart": {
        "title": "Transaction Start",
        "duplicateName": "Duplicate Name",
        "namePlaceholder": "Name, max 400 characters"
      },
      "waitingTime": {
        "title": "Waiting Time",
        "waitType": "Wait Type",
        "fixedWait": "Fixed Wait",
        "randomWait": "Random Wait",
        "to": "to",
        "duplicateName": "Duplicate Name",
        "namePlaceholder": "Name, max 400 characters"
      },
      "rendezvous": {
        "title": "Rendezvous",
        "userCount": "User Count",
        "waitTimeout": "Wait Timeout",
        "duplicateName": "Duplicate Name",
        "namePlaceholder": "Name, max 400 characters"
      },
      "transEnd": {
        "title": "Transaction End",
        "suffix": " End"
      },
      "httpConfigs": {
        "title": "HTTP Configuration",
        "requestBody": "Request Body",
        "assertions": "Assertions",
        "parameters": "Parameters",
        "serverEndpoint": "Server Endpoint",
        "default": "Default",
        "docInfo": {
          "pathParams": {
            "title": "Path Parameters",
            "rules": [
              "Primitive id = 5 -> /users/5",
              "Array id = 「3, 4, 5」 -> /users/3,4,5",
              "Object id = {\"role\": \"admin\", \"firstName\": \"Alex\"} -> /users/role=admin,firstName=Alex",
              "> Only supports primitive types, primitive type arrays, and object types. Other complex type data models are not parsed."
            ]
          },
          "queryFormParams": {
            "title": "Query and Form Parameters",
            "rules": [
              "Primitive id = 5 -> id=5",
              "Array id = 「3, 4, 5」 -> id「0」=3&id「1」=4&id「2」=5",
              "Object id = {\"role\": \"admin\", \"firstName\": \"Alex\"} -> id.role=admin&id.firstName=Alex",
              "> Supports all types, including object and array type nesting."
            ]
          },
          "headerParams": {
            "title": "Header Parameters",
            "rules": [
              "Primitive X-MyHeader = 5 ->  X-MyHeader: 5",
              "Array X-MyHeader = 「3, 4, 5」 -> X-MyHeader: 3,4,5",
              "Object X-MyHeader = {\"role\": \"admin\", \"firstName\": \"Alex\"} -> X-MyHeader: role=admin,firstName=Alex",
              "> Only supports primitive types, primitive type arrays, and object types. Other complex type data models are not parsed."
            ]
          },
          "cookieParams": {
            "title": "Cookie Parameters",
            "rules": [
              "Primitive id = 5 ->  Cookie: id=5",
              "Array id = 「3, 4, 5」 -> Cookie: id=3,4,5",
              "Object id = {\"role\": \"admin\", \"firstName\": \"Alex\"} -> Cookie: id=role,admin,firstName,Alex",
              "> Only supports primitive types, primitive type arrays, and object types. Other complex type data models are not parsed."
            ]
          }
        },
        "debugTip": [
          "Component debug value modification and synchronization: Modifying debug values for Query, Path, Header, and Form type parameters that reference components will synchronize modifications to the component, and other interfaces that reference the component will also be synchronized; while Raw request body content that references components will not synchronize modifications to the component when debug values are modified, meaning Raw request body component debug value modifications will not affect other interfaces.",
          "Locations where variables are supported in interfaces: Security schemes (Authorization), Path parameters, Query parameters, Header parameters, request body Form parameters, request body Raw, assertion condition expressions, and assertion expected values.",
          "Locations where functions are supported in interfaces: Path parameters, Query parameters, Header parameters, request body Form parameters, and request body Raw."
        ],
        "form": {
          "namePlaceholder": "Name, maximum 400 characters",
          "requestMethodPlaceholder": "Request Method",
          "serverPlaceholder": "server, maximum 400 characters",
          "pathPlaceholder": "path, maximum 800 characters"
        },
        "tooltips": {
          "nameRepeat": "Name Duplicate",
          "serverFormatError": "server format error",
          "pathFormatError": "path format error"
        },
        "tabs": {
          "requestParams": "Request Parameters",
          "requestHeaders": "Request Headers",
          "cookie": "Cookie",
          "authorization": "Authorization",
          "requestBody": "Request Body",
          "parameterization": "Parameterization",
          "assertion": "Assertion"
        },
        "popover": {
          "notes": "Notes",
          "parameterSerialization": "Parameter Serialization",
          "serializationDescription": "AngusTester serialization rules are based on a subset of UR templates defined by RFC6570. Supports OAS3 Schema data types including: string, boolean, integer, number, object, array."
        },
        "labels": {
          "default": "Default"
        },
        "serverEndpointConfig": {
          "title": "Server Endpoint Configuration",
          "serverEndpoint": "Server Endpoint",
          "serverEndpointPlaceholder": "Please enter server endpoint"
        },
        "parametric": {
          "title": "Parametric",
          "variables": {
            "title": "Variables",
            "addVariable": "Add Variable",
            "variableName": "Variable Name",
            "variableValue": "Variable Value",
            "extractionMethod": "Extraction Method",
            "extractionMethodPlaceholder": "Please select extraction method",
            "description": "Extract data from the current sampling request or response and store it in variables for use in subsequent requests.",
            "noVariablesDefined": "You have not defined any variables",
            "duplicateName": "Duplicate Name",
            "namePlaceholder": "Parameter name, max 100 characters",
            "locationPlaceholder": "Extraction Location",
            "parameterNamePlaceholder": "Extraction parameter name, max 100 characters",
            "defaultValuePlaceholder": "Extraction default value (optional), max 4096 characters",
            "expressionPlaceholder": "Extraction expression, max 1024 characters",
            "matchItemPlaceholder": "Match item (optional), range 0-2000"
          },
          "dataset": {
            "title": "Dataset",
            "addDataset": "Add Dataset",
            "datasetName": "Dataset Name",
            "datasetType": "Dataset Type",
            "previewData": "Preview Data",
            "extractParameters": "Extract Parameters",
            "staticParameters": "Static Parameters",
            "datasetUseList": "Dataset Use List",
            "description": "Datasets are used to store and manage test data, supporting multiple data formats and parameterized configurations.",
            "noDatasetsDefined": "You have not defined any datasets",
            "duplicateName": "Duplicate Name",
            "namePlaceholder": "Dataset name, max 100 characters",
            "typePlaceholder": "Please select dataset type",
            "actionOnEOF": "Action on End of File",
            "sharingMode": "Sharing Mode",
            "recycle": "Recycle",
            "stopThread": "Stop Thread",
            "allThread": "All Threads",
            "currentThread": "Current Thread",
            "previewDataModal": {
              "title": "Preview Data",
              "description": "View actual data content in the dataset",
              "previewRows": "Preview Rows",
              "previewRowsPlaceholder": "1 ~ 10000"
            },
            "datasetModal": {
              "title": "Reference Variables",
              "description": "Configure basic information and parameters of the dataset",
              "valueSource": "Value Source",
              "searchPlaceholder": "Search name or description"
            },
            "extractParametersModal": {
              "title": "Extract Parameters",
              "description": "Extract parameter configuration from dataset"
            },
            "extractParametersField": {
              "readColumn": "Read Column"
            },
            "staticParametersModal": {
              "title": "Static Parameters",
              "description": "Configure static parameter data"
            },
            "staticParametersDescription": "Parameter values are dynamically generated based on Mock data functions during sampling. Each dataset allows maximum 200 parameters and supports generating up to 100 billion rows of data.",
            "datasetUseListModal": {
              "title": "Dataset Use List",
              "description": "View dataset usage information"
            },
            "datasetUseListField": {
              "description": "View resource information that uses variables.",
              "resourceType": "Resource Type",
              "resourceId": "Resource ID",
              "resourceName": "Resource Name"
            },
            "hintTextMap": {
              "file": "Read dataset from file, each dataset allows maximum 200 parameters, each parameter file maximum 500MB, total rows not exceeding 1 million.",
              "jdbc": "Extract a value from database query results as dataset value before each test execution."
            },
            "recycleTooltip": "After all data rows in the dataset are used, data will be reused from the beginning.",
            "stopThreadTooltip": "After all data rows in the dataset are used, stop the current sampling thread execution. When all threads finish reading all rows, the entire execution exits and ends.",
            "allThreadTooltip": "All threads share the same dataset data.",
            "currentThreadTooltip": "Each thread copies its own dataset data.",
            "confirmUnlinkDataset": "Are you sure to unlink dataset 「{name}」?",
            "unlinkDataset": "Unlink",
            "viewDefinition": "View Definition",
            "parameters": "Parameters"
          },
          "matchItemPopover": {
            "dataColumn": "Match Value",
            "expressionColumn": "Expression",
            "resultColumn": "Match Result",
            "itemColumn": "Match Item",
            "regexp": {
              "title": "Regular Expression Match",
              "data": "When position is not specified or position 0 is specified, both take the merged match value at position 0: \"1888888888813999999999\". Specifying position 1 takes value: \"18888888888\". Specifying position 2 takes value: \"13999999999\"."
            },
            "jsonpath": {
              "title": "JSONPath Match",
              "data": "When position is not specified, the merged result is taken by default: 「{\"title\":\"Sayings of the Century\",\"price\":100},{\"title\":\"confucianism\",\"price\":200}」. Specifying position 0 takes value: {\"title\":\"Sayings of the Century\",\"price\":100}. Specifying position 1 takes value: {\"title\":\"confucianism\",\"price\":200}."
            },
            "xpath": {
              "title": "XPath Match",
              "data": "When position is not specified, the merged result is taken by default: \"30codingbasketballAngus132codingAngus2\". Specifying position 0 takes value: \"30codingbasketballAngus1\". Specifying position 1 takes value: \"32codingAngus2\"."
            },
            "hints": "Match Item",
            "description": "When an expression matches multiple values or the result is an array, specify which value to use as the expected value of the expression. Supports positions from 0 to a maximum of 2000. Returns null when the specified position data does not exist. When not specified, merges multiple values into one value."
          }
        },
        "assertionForm": {
          "title": "Assertion Form",
          "addAssertion": "Add Assertion",
          "assertionName": "Assertion Name",
          "assertionType": "Assertion Type",
          "expectedValue": "Expected Value",
          "actualValue": "Actual Value",
          "condition": "Condition",
          "conditionPlaceholder": "Please select condition",
          "description": "Assertions are used to verify that responses meet expectations, supporting multiple assertion types and conditions.",
          "noAssertionsDefined": "You have not defined any assertions",
          "duplicateName": "Duplicate Name",
          "namePlaceholder": "Assertion name, max 100 characters",
          "typePlaceholder": "Please select assertion type",
          "conditionPopover": {
            "title": "Condition Selection",
            "description": "Select assertion condition",
            "formatTitle": "Condition Expression Format",
            "formatExample": "{variable name} + operator + value, e.g.: {id}=100001.",
            "parameterTitle": "Parameter Description in Format",
            "variableDescription": "\"Variable\" refers to variables defined in the current interface, parent project/service, or globally, where variable reference symbols {} can be omitted.",
            "operatorDescription": "Supported \"operators\" include: =, !=, >, >=, <, <=.",
            "valueDescription": "The \"value\" on the right side of the operator can only be a constant."
          },
          "expectedPopover": {
            "title": "Expected Value",
            "description": "Set expected value",
            "matchItemTitle": "Match Item",
            "matchItemDescription": "When an expression matches multiple values or the result is an array, specify which value to use as the expected value of the expression. Supports positions from 0 to a maximum of 2000. Returns null when the specified position data does not exist. When not specified, merges multiple values into one value.",
            "emptyExpected": "Empty Expected Value",
            "emptyExpectedDescription": "When the expression matches a value, the assertion passes; otherwise, it fails.",
            "nonEmptyExpected": "Non-empty Expected Value",
            "nonEmptyExpectedDescription": "When the expression match value equals the expected value, the assertion passes; otherwise, it fails.",
            "regexpMatch": "Regular Expression Match",
            "jsonpathMatch": "JSONPath Match",
            "xpathMatch": "XPath Match",
            "matchValue": "Match Value",
            "expression": "Expression",
            "matchResult": "Match Result",
            "matchItem": "Match Item",
            "regexpItemDescription": "When position is not specified or position 0 is specified, both take the merged match value at position 0: \"1888888888813999999999\". Specifying position 1 takes value: \"18888888888\". Specifying position 2 takes value: \"13999999999\".",
            "jsonpathItemDescription": "When position is not specified, the merged result is taken by default: 「{\"title\":\"Sayings of the Century\",\"price\":100},{\"title\":\"confucianism\",\"price\":200}」. Specifying position 0 takes value: {\"title\":\"Sayings of the Century\",\"price\":100}. Specifying position 1 takes value: {\"title\":\"confucianism\",\"price\":200}.",
            "xpathItemDescription": "When position is not specified, the merged result is taken by default: \"30codingbasketballAngus132codingAngus2\". Specifying position 0 takes value: \"30codingbasketballAngus1\". Specifying position 1 takes value: \"32codingAngus2\"."
          },
          "matchItemPopover": {
            "title": "Match Item",
            "description": "Set match item",
            "regexpMatch": "Regular Expression Match",
            "jsonpathMatch": "JSONPath Match",
            "xpathMatch": "XPath Match",
            "matchValue": "Match Value",
            "expression": "Expression",
            "matchResult": "Match Result",
            "matchItem": "Match Item",
            "regexpItemDescription": "When position is not specified or position 0 is specified, both take the merged match value at position 0: \"1888888888813999999999\". Specifying position 1 takes value: \"18888888888\". Specifying position 2 takes value: \"13999999999\".",
            "jsonpathItemDescription": "When position is not specified, the merged result is taken by default: 「{\"title\":\"Sayings of the Century\",\"price\":100},{\"title\":\"confucianism\",\"price\":200}」. Specifying position 0 takes value: {\"title\":\"Sayings of the Century\",\"price\":100}. Specifying position 1 takes value: {\"title\":\"confucianism\",\"price\":200}.",
            "xpathItemDescription": "When position is not specified, the merged result is taken by default: \"30codingbasketballAngus132codingAngus2\". Specifying position 0 takes value: \"30codingbasketballAngus1\". Specifying position 1 takes value: \"32codingAngus2\"."
          },
          "assertion": {
            "name": {
              "duplicate": "Duplicate Name",
              "placeholder": "Assertion Name",
              "title": "Assertion Name"
            },
            "expression": {
              "error": "Expression Format Error"
            },
            "condition": {
              "placeholder": "Assertion Condition",
              "title": "Assertion Condition",
              "expression": {
                "placeholder": "Execution Condition Expression (Optional)",
                "title": "Execution Condition Expression (Optional)"
              }
            },
            "type": {
              "placeholder": "Assertion Type",
              "title": "Assertion Type"
            },
            "header": {
              "name": {
                "placeholder": "Response Header Name",
                "title": "Response Header Name"
              }
            },
            "show": {
              "expected": {
                "checked": "Extract Expected Value",
                "unchecked": "Expected Value"
              }
            },
            "extraction": {
              "method": {
                "placeholder": "Extraction Method",
                "title": "Extraction Method"
              },
              "location": {
                "placeholder": "Extraction Location",
                "title": "Extraction Location"
              },
              "parameter": {
                "name": {
                  "placeholder": "Extraction Parameter Name",
                  "title": "Extraction Parameter Name"
                }
              },
              "default": {
                "value": {
                  "placeholder": "Extraction Default Value (Optional)",
                  "title": "Extraction Default Value (Optional)"
                }
              },
              "expression": {
                "placeholder": "Extraction Expression",
                "title": "Extraction Expression",
                "error": "Expression Format Error"
              },
              "match": {
                "item": {
                  "placeholder": "Match Item, Range 0-2000 (Optional)",
                  "title": "Match Item"
                }
              }
            },
            "match": {
              "item": {
                "placeholder": "Match Item, Range 0-2000 (Optional)",
                "title": "Match Item"
              }
            },
            "expected": {
              "placeholder": "Expected Value (Optional)",
              "title": "Expected Value"
            },
            "description": {
              "placeholder": "Description (800 characters, optional)",
              "title": "Description (800 characters, optional)"
            }
          }
        },
        "requestBodyConfig": {
          "title": "Request Body Configuration",
          "bodyType": "Request Body Type",
          "bodyContent": "Request Body Content",
          "contentType": "Content Type",
          "formData": "Form Data",
          "xWwwFormUrlencoded": "x-www-form-urlencoded",
          "raw": "Raw",
          "binary": "Binary",
          "maxFileSize": "The total size of uploaded files cannot exceed {size}",
          "formatRawContent": "Format",
          "compressRawContent": "Compress",
          "namePlaceholder": "Please enter parameter name",
          "typePlaceholder": "Please select parameter type",
          "filePlaceholder": "Please select file",
          "valuePlaceholder": "Please enter parameter value, max 4096 characters"
        },
        "parameterInput": {
          "namePlaceholder": "Please enter parameter name",
          "valuePlaceholder": "Please enter parameter value, max 4096 characters"
        }
      }
    },
    "functionTestDetail": {
      "statusCode": "Status Code",
      "duration": "Duration",
      "basicInfo": {
        "duration": "Duration",
        "iteration": "Iterations",
        "request": "Requests",
        "responseTime": "Response Time",
        "assertion": "Assertions"
      },
      "collapse": {
        "iteration": "Iteration {iteration}"
      },
      "timeTexts": {
        "minimum": "Min",
        "average": "Avg",
        "maximum": "Max"
      },
      "ftp": {
        "duration": "Duration",
        "request": "Request",
        "response": "Response"
      },
      "http": {
        "tabs": {
          "general": "General",
          "requestBody": "Request Body",
          "response": "Response",
          "timeline": "Timeline",
          "assertions": "Assertion Results"
        },
        "headers": {
          "general": "General",
          "request": "Request Headers",
          "response": "Response Headers"
        },
        "timeline": {
          "dnsLookup": "DNS Lookup",
          "tcpConnection": "TCP Connection",
          "ssl": "SSL",
          "requestSent": "Request Sent",
          "waiting": "Waiting",
          "contentDownload": "Content Download",
          "totalTime": "Total Time",
          "timeItem": "Time Items",
          "time": "Time"
        },
        "responseBody": {
          "prettyFormat": "Pretty Format",
          "rawFormat": "Raw Format",
          "preview": "Preview"
        },
        "assertions": {
          "executionCondition": "Execution Condition",
          "variableValue": "Variable Value",
          "executionConditionResult": "Execution Condition Result",
          "assertionCondition": "Assertion Condition",
          "assertionResult": "Assertion Result",
          "failureReason": "Failure Reason",
          "expectedValue": "Expected Value",
          "extractedValue": "Extracted Value",
          "view": "View",
          "variable": "Variable",
          "expressionEmpty": "Expression is empty, execute this assertion",
          "operationResultNotEstablished": "Operation result not established, ignore this assertion",
          "operationResultEstablished": "Operation result established, execute this assertion",
          "noVariableDefined": "No {variable} variable defined, execute this condition expression directly",
          "executionConfig": "Execution Configuration",
          "pluginConfig": "Plugin Configuration",
          "ignoreAssertionsTip": "You have enabled ignore assertions, assertions will not be executed this time. If you need to enable assertions, please turn off the ignore assertions option in {executionConfig} > {pluginConfig}."
        },
        "typeMap": {
          "status": "Response Status Code",
          "header": "Response Header",
          "body": "Response Body",
          "bodySize": "Response Body Size",
          "size": "Response Size",
          "duration": "Duration"
        },
        "conditionMap": {
          "contain": "Contains",
          "equal": "Equals",
          "greaterThan": "Greater Than",
          "greaterThanEqual": "Greater Than or Equal",
          "isEmpty": "Is Empty (empty string or null value)",
          "isNull": "Is Null",
          "lessThan": "Less Than",
          "lessThanEqual": "Less Than or Equal",
          "notContain": "Not Contains",
          "notEmpty": "Not Empty (non-empty string or null value)",
          "notEqual": "Not Equals",
          "notNull": "Not Null",
          "regMatch": "Regex Match",
          "xpathMatch": "XPath Match",
          "jsonPathMatch": "JSONPath Match"
        }
      },
      "rendezvous": {
        "userCount": "User Count",
        "waitTimeout": "Wait Timeout"
      },
      "throughput": {
        "requestsPerSecond": "Requests Per Second",
        "waitTimeout": "Wait Timeout"
      },
      "waitingTime": {
        "fixedWait": "Fixed Wait",
        "randomWait": "Random Wait",
        "to": "to"
      }
    }
  },
  "jdbcPlugin": {
    "title": "JDBC Plugin",
    "taskConfig": "Task Configuration",
    "executeConfig": "Execute Configuration",
    "UIConfigJdbc": {
      "insertJDBC": "Insert JDBC",
      "insertTransStart": "Insert Transaction Start",
      "insertTransEnd": "Insert Transaction End",
      "insertWaitingTime": "Insert Waiting Time",
      "insertRendezvous": "Insert Rendezvous",
      "waitingTime": "Waiting Time",
      "rendezvous": "Rendezvous",
      "jdbcConfig": {
        "nameDuplicate": "Name Duplicate",
        "namePlaceholder": "Name, maximum 400 characters",
        "descriptionPlaceholder": "Description, maximum 800 characters (optional)",
        "queryTypePlaceholder": "Query Type",
        "insertSqlTemplate": "Insert SQL Template",
        "sqlPlaceholder": "SQL, maximum 8192 characters",
        "processResultRows": "Process Query Result Rows",
        "processResultRowsTooltip": "Default 1000, maximum 10000 rows. When actual returned result rows exceed the set processing query result rows, they will be ignored.",
        "processResultRowsPlaceholder": "Value range: 1~10000",
        "queryTimeout": "Query Timeout",
        "queryTimeoutPlaceholder": "Value range: 0~2147483647",
        "queryParameters": "Query Parameters",
        "parameterTypePlaceholder": "Enter or select parameter type (optional)",
        "inputOutputPlaceholder": "Input/Output",
        "inputOutputTooltip": "Parameter value is required when input/output value is 'IN' or 'INOUT'",
        "parameterValuePlaceholder": "Parameter value (optional. Note: Parameter value is required when input/output value is 'IN' or 'INOUT')",
        "parametric": "Parametric",
        "assertions": "Assertions"
      },
      "assertionForm": {
        "nameDuplicate": "Name Duplicate",
        "assertionName": "Assertion Name",
        "assertionNamePlaceholder": "Assertion Name",
        "assertionType": "Assertion Type",
        "assertionTypePlaceholder": "Assertion Type",
        "assertionCondition": "Assertion Condition",
        "assertionConditionPlaceholder": "Assertion Condition",
        "expressionFormatError": "Expression Format Error",
        "matchItem": "Match Item",
        "matchItemPlaceholder": "Match item, range 0~2000 (optional)",
        "expectedValue": "Expected Value",
        "expectedValuePlaceholder": "Expected Value",
        "expectedValueOptional": "Expected Value (optional)",
        "description": "Description (800 characters, optional)",
        "descriptionPlaceholder": "Description (800 characters, optional)",
        "expressionMap": {
          "REG_MATCH": "Regular Expression Match",
          "XPATH_MATCH": "XPath Match Expression",
          "JSON_PATH_MATCH": "JSONPath Match Expression"
        }
      }
    },
    "FunctionTestDetailJdbc": {
      "duration": "Duration",
      "requestParameters": "Request Parameters",
      "assertionResults": "Assertion Results",
      "ignoreAssertionMessage": "You have enabled ignore assertions, assertions will not be executed this time. If you need to enable assertions, please",
      "executeConfig": "Execute Configuration > Plugin Configuration",
      "closeIgnoreAssertion": "to close the ignore assertion option.",
      "requestParameter": {
        "parameter": "Parameter",
        "result": "Result",
        "maxRecords": "Maximum 1000 records displayed",
        "affectedRows": "Affected rows",
        "rows": "rows"
      },
      "assertionResult": {
        "view": "View",
        "assertionCondition": "Assertion Condition",
        "assertionResult": "Assertion Result",
        "failureReason": "Failure Reason",
        "extractedValue": "Extracted Value",
        "expectedValue": "Expected Value",
        "typeMap": {
          "STATUS": "Response Status Code",
          "HEADER": "Response Header",
          "BODY": "Response Body",
          "BODY_SIZE": "Response Body Size",
          "SIZE": "Response Size",
          "DURATION": "Duration"
        },
        "conditionMap": {
          "CONTAIN": "Contains",
          "EQUAL": "Equals",
          "GREATER_THAN": "Greater Than",
          "GREATER_THAN_EQUAL": "Greater Than or Equal",
          "IS_EMPTY": "Is Empty (empty string or null value)",
          "IS_NULL": "Is Null",
          "LESS_THAN": "Less Than",
          "LESS_THAN_EQUAL": "Less Than or Equal",
          "NOT_CONTAIN": "Does Not Contain",
          "NOT_EMPTY": "Is Not Empty (non-empty string or null value)",
          "NOT_EQUAL": "Not Equal",
          "NOT_NULL": "Is Not Null",
          "REG_MATCH": "Regular Expression Match",
          "XPATH_MATCH": "XPath Match",
          "JSON_PATH_MATCH": "JSONPath Match"
        }
      }
    },
    "notifications": {
      "debugSaveFirst": "Debug requires saving current data first, please save before debugging",
      "autoSaveSuccess": "Auto save successful, executing debug...",
      "createTestSuccess": "Create 'Execute Test' successful, please view details and results in 'Execute'",
      "taskConfigError": "Task configuration data error, please check and correct before saving.",
      "executeConfigError": "Execute configuration data error, please check and correct before saving.",
      "followSuccess": "Follow successful",
      "cancelFollowSuccess": "Cancel follow successful",
      "favouriteSuccess": "Favorite successful",
      "cancelFavouriteSuccess": "Cancel favorite successful",
      "saveSuccess": "Save successful",
      "paramError": "Parameter error"
    },
    "authorizeModal": {
      "title": "Scenario Permission",
      "onTips": "After enabling 'Permission Control', manual authorization of service permissions is required to have corresponding operation permissions for scenarios. 'Permission Control' is enabled by default. Note: If the authorized object does not have parent directory permissions, view permissions will be automatically granted.",
      "offTips": "After enabling 'No Permission Control', all users will be allowed to publicly view and operate the current scenario. Users viewing need to have parent directory permissions for the current scenario."
    }
  },
  "ftpPlugin": {
    "tabs": {
      "taskConfig": "Task Configuration",
      "executeConfig": "Execution Configuration"
    },
    "toolbar": {
      "debugResult": "Debug Result",
      "logs": "Scheduling Log",
      "execLog": "Execution Log",
      "toggle": "Expand/Collapse",
      "screen": "Full Screen"
    },
    "drawer": {
      "indicator": "Performance Indicators",
      "testInfo": "Test Results",
      "activity": "Activity",
      "comment": "Comments"
    },
    "messages": {
      "debugSaveRequired": "Debug requires saving current data first, please save before executing debug"
    },
    "permission": {
      "title": "Scenario Permissions",
      "onTips": "After enabling \"Permission Control\", manual authorization of service permissions is required to have corresponding operation permissions for scenarios. \"Permission Control\" is enabled by default. Note: If the authorized object does not have parent directory permissions, view permissions will be automatically granted.",
      "offTips": "After enabling \"No Permission Control\", all users will be allowed to publicly view and operate the current scenario. Users viewing the scenario must also have parent directory permissions for the current scenario."
    },
    "buttonGroup": {
      "select": "Select Script",
      "import": "Import Script",
      "test": "Create Execution"
    },
    "debugLog": {
      "schedulingResult": "Scheduling Result",
      "processExitCode": "Process Exit Code",
      "downloadFileName": "scheduling.log"
    },
    "debugResult": {
      "debugResult": "Debug Result",
      "exitCode": "Exit Code",
      "failureReason": "Failure Reason",
      "samplingStatus": "Sampling Status"
    },
    "drawerMenu": {
      "saveForm": {
        "scriptName": "Script Name",
        "scriptId": "Script ID",
        "namePlaceholder": "Maximum 200 characters",
        "descriptionPlaceholder": "Maximum 800 characters"
      }
    },
    "execLog": {
      "node": "Node",
      "schedulingResult": "Scheduling Result",
      "success": "Success",
      "fail": "Failed",
      "processExitCode": "Process Exit Code",
      "downloadFileName": "runner.log"
    },
    "executeConfig": {
      "scriptType": "Script Type"
    },
    "exportScriptModal": {
      "title": "Export Script",
      "format": "Format"
    },
    "functionTestDetail": {
      "basicInfo": {
        "duration": "Duration",
        "iteration": "Iterations",
        "request": "Requests",
        "responseTime": "Response Time",
        "assertion": "Assertions"
      },
      "collapse": {
        "iteration": "Iteration {iteration}"
      },
      "ftp": {
        "duration": "Duration",
        "request": "Request",
        "response": "Response"
      }
    },
    "scriptConfig": {
      "messages": {
        "yamlFormatError": "YAML content format error, please check and correct"
      }
    },
    "performanceTestDetail": {
      "basicInfo": {
        "executionDuration": "Execution",
        "concurrency": "Concurrency",
        "queriesPerSecond": "Queries/Second (Current / Max)",
        "transactionsPerSecond": "Transactions/Second (Current / Max)",
        "errors": "Errors (Error)",
        "iterations": "Iterations",
        "responseTime": "Response Time (Min /Avg / Max)",
        "percentile": "Response Percentile (P50 / P90 / P99)"
      },
      "tabs": {
        "aggregation": "Aggregation Results",
        "throughput": "Throughput",
        "concurrency": "Concurrency",
        "responseTime": "Response Time",
        "error": "Errors",
        "statusCode": "Status Code",
        "node": "Node Resources",
        "analyze": "Superimpose Analysis"
      },
      "scriptInfo": {
        "form": {
          "scriptTypeRequired": "Please select script type",
          "scriptTypePlaceholder": "Please select script type",
          "scriptNameRequired": "Please enter script name, maximum 200 characters",
          "scriptNamePlaceholder": "Please enter script name, maximum 200 characters",
          "descriptionRequired": "Please enter script description, maximum 800 characters",
          "descriptionPlaceholder": "Please enter script description, maximum 800 characters"
        }
      },
      "sampling": {
        "title": "Error Sampling",
        "time": "Time",
        "samplingId": "Sampling ID"
      },
      "countTemplate": {
        "radioButtons": {
          "byApi": "By API",
          "byMetric": "By Metric",
          "overlayAnalysis": "Overlay Analysis"
        }
      },
      "superimposeAnalysis": {
        "toggleTitles": {
          "throughput": "Throughput (TPS / QPS)",
          "concurrency": "Concurrency (VU)",
          "responseTime": "Response Time (RT, ms)",
          "error": "Errors (ERROR)"
        },
        "throughputOptions": {
          "queriesPerSecond": "Queries/Second",
          "transactionsPerSecond": "Transactions/Second",
          "downloadPerSecond": "Download/Second",
          "uploadPerSecond": "Upload/Second"
        },
        "threadOptions": {
          "threadCount": "Thread Count",
          "maxThreadCount": "Max Thread Count",
          "activeThreadCount": "Active Thread Count"
        },
        "responseTimeOptions": {
          "average": "Avg",
          "minimum": "Min",
          "maximum": "Max",
          "p50": "P50",
          "p75": "P75",
          "p90": "P90",
          "p95": "P95",
          "p99": "P99",
          "p999": "P999"
        },
        "errorOptions": {
          "errorCount": "Error Count",
          "errorRate": "Error Rate"
        }
      },
      "nodeData": {
        "tabs": {
          "cpu": "CPU",
          "memory": "Memory",
          "fileSystem": "File System",
          "network": "Network"
        },
        "nodeTypes": {
          "execNode": "Execution Node",
          "appNode": "Application Node"
        },
        "diskDataOptions": {
          "iops": "IOPS",
          "mbPerSecond": "MB/Second"
        },
        "cpuMetrics": {
          "idlePercentage": "CPU Idle Percentage (%)",
          "systemSpacePercentage": "System Space CPU Usage (%)",
          "userSpacePercentage": "User Space CPU Usage (%)",
          "ioWaitPercentage": "IO Wait CPU Percentage (%)",
          "otherPercentage": "Other CPU Usage (%)",
          "totalPercentage": "Total CPU Usage (%)"
        },
        "memoryMetrics": {
          "physicalMemoryFree": "Physical Memory Free (GB)",
          "physicalMemoryUsed": "Physical Memory Used (GB)",
          "actualFreePercentage": "Actual Free Memory Percentage (%)",
          "actualUsedPercentage": "Actual Used Memory Percentage (%)",
          "actualFreeMemory": "Actual Free Memory (GB)",
          "actualUsedMemory": "Actual Used Memory (GB)",
          "freeMemoryPercentage": "Free Memory Percentage (%)",
          "usedMemoryPercentage": "Used Memory Percentage (%)",
          "swapUsed": "Swap Used (GB)",
          "swapFree": "Swap Free (GB)"
        },
        "diskMetrics": {
          "totalSize": "Total Disk Size (GB)",
          "fileSystemFree": "File System Free (GB)",
          "fileSystemUsed": "File System Used (GB)",
          "fileSystemAvailable": "File System Available (GB)",
          "fileSystemUsage": "File System Usage (%)",
          "diskReadsPerSecond": "Disk Reads/Second (IO/s)",
          "diskWritesPerSecond": "Disk Writes/Second (IO/s)",
          "diskReadMBPerSecond": "Disk Read MB/Second (MB/s)",
          "diskWriteMBPerSecond": "Disk Write MB/Second (MB/s)"
        },
        "networkMetrics": {
          "totalBytesReceived": "Total Bytes Received (GB)",
          "mbReceivedPerSecond": "MB Received/Second (MB/s)",
          "errorPacketsReceived": "Error Packets Received (packets)",
          "totalBytesSent": "Total Bytes Sent (GB)",
          "mbSentPerSecond": "MB Sent/Second (MB/s)"
        }
      },
      "execSetting": {
        "messages": {
          "modifySuccess": "Modified Successfully"
        }
      },
      "execLog": {
        "selectNode": "Select Node",
        "schedulingLog": {
          "title": "Scheduling Log",
          "lastSchedulingTime": "Last Scheduling Time",
          "result": "Result",
          "success": "Success",
          "fail": "Failed",
          "exitCode": "Exit Code"
        },
        "execLog": {
          "title": "Execution Log",
          "file": "File",
          "noProxyInfo": "No proxy access information, connection failed at: ",
          "downloadFileName": "runner.log"
        },
        "downloadFileName": {
          "scheduling": "scheduling.log"
        }
      },
      "conterList": {
        "errorStatistics": "Error Statistics",
        "errorCount": "Error Count",
        "errorRate": "Error Rate"
      },
      "aggregate": {
        "radioButtons": {
          "byThroughput": "By Throughput",
          "byResponseTime": "By Response Time",
          "byErrorCount": "By Error Count",
          "byErrorRate": "By Error Rate",
          "byUploadDownload": "By Upload / Download"
        }
      }
    },
    "uiConfig": {
      "title": "Insert FTP Request",
      "description": "Supports orchestrating multiple FTP interfaces simultaneously, but only one FTP is allowed to be enabled for testing at a time.",
      "comments": {
        "onlyOneEnabled": "Only one can be enabled",
        "cloneLocalFile": "Clone local file",
        "checkCloneNameExists": "Check if clone name already exists"
      },
      "form": {
        "nameDuplicate": "Name Duplicate",
        "namePlaceholder": "Name, maximum 400 characters",
        "descriptionPlaceholder": "Description, maximum 800 characters (optional)",
        "none": "None"
      },
      "serverConfig": {
        "title": "Server Configuration",
        "hostnameOrIP": "Hostname or IP",
        "hostnameOrIPPlaceholder": "Hostname or IP, maximum 4096 characters",
        "port": "Port",
        "portPlaceholder": "Port (1~65535)",
        "usernamePlaceholder": "Username, maximum 400 characters",
        "passwordPlaceholder": "Password, maximum 4096 characters",
        "connectionTimeout": "Connection Timeout",
        "connectionTimeoutPlaceholder": "Connection timeout, maximum 24 hours",
        "readTimeout": "Read Timeout",
        "readTimeoutPlaceholder": "Read timeout, maximum 24 hours"
      },
      "fileConfig": {
        "localFilePath": "Local File Path",
        "localFilePathPlaceholder": "Local file path, maximum 4096 characters",
        "localFileNameTooltip": "Local file name, which is the name of the uploaded local file, can also be a complete local file path. Make sure the file has been uploaded to the corresponding execution node path.",
        "remoteFileName": "Remote File Name",
        "remoteFileNamePlaceholder": "Download remote FTP server file name, maximum 4096 characters",
        "binaryFile": "Binary File",
        "binaryFileTooltip": "Whether the uploaded file is a binary file"
      },
      "requestConfig": {
        "title": "FTP Request Configuration",
        "uploadDownload": "Upload/Download",
        "uploadFileSource": "File Source",
        "localFile": "Local File",
        "remoteFile": "Remote File",
        "remoteFileTooltip": "Download the corresponding file from the FTP service for upload",
        "remoteUrl": "Remote URL",
        "remoteFileUrlTooltip": "Download the file from the remote URL for upload",
        "remoteFileUrl": "Remote File URL",
        "remoteFileUrlPlaceholder": "Download the file from the remote URL for upload, maximum 4096 characters",
        "remoteFileName": "Remote File Name",
        "remoteFileNamePlaceholder": "Download remote FTP server file name, maximum 4096 characters",
        "remoteFileUrlHints": "File name saved when uploading, if not specified, the original file name is used for storage, maximum 4096 characters",
        "localFileContent": "Local File Content",
        "localFileContentTooltip": "(File size limited to 1MB)"
      },
      "upload": {
        "selectFile": "Select File",
        "fileSizeLimit": "File size cannot exceed 1MB",
        "selectFileTooltip": "Please select local file",
        "fileEncoding": "File Encoding"
      }
    }
  },
  "jmsPlugin": {
    "title": "JMS Plugin",
    "taskConfig": "Task Configuration",
    "executeConfig": "Execute Configuration",
    "notifications": {
      "debugSaveFirst": "Debug requires saving current data first, please save before debugging",
      "autoSaveSuccess": "Auto save successful, executing debug...",
      "createTestSuccess": "Create 'Execute Test' successful, please view details and results in 'Execute'",
      "taskConfigError": "Task configuration data error, please check and correct before saving.",
      "executeConfigError": "Execute configuration data error, please check and correct before saving.",
      "followSuccess": "Follow successful",
      "cancelFollowSuccess": "Cancel follow successful",
      "favouriteSuccess": "Favorite successful",
      "cancelFavouriteSuccess": "Cancel favorite successful",
      "saveSuccess": "Save successful",
      "paramError": "Parameter error"
    },
    "authorizeModal": {
      "title": "Scenario Permission",
      "onTips": "After enabling 'Permission Control', manual authorization of service permissions is required to have corresponding operation permissions for scenarios. 'Permission Control' is enabled by default. Note: If the authorized object does not have parent directory permissions, view permissions will be automatically granted.",
      "offTips": "After enabling 'No Permission Control', all users will be allowed to publicly view and operate the current scenario. Users viewing need to have parent directory permissions for the current scenario."
    },
    "parameterize": {
      "options": {
        "file": "File",
        "dataSource": "Data Source"
      },
      "hints": "To make parameter values in scripts closer to real business data, the system also provides two dynamic value methods. You can choose the parameter value method according to your business needs.",
      "upload": "Upload Parameter File",
      "generated": "Generated Parameter File",
      "source": "Source",
      "selectFile": "Select File",
      "dataSource": "Data Source"
    },
    "uiConfig": {
      "insertFTPRequest": "Insert FTP Request",
      "nameDuplicate": "Name Duplicate",
      "namePlaceholder": "Name, maximum 400 characters",
      "descriptionPlaceholder": "Description, maximum 800 characters",
      "mailSettings": "Mail Settings",
      "protocol": "Protocol",
      "protocolPlaceholder": "Protocol",
      "hostnameOrIP": "Hostname or IP",
      "hostnameOrIPPlaceholder": "Hostname or IP",
      "port": "Port",
      "portPlaceholder": "Port",
      "usernamePassword": "Username/Password",
      "inboxFolder": "Inbox Folder",
      "inboxFolderPlaceholder": "Inbox Folder",
      "securitySettings": "Security Settings",
      "securityFunction": "Security Function",
      "notUse": "Not Use",
      "trustAllCertificates": "Trust All Certificates",
      "useLocalTrustStore": "Use Local Trust Store",
      "executeStartTLS": "Execute StartTLS",
      "overrideSystemSSLTLS": "Override System SSL/TLS Protocol",
      "otherSettings": "Other Settings",
      "other": "Other",
      "getHeadersOnly": "Get Headers Only",
      "deleteMessagesFromServer": "Delete Messages from Server",
      "useMIMEStorage": "Use MIME (Raw) Storage for Messages",
      "numberOfMessagesToRetrieve": "Number of Messages to Retrieve",
      "all": "All",
      "otherOption": "Other",
      "messageCount": "Message Count",
      "messageCountPlaceholder": "Message Count"
    },
    "functionTestDetailJms": {
      "statusCode": "Status Code",
      "duration": "Duration",
      "tabs": {
        "general": "General",
        "requestBody": "Request Body",
        "response": "Response",
        "timeline": "Timeline",
        "assertions": "Assertion Results"
      },
      "ignoreAssertionMessage": "You have enabled ignore assertions, assertions will not be executed this time. If you need to enable assertions, please",
      "executeConfig": "Execute Configuration > Plugin Configuration",
      "closeIgnoreAssertion": "to close the ignore assertion option.",
      "requestHeaders": {
        "general": "General",
        "requestHeaders": "Request Headers",
        "responseHeaders": "Response Headers"
      },
      "responseBody": {
        "beautifyFormat": "Beautify Format",
        "nativeFormat": "Native Format",
        "preview": "Preview"
      },
      "timeline": {
        "dnsLookup": "DNS Lookup",
        "tcpConnection": "TCP Connection",
        "requestSent": "Request Sent",
        "waiting": "Waiting",
        "contentDownload": "Content Download",
        "timeConsumingItems": "Time Consuming Items",
        "totalTimeConsuming": "Total Time Consuming",
        "time": "Time"
      },
      "assertionResult": {
        "view": "View",
        "assertionCondition": "Assertion Condition",
        "assertionResult": "Assertion Result",
        "failureReason": "Failure Reason",
        "extractedValue": "Extracted Value",
        "expectedValue": "Expected Value",
        "noDefineVariable": "No {conditionName} variable defined, execute this condition expression directly",
        "variable": "Variable",
        "expressionEmpty": "Expression is empty, execute this assertion",
        "ignoreExpression": "Operation result not established, ignore this assertion",
        "expressionSuccess": "Operation result established, execute this assertion",
        "extraction": "Extraction",
        "expected": "Expected",
        "conditionExpression": "Condition Expression",
        "conditionResult": "Condition Result",
        "pass": "Pass",
        "typeMap": {
          "STATUS": "Response Status Code",
          "HEADER": "Response Header",
          "BODY": "Response Body",
          "BODY_SIZE": "Response Body Size",
          "SIZE": "Response Size",
          "DURATION": "Duration"
        },
        "conditionMap": {
          "CONTAIN": "Contains",
          "EQUAL": "Equals",
          "GREATER_THAN": "Greater Than",
          "GREATER_THAN_EQUAL": "Greater Than or Equal",
          "IS_EMPTY": "Is Empty (empty string or null value)",
          "IS_NULL": "Is Null",
          "LESS_THAN": "Less Than",
          "LESS_THAN_EQUAL": "Less Than or Equal",
          "NOT_CONTAIN": "Does Not Contain",
          "NOT_EMPTY": "Is Not Empty (non-empty string or null value)",
          "NOT_EQUAL": "Does Not Equal",
          "NOT_NULL": "Is Not Null",
          "REG_MATCH": "Regular Expression Match",
          "XPATH_MATCH": "XPath Match",
          "JSON_PATH_MATCH": "JSONPath Match"
        }
      }
    }
  },
  "ldapPlugin": {
    "title": "LDAP Plugin",
    "taskConfig": "Task Configuration",
    "executeConfig": "Execute Configuration",
    "notifications": {
      "debugSaveFirst": "Debug requires saving current data first, please save before debugging",
      "autoSaveSuccess": "Auto save successful, executing debug...",
      "createTestSuccess": "Create 'Execute Test' successful, please view details and results in 'Execute'",
      "taskConfigError": "Task configuration data error, please check and correct before saving.",
      "executeConfigError": "Execute configuration data error, please check and correct before saving.",
      "followSuccess": "Follow successful",
      "cancelFollowSuccess": "Cancel follow successful",
      "favouriteSuccess": "Favorite successful",
      "cancelFavouriteSuccess": "Cancel favorite successful",
      "saveSuccess": "Save successful",
      "paramError": "Parameter error"
    },
    "authorizeModal": {
      "title": "Scenario Permission",
      "onTips": "After enabling 'Permission Control', manual authorization of service permissions is required to have corresponding operation permissions for scenarios. 'Permission Control' is enabled by default. Note: If the authorized object does not have parent directory permissions, view permissions will be automatically granted.",
      "offTips": "After enabling 'No Permission Control', all users will be allowed to publicly view and operate the current scenario. Users viewing need to have parent directory permissions for the current scenario."
    },
    "comments": {
      "selectScriptModal": "Select Script Modal",
      "importScriptModal": "Import Script Modal",
      "exportScriptModal": "Export Script Modal",
      "authorizeModal": "Show Permission Modal",
      "abortController": "Abort Controller for terminating requests",
      "defaultViewDescription": "Default page view, new scenarios don't show 「Execute Test」, 「Export Script」, 「Follow」, 「Cancel Follow」, 「Favorite」, 「Cancel Favorite」, 「Permission」, 「Refresh」 buttons before saving",
      "scenarioConfigData": "Scenario configuration data",
      "rampUpInterval": "Ramp Up Interval",
      "rampUpThreads": "Ramp Up Threads"
    },
    "uiConfig": {
      "insertLdapRequest": "Insert Ldap Request",
      "supportMultipleLdap": "Support multiple Ldap interfaces simultaneously, but only one Ldap can be enabled for testing at a time.",
      "nameDuplicate": "Name Duplicate",
      "serverConfig": "Server Configuration",
      "hostnameOrIP": "Hostname or IP",
      "hostnameOrIPPlaceholder": "Hostname or IP, maximum 4096 characters",
      "port": "Port",
      "portPlaceholder": "Port (1~65535)",
      "usernamePlaceholder": "Username, maximum 400 characters",
      "passwordPlaceholder": "Password, maximum 4096 characters",
      "rootDn": "Base DN",
      "rootDnPlaceholder": "Base DN, maximum 4096 characters",
      "testConfig": "Test Configuration",
      "testType": "Test Type",
      "uniqueCounter": "Unique Counter Number",
      "customTest": "Custom Test",
      "entryDn": "DN Entry Name",
      "entryDnAddPlaceholder": "Custom add entry name, maximum 4096 characters",
      "entryDnModifyPlaceholder": "Custom modify entry name, maximum 4096 characters",
      "attributeParams": "Attribute Parameters",
      "paramName": "Parameter Name",
      "paramNamePlaceholder": "Parameter name, maximum 400 characters",
      "paramValue": "Parameter Value",
      "paramValuePlaceholder": "Parameter value, maximum 4096 characters",
      "deleteEntry": "Delete Entry",
      "deleteEntryPlaceholder": "Custom delete entry, maximum 4096 characters",
      "searchBase": "Base Name",
      "searchBasePlaceholder": "Custom search entry base name, maximum 4096 characters",
      "searchFilter": "Filter Condition",
      "searchFilterPlaceholder": "Custom search entry filter condition, maximum 4096 characters",
      "maxAttributeParams": "Maximum 50 attribute parameters allowed",
      "defaultPersonEntryInfo": "Default person entry information for non-custom tests",
      "defaultTestTypeLogic": "Logic description for non-custom test types",
      "defaultLogic": {
        "add": "Add: First add default person entry information, then delete after completion.",
        "modify": "Modify: First add default person entry information, execute modify operation after successful addition, then delete.",
        "search": "Search: First add default person entry information, execute search operation after successful addition, then delete.",
        "delete": "Delete: First add default person entry information, then execute delete operation after successful addition."
      }
    }
  },
  "mailPlugin": {
    "title": "Mail Plugin",
    "taskConfig": "Task Configuration",
    "executeConfig": "Execute Configuration",
    "notifications": {
      "debugSaveFirst": "Debug requires saving current data first, please save before debugging",
      "autoSaveSuccess": "Auto save successful, executing debug...",
      "createTestSuccess": "Create 'Execute Test' successful, please view details and results in 'Execute'",
      "taskConfigError": "Task configuration data error, please check and correct before saving.",
      "executeConfigError": "Execute configuration data error, please check and correct before saving.",
      "followSuccess": "Follow successful",
      "cancelFollowSuccess": "Cancel follow successful",
      "favouriteSuccess": "Favorite successful",
      "cancelFavouriteSuccess": "Cancel favorite successful",
      "saveSuccess": "Save successful",
      "paramError": "Parameter error",
      "selectMailScript": "Please select MAIL plugin script"
    },
    "authorizeModal": {
      "title": "Scenario Permission",
      "onTips": "After enabling 'Permission Control', manual authorization of service permissions is required to have corresponding operation permissions for scenarios. 'Permission Control' is enabled by default. Note: If the authorized object does not have parent directory permissions, view permissions will be automatically granted.",
      "offTips": "After enabling 'No Permission Control', all users will be allowed to publicly view and operate the current scenario. Users viewing need to have parent directory permissions for the current scenario."
    },
    "comments": {
      "selectScriptModal": "Select Script Modal",
      "importScriptModal": "Import Script Modal",
      "exportScriptModal": "Export Script Modal",
      "authorizeModal": "Show Permission Modal",
      "abortController": "Abort Controller for terminating requests",
      "defaultViewDescription": "Default page view, new scenarios don't show 「Execute Test」, 「Export Script」, 「Follow」, 「Cancel Follow」, 「Favorite」, 「Cancel Favorite」, 「Permission」, 「Refresh」 buttons before saving",
      "scenarioConfigData": "Scenario configuration data",
      "rampUpInterval": "Ramp Up Interval",
      "rampUpThreads": "Ramp Up Threads"
    },
    "functionTestDetailMail": {
      "protocol": "Protocol",
      "totalEmails": "Total {count} emails",
      "readEmails": "Read {count} emails",
      "duration": "Duration",
      "request": "Request",
      "response": "Response",
      "responseHeaders": "Response Headers",
      "responseBody": "Response Body",
      "email": "Email {index}",
      "requestContent": "Request Content"
    }
  },
  "mockPlugin": {
    "title": "Mock Plugin",
    "chartLabels": {
      "rows": "Rows",
      "concurrency": "Concurrency",
      "tps": "Rows per Second (TPS)",
      "errors": "Errors",
      "writeData": "Write Data",
      "uploadProgress": "Upload Result File Progress",
      "perSecond": "/sec"
    },
    "chartTypes": {
      "byThroughput": "By Throughput",
      "byResponseTime": "By Response Time",
      "byRows": "By Rows",
      "byErrors": "By Errors",
      "byErrorRate": "By Error Rate",
      "byUpload": "By Upload"
    },
    "metrics": {
      "writeBytes": "Write Data Size",
      "writeRate": "Write Data Rate",
      "transactions": "Rows",
      "errors": "Errors",
      "errorRate": "Error Rate",
      "iterations": "Iterations",
      "tps": "Rows per Second",
      "tranMean": "Average",
      "tranMin": "Min",
      "tranMax": "Max"
    }
  },
  "smtpPlugin": {
    "title": "SMTP Plugin",
    "taskConfig": "Task Configuration",
    "executeConfig": "Execute Configuration",
    "notifications": {
      "debugSaveFirst": "Debug requires saving current data first, please save before debugging",
      "autoSaveSuccess": "Auto save successful, executing debug...",
      "createTestSuccess": "Create \"Execute Test\" successful, please check details and results in \"Execute\"",
      "taskConfigError": "Task configuration data error, please check and correct before saving.",
      "executeConfigError": "Execute configuration data error, please check and correct before saving.",
      "followSuccess": "Follow successful",
      "cancelFollowSuccess": "Cancel follow successful",
      "favouriteSuccess": "Favorite successful",
      "cancelFavouriteSuccess": "Cancel favorite successful",
      "saveSuccess": "Save successful",
      "paramError": "Parameter error",
      "selectSmtpScript": "Please select SMTP plugin script"
    },
    "authorizeModal": {
      "title": "Scenario Permission",
      "onTips": "After enabling \"Permission Control\", manual authorization of service permissions is required to have scenario operation permissions. \"Permission Control\" is enabled by default. Note: If the authorized object does not have parent directory permissions, view permissions will be automatically granted.",
      "offTips": "After enabling \"No Permission Control\", all users will be allowed to publicly view and operate the current scenario. Users viewing must also have parent directory permissions for the current scenario."
    },
    "comments": {
      "selectScriptModal": "Select script modal",
      "importScriptModal": "Import script modal",
      "exportScriptModal": "Export script modal",
      "authorizeModal": "Show permission modal",
      "abortController": "Instance for terminating requests",
      "defaultViewDescription": "Default display page view, new scenarios do not show 「Execute Test」, 「Export Script」, 「Follow」, 「Cancel Follow」, 「Favorite」, 「Cancel Favorite」, 「Permission」, 「Refresh」 buttons before saving",
      "scenarioConfigData": "Scenario detail information",
      "rampUpInterval": "Ramp Up Interval",
      "rampUpThreads": "Ramp Up Threads"
    },
    "functionTestDetailSmtp": {
      "contentType": {
        "text": "Text",
        "emlFile": "EML File",
        "attachment": "Attachment"
      },
      "metrics": {
        "duration": "Duration",
      },
      "tabs": {
        "request": "Request",
        "response": "Response"
      },
      "requestHeaders": {
        "headers": "Request Headers",
        "content": "Request Content"
      }
    },
    "uiConfig": {
      "title": "Insert SMTP",
      "description": "Supports orchestrating multiple SMTP interfaces simultaneously, but only one SMTP is allowed to be enabled for testing at a time.",
      "serverConfig": {
        "title": "Server Configuration",
        "connectionTimeout": "Connection Timeout",
        "connectionTimeoutPlaceholder": "Connection timeout, maximum 24 hours",
        "readTimeout": "Read Timeout",
        "readTimeoutPlaceholder": "Read timeout, maximum 24 hours",
        "security": {
          "noSecurity": "No Security",
          "useSecurity": "Use Security"
        }
      },
      "securityConfig": {
        "none": "No Security",
        "useSSL": "Use SSL",
        "useStartTLS": "Use StartTLS"
      },
      "emlMsgOpt": {
        "n": "Email Content",
        "y": "EML File (.eml)"
      },
      "emlTypeOpt": {
        "path": "Storage Path",
        "file": "Upload File"
      },
      "attachmentTypeOpt": {
        "path": "Storage Path",
        "file": "Upload File"
      },
      "certificateTypeOpt": {
        "path": "Storage Path",
        "file": "Upload File"
      },
      "certificateOpt": {
        "all": "Trust All Certificates",
        "local": "Use Local Trust Store"
      },
      "emailConfig": {
        "sendAddress": "Send Address",
        "receiverAddress": "Receiver Address",
        "sendConfig": "Send Configuration",
        "receiverPlaceholder": "Address To",
        "title": "Email Settings",
        "mailFrom": "Email Sender",
        "replyTo": "Reply Address",
        "replyToPlaceholder": "Reply Address (Address Reply-To)",
        "receiverTo": "Recipients",
        "receiverCC": "CC Address",
        "receiverCCPlaceholder": "CC Address (Address To CC)",
        "receiverBCC": "BCC Address",
        "receiverBCCPlaceholder": "BCC Address (Address To BCC)"
      },
      "mailContent": {
        "namePlaceholder": "Name, maximum 400 characters",
        "descriptionPlaceholder": "Description, maximum 800 characters (optional)",
        "nameTip": "Name Duplicate",
        "themeConfig": "Theme Configuration",
        "title": "Email Content Settings",
        "subject": "Email Subject",
        "themePlaceholder": "Theme",
        "disableSubject": "Disable subject",
        "subjectHints": "If the subject of the email is disabled, the email will not have a subject line.",
        "addHeader": "Add header",
        "headerNamePlaceholder": "Header name",
        "headerValuePlaceholder": "Header value",
        "contentConfig": "Content Configuration",
        "mailContent": "Email Content",
        "attachment": "Attachment",
        "selectAttachment": "Select attachment file",
        "attachmentHints": "Attachment file path, multiple file paths can be separated by commas.",
        "emlFile": "EML File (.eml)",
        "selectEmlFile": "Select EML File",
        "message": "Email Content",
        "includeTimestamp": "Include timestamp in subject",
        "suppressSubject": "Suppress subject",
        "sendEmlMessage": "Send EML Message",
        "plainBody": "Plain text format",
        "messageSizeStatistics": "Message size statistics",
        "enableDebugLogging": "Enable debug logging",
        "localAttachFiles": "Local attachment files",
        "localEmlMessageFile": "Local EML message file",
        "localEmlMessageBase64Content": "Local EML message Base64 content",
        "headerFields": "Header fields",
        "localAttachBase64Contents": "Local attachment Base64 contents",
        "comments": {
          "sendEmlMessage": "Whether to use EML file as message content",
          "localEmlMessageFile": "EML file path",
          "localEmlMessageBase64Content": "EML file base64",
          "defaultEnabled": "If enabled field is not set, default value is true"
        }
      },
      "serviceConfig": {
        "title": "Server Configuration",
        "hostnameOrIP": "Hostname or IP",
        "hostnameOrIPPlaceholder": "Hostname or IP, maximum 4096 characters",
        "port": "Port",
        "portPlaceholder": "Port (1~65535)",
        "security": "Security",
        "trustCertificate": "Trust Certificate",
        "enforceStartTLS": "Enforce StartTLS",
        "localCertificate": "Local Certificate",
        "localCertificateHints": "Local certificate file must be uploaded to the corresponding execution node path.",
        "localCertificateBase64Content": "Store local certificate Base64 content in script.",
        "tlsProtocols": "Overwritten SSL/TLS protocols",
        "overrideSystemSSLTLS": "Override system SSL/TLS protocols"
      },
      "authenticationConfig": {
        "title": "Authentication Configuration",
        "enableAuthentication": "Enable Authentication",
      },
      "otherConfig": {
        "title": "Other Configuration",
        "messageSizeStatistics": "Calculate message size",
        "enableDebugLogging": "Enable debug logging"
      },
      "upload": {
        "selectFile": "Select File"
      }
    }
  },
  "tcpPlugin": {
    "notifications": {
      "debugSaveRequired": "Debug requires saving current data first, please save before executing debug",
      "autoSaveSuccess": "Auto save successful, executing debug...",
      "createTestSuccess": "Create 'Execute Test' successful, please view details and results in 'Execute'",
      "saveSuccess": "Save successful",
      "followSuccess": "Follow successful",
      "cancelFollowSuccess": "Cancel follow successful",
      "favouriteSuccess": "Favorite successful",
      "cancelFavouriteSuccess": "Cancel favorite successful",
      "taskConfigError": "Task configuration data error, please check and correct before saving.",
      "executeConfigError": "Execute configuration data error, please check and correct before saving.",
      "parameterError": "Parameter error"
    },
    "comments": {
      "selectModalVisible": "Select script modal",
      "uploadVisible": "Import script modal",
      "exportModalVisible": "Export script modal",
      "authVisible": "Show permission modal",
      "controller": "Instance for terminating requests",
      "defaultViewMode": "Default display page view, new scenarios do not show 「Execute Test」 「Export Script」, 「Follow」, 「Cancel Follow」, 「Favorite」, 「Cancel Favorite」, 「Permission」, 「Refresh」 buttons before saving",
      "scenarioConfigData": "Scenario detail information",
      "rampUpInterval": "Ramp up interval",
      "rampUpThreads": "Ramp up threads"
    },
    "permissions": {
      "title": "Scenario Permissions",
      "onTips": "After enabling 'Permission Control', manual authorization of service permissions is required to have scenario operation permissions. Permission control is enabled by default. Note: If the authorized object does not have parent directory permissions, view permissions will be automatically granted.",
      "offTips": "After enabling 'No Permission Control', all users will be allowed to publicly view and operate the current scenario. Users viewing must also have parent directory permissions for the current scenario."
    },
    "uiConfig": {
      "title": "Insert TCP Request",
      "description": "Supports orchestrating multiple TCP interfaces simultaneously, but only one TCP is allowed to be enabled for testing at a time.",
      "comments": {
        "onlyOneEnabled": "Only one can be enabled",
        "checkCloneNameExists": "Check if clone name already exists"
      },
      "form": {
        "nameDuplicate": "Name Duplicate",
        "namePlaceholder": "Name, maximum 400 characters",
        "descriptionPlaceholder": "Description, maximum 800 characters",
        "none": "None"
      },
      "serverConfig": {
        "title": "Server Configuration",
        "hostnameOrIP": "Hostname or IP",
        "hostnameOrIPPlaceholder": "Hostname or IP, maximum 4096 characters",
        "port": "Port",
        "portPlaceholder": "Port (1~65535)",
        "connectionTimeout": "Connection Timeout",
        "connectionTimeoutPlaceholder": "Connection timeout, maximum 24 hours",
        "responseTimeout": "Response Timeout",
        "responseTimeoutPlaceholder": "Read timeout, maximum 24 hours"
      },
      "requestConfig": {
        "title": "Request Configuration",
        "tcpClientClassName": "TCP Client Class Name",
        "tcpClientClassNamePlaceholder": "TCP client class name, maximum 4096 characters",
        "socketConnectionConfig": "Socket Connection Configuration",
        "reuseConnection": "Reuse Connection",
        "setNoDelay": "Set No Delay",
        "messageDataEncoding": "Message Data Encoding",
        "messageDataEncodingPlaceholder": "Message data encoding",
        "messageData": "Message Data",
        "messageDataPlaceholder": "Message data, maximum {maxLength} characters",
        "messageDataError": "Maximum {maxLength} characters supported, currently {currentLength} characters",
        "charset": "Charset",
        "eolByteValue": "EOL Byte Value",
        "eomByteValue": "EOM Byte Value",
        "binaryDataLengthPrefix": "Number of bytes for binary data length prefix"
      }
    }
  },
  "websocketPlugin": {
    "notifications": {
      "debugSaveRequired": "Debug requires saving current data first, please save before executing debug",
      "autoSaveSuccess": "Auto save successful, executing debug...",
      "createTestSuccess": "Create 'Execute Test' successful, please view details and results in 'Execute'",
      "saveSuccess": "Save successful",
      "followSuccess": "Follow successful",
      "cancelFollowSuccess": "Cancel follow successful",
      "favouriteSuccess": "Favorite successful",
      "cancelFavouriteSuccess": "Cancel favorite successful",
      "taskConfigError": "Task configuration data error, please check and correct before saving.",
      "executeConfigError": "Execute configuration data error, please check and correct before saving.",
      "parameterError": "Parameter error"
    },
    "comments": {
      "selectModalVisible": "Select script modal",
      "uploadVisible": "Import script modal",
      "exportModalVisible": "Export script modal",
      "authVisible": "Show permission modal",
      "controller": "Instance for terminating requests",
      "defaultViewMode": "Default display page view, new scenarios do not show 「Execute Test」 「Export Script」, 「Follow」, 「Cancel Follow」, 「Favorite」, 「Cancel Favorite」, 「Permission」, 「Refresh」 buttons before saving",
      "scenarioConfigData": "Scenario detail information",
      "rampUpInterval": "Ramp up interval",
      "rampUpThreads": "Ramp up threads"
    },
    "permissions": {
      "title": "Scenario Permissions",
      "onTips": "After enabling 'Permission Control', manual authorization of service permissions is required to have scenario operation permissions. Permission control is enabled by default. Note: If the authorized object does not have parent directory permissions, view permissions will be automatically granted.",
      "offTips": "After enabling 'No Permission Control', all users will be allowed to publicly view and operate the current scenario. Users viewing must also have parent directory permissions for the current scenario."
    },
    "tabs": {
      "taskConfig": "Task Configuration",
      "executeConfig": "Execute Configuration"
    },
    "uiConfig": {
      "title": "Insert WebSocket Interface",
      "selectTitle": "Select WebSocket Interface",
      "description": "Supports orchestrating multiple WebSocket interfaces simultaneously, but only one WebSocket is allowed to be enabled for testing at a time."
    },
    "functionTestDetailWesocket": {
      "runtime": "0ms",
      "tags": {
        "basedOnEOL": "Based on EOL",
        "basedOnEOM": "Based on EOM",
        "basedOnLengthPrefix": "Based on Length Prefix"
      },
      "duration": "Duration",
      "tabs": {
        "request": "Request",
        "response": "Response"
      }
    },
    "form": {
      "nameDuplicate": "Name Duplicate",
      "namePlaceholder": "Name, maximum 400 characters",
      "descriptionPlaceholder": "Description, maximum 800 characters",
      "none": "None"
    },
    "connectionInfo": {
      "title": "Connection Information",
      "urlFormatError": "URL format error",
      "urlPlaceholder": "URL, maximum 2000 characters. Example: ws://dev-apis.xcan.cloud/wpush/ws/mcenterReceive"
    },
    "parameters": {
      "requestParameters": "Request Parameters",
      "requestHeaders": "Request Headers",
      "parameterNamePlaceholder": "Parameter name, maximum 400 characters",
      "parameterValuePlaceholder": "Parameter value, maximum 4096 characters"
    },
    "messageMode": {
      "title": "Message Mode",
      "placeholder": "Message Mode"
    },
    "sendData": {
      "encodingTitle": "Send Data Encoding",
      "encodingPlaceholder": "Send Data Encoding",
      "title": "Send Data"
    },
    "parametric": {
      "title": "Parameterization"
    },
    "assertion": {
      "title": "Assertion",
      "tooltip": "Assert received message"
    },
    "selectApiModal": {
      "title": "Select Interface",
      "treeSelect": {
        "label": "Project/Service",
        "placeholder": "Please select project/service"
      },
      "input": {
        "placeholder": "Search interface name"
      },
      "fields": {
        "url": "URL"
      },
      "referenced": "(Referenced)",
      "buttons": {
        "link": "Reference"
      }
    },
    "serverUri": {
      "default": "Default"
    },
    "websocketConfigs": {
      "urlFormatError": "URL format error",
      "form": {
        "none": "None",
        "nameDuplicate": "Name Duplicate",
        "namePlaceholder": "Name, maximum 400 characters",
        "descriptionPlaceholder": "Description, maximum 800 characters"
      },
      "connectionInfo": {
        "title": "Connection Information",
        "urlPlaceholder": "Please enter URL, e.g. ws://dev-apis.xcan.cloud/wpush/ws/mcenterReceive",
        "messageModePlaceholder": "Message Mode"
      },
      "parameters": {
        "requestParameters": "Request Parameters",
        "requestHeaders": "Request Headers"
      },
      "sendInfo": {
        "title": "Send Information",
        "encodingPlaceholder": "Send Information Encoding"
      },
      "assertion": {
        "title": "Assertion",
        "tooltip": "Assert received message"
      },
      "paramsInput": {
        "parameterNamePlaceholder": "Parameter name, maximum 400 characters",
        "parameterValuePlaceholder": "Parameter value, maximum 4096 characters"
      }
    }
  },
  "genDataPlugin": {
    "tabs": {
      "csv": "CSV",
      "json": "JSON",
      "sql": "SQL",
      "xml": "XML",
      "excel": "Excel",
      "custom": "Custom",
      "tab": "Tab"
    },
    "actions": {
      "select": "Select Script",
      "createExecution": "Create Execution"
    },
    "messages": {
      "saveSuccess": "Saved Successfully",
      "deleteSuccess": "Deleted Successfully",
      "importSuccess": "Imported Successfully",
      "exportSuccess": "Exported Successfully",
      "operationSuccess": "Operation Successful",
      "operationFailed": "Operation Failed",
      "generateDataSuccess": "Data generation created successfully, please check progress and results in 'Execution'.",
      "generateDataSuccessWithName": "Data generation 「{name}」 created successfully, please check progress and results in 'Execution'.",
      "confirmDelete": "Confirm Delete",
      "pleaseSelect": "Please Select",
      "pleaseInput": "Please Input"
    },
    "dataConfig": {
      "title": "Data Configuration",
      "fieldName": "Field Name",
      "fieldType": "Field Type",
      "fieldValue": "Field Value",
      "fieldLength": "Field Length",
      "fieldFormat": "Field Format",
      "fieldRequired": "Required",
      "fieldDefault": "Default Value",
      "fieldRule": "Field Rule"
    },
    "execConfig": {
      "title": "Execution Configuration",
      "execMode": "Execution Mode",
      "execCount": "Execution Count",
      "execInterval": "Execution Interval",
      "execTimeout": "Execution Timeout",
      "execRetry": "Retry Count",
      "execParallel": "Parallel Execution"
    },
    "storeConfig": {
      "title": "Storage Configuration",
      "storeType": "Storage Type",
      "storePath": "Storage Path",
      "storeFormat": "Storage Format",
      "storeCompress": "Compress",
      "storeEncrypt": "Encrypt"
    },
    "dataSet": {
      "format": "Format",
      "lineEnding": "Line Ending",
      "includeHeader": "Include Header",
      "escapeChar": "Escape Character",
      "quoteChar": "Quote Character",
      "separatorChar": "Separator Character",
      "includeNull": "Include Null Fields",
      "rowsToArray": "Convert to Array",
      "tableName": "Storage Table Name",
      "batchInsert": "Generate Batch INSERT",
      "rootElement": "Root Element Name",
      "recordElement": "Record Element Name",
      "validation": {
        "singleChar": "Please enter a single character",
        "tableNameRequired": "Please enter storage table name"
      }
    },
    "DatasourceStoreConfig": {
      "batchRows": "Batch Rows",
      "batchInsert": "Batch Insert",
      "selectDatasource": "Select Datasource",
      "databaseType": "Database Type",
      "driverClassName": "Driver Class Name",
      "hints": {
        "batchRows": "Number of rows to generate, store or send in each batch, default 1, maximum 10000.",
        "batchInsert": "When set to true, {batchRows} rows will be merged into one INSERT statement",
        "driverClassName": "Default driver class name will be used if not specified"
      },
      "validation": {
        "selectDatasource": "Please select datasource",
        "selectDatabaseType": "Please select database type"
      }
    },
    "excuteConfig": {
      "scriptName": "Script Name",
      "execThreads": "Execution Threads",
      "selectMockNode": "Select Mock Node",
      "execPriority": "Execution Priority",
      "onError": "On Error",
      "storageMethod": "Storage Method",
      "rows": "Rows",
      "hints": {
        "execThreads": "Default 1 thread, maximum 1000.",
        "execPriority": "Higher priority executes first, range: 0~2147483647, higher value means higher priority.",
        "rows": "Total number of data rows to generate, maximum 100000000000."
      },
      "errorActions": {
        "continue": "Continue",
        "stop": "Stop",
        "stopNow": "Stop Now"
      },
      "storageTips": {
        "datasource": "Datasource storage, writes generated data to database.",
        "dataspace": "Data space storage, stores data in AngusTester application 'Data' -> 'Space'.",
        "local": "Local storage, generated data will be stored as files on execution nodes, you can enter execution details page to download data files. Default storage path: ${AGENT_HOME}/data/exec/「ExecutionID」/data.「DataFormat」.",
        "pushThird": "Push to third-party interface, supports sending generated data as text or file to an Http interface."
      },
      "validation": {
        "scriptNameRequired": "Please enter data script name",
        "selectNode": "Please select node"
      },
      "placeholders": {
        "scriptName": "Enter data script name, limited to 200 characters"
      }
    },
    "FuncModal": {
      "title": "Select Mock Function"
    },
    "localStoreConfig": {
      "batchRows": "Batch Rows",
      "defaultStoragePath": "Default Storage Path",
      "hints": {
        "batchRows": "Number of rows to generate, store or send in each batch, default 1, maximum 10000.",
        "defaultStoragePath": "Storage path for generated data files on execution nodes."
      }
    },
    "pushThirdStoreConfig": {
      "batchRows": "Batch Rows",
      "requestParams": "Request Parameters",
      "requestBody": "Request Body",
      "authentication": "Authentication",
      "contentType": "Content-Type",
      "token": "Token",
      "basicAuth": "Basic Auth",
      "bearerToken": "Bearer Token",
      "hints": {
        "batchRows": "Number of rows to generate, store or send in each batch, default 1, maximum 10000."
      },
      "form": {
        "paramName": "Parameter Name",
        "paramValue": "Parameter Value",
        "paramNamePlaceholder": "Parameter Name",
        "filePosition": "File Position"
      },
      "validation": {
        "enterParamName": "Please enter parameter name",
        "paramNameDuplicate": "Parameter name already exists",
        "enterParamValue": "Please enter parameter value",
        "enterApiAddress": "Please enter API address"
      },
      "placeholders": {
        "apiAddress": "API Address"
      }
    },
    "spaceStoreConfig": {
      "selectSpace": "Select Space",
      "batchRows": "Batch Rows",
      "hints": {
        "batchRows": "Number of rows to generate, store or send in each batch, default 1, maximum 10000."
      },
      "validation": {
        "selectSpace": "Please select space"
      }
    },
    "viewScriptModal": {
      "title": "View Script"
    },
    "execInfo": {
      "byThroughput": "By Throughput",
      "byResponseTime": "By Response Time",
      "byRows": "By Rows",
      "byErrorCount": "By Error Count",
      "byErrorRate": "By Error Rate",
      "byUpload": "By Upload",
      "writeDataSize": "Write Data Size",
      "writeDataRate": "Write Data Rate",
      "rows": "Rows",
      "errorCount": "Error Count",
      "errorRate": "Error Rate",
      "iterations": "Iterations",
      "rowsPerSecond": "Rows Per Second",
      "average": "Average",
      "minimum": "Minimum",
      "maximum": "Maximum",
      "concurrency": "Concurrency",
      "rowsPerSecondTps": "Rows Per Second (TPS)",
      "error": "Error",
      "writeData": "Write Data",
      "uploadResultFileProgress": "Upload Result File Progress"
    }
  },
  "xcan_exec_chartConfig": {
    "duration": "Duration",
    "errors": "Errors",
    "iterations": "Iterations",
    "sampleCount": "Sample Count",
    "requestCount": "Request Count",
    "transactionCount": "Transaction Count",
    "readDataSize": "Read Data Size",
    "writeDataSize": "Write Data Size",
    "queriesPerSecond": "Queries Per Second",
    "transactionsPerSecond": "Transactions Per Second",
    "downloadPerSecond": "Download/Second",
    "uploadPerSecond": "Upload/Second",
    "average": "Average",
    "minimum": "Minimum",
    "maximum": "Maximum",
    "p50": "P50",
    "p75": "P75",
    "p90": "P90",
    "p95": "P95",
    "p99": "P99",
    "p999": "P999",
    "errorRate": "Error Rate",
    "threadCount": "Thread Count",
    "activeThreadCount": "Active Thread Count",
    "maxThreadCount": "Max Thread Count"
  }
}


